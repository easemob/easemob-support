(this["webpackJsonp"] = this["webpackJsonp"] || []).push([["app-service"],[
/* 0 */
/*!************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/main.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));\n__webpack_require__(/*! uni-pages */ 6);\nvar _App = _interopRequireDefault(__webpack_require__(/*! ./App */ 50));\nvar _store = _interopRequireDefault(__webpack_require__(/*! ./store */ 46));\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 26));\n__webpack_require__(/*! ./uni.promisify.adaptor */ 60);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n_vue.default.config.productionTip = false;\n_vue.default.prototype.$store = _store.default;\n_App.default.mpType = 'app';\nvar app = new _vue.default(_objectSpread({}, _App.default));\napp.$mount();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vbWFpbi5qcyJdLCJuYW1lcyI6WyJWdWUiLCJjb25maWciLCJwcm9kdWN0aW9uVGlwIiwicHJvdG90eXBlIiwiJHN0b3JlIiwic3RvcmUiLCJBcHAiLCJtcFR5cGUiLCJhcHAiLCIkbW91bnQiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUFtQjtBQUNuQjtBQUdBO0FBQ0E7QUFBZ0M7QUFBQTtBQUNoQ0EsWUFBRyxDQUFDQyxNQUFNLENBQUNDLGFBQWEsR0FBRyxLQUFLO0FBQ2hDRixZQUFHLENBQUNHLFNBQVMsQ0FBQ0MsTUFBTSxHQUFHQyxjQUFLO0FBQzVCQyxZQUFHLENBQUNDLE1BQU0sR0FBRyxLQUFLO0FBQ2xCLElBQU1DLEdBQUcsR0FBRyxJQUFJUixZQUFHLG1CQUNkTSxZQUFHLEVBQ047QUFDRkUsR0FBRyxDQUFDQyxNQUFNLEVBQUUiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztpbXBvcnQgQXBwIGZyb20gJy4vQXBwJ1xuaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnO1xuXG5cbmltcG9ydCBWdWUgZnJvbSAndnVlJ1xuaW1wb3J0ICcuL3VuaS5wcm9taXNpZnkuYWRhcHRvcidcblZ1ZS5jb25maWcucHJvZHVjdGlvblRpcCA9IGZhbHNlXG5WdWUucHJvdG90eXBlLiRzdG9yZSA9IHN0b3JlO1xuQXBwLm1wVHlwZSA9ICdhcHAnXG5jb25zdCBhcHAgPSBuZXcgVnVlKHtcbiAgLi4uQXBwXG59KVxuYXBwLiRtb3VudCgpXG5cblxuXG5cblxuXG5cblxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 2 */
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 3);
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 3 */
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 4)["default"];
var toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ 5);
function _toPropertyKey(arg) {
  var key = toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 4 */
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 5 */
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 4)["default"];
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 6 */
/*!***************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/pages.json ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

if (typeof Promise !== 'undefined' && !Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(function (value) {
      return promise.resolve(callback()).then(function () {
        return value;
      });
    }, function (reason) {
      return promise.resolve(callback()).then(function () {
        throw reason;
      });
    });
  };
}
if (typeof uni !== 'undefined' && uni && uni.requireGlobal) {
  var global = uni.requireGlobal();
  ArrayBuffer = global.ArrayBuffer;
  Int8Array = global.Int8Array;
  Uint8Array = global.Uint8Array;
  Uint8ClampedArray = global.Uint8ClampedArray;
  Int16Array = global.Int16Array;
  Uint16Array = global.Uint16Array;
  Int32Array = global.Int32Array;
  Uint32Array = global.Uint32Array;
  Float32Array = global.Float32Array;
  Float64Array = global.Float64Array;
  BigInt64Array = global.BigInt64Array;
  BigUint64Array = global.BigUint64Array;
}
if (uni.restoreGlobal) {
  uni.restoreGlobal(weex, plus, setTimeout, clearTimeout, setInterval, clearInterval);
}
__definePage('pages/index/index', function () {
  return Vue.extend(__webpack_require__(/*! pages/index/index.vue?mpType=page */ 7).default);
});

/***/ }),
/* 7 */
/*!**************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/pages/index/index.vue?mpType=page ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=2be84a3c&mpType=page */ 8);\n/* harmony import */ var _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js&mpType=page */ 10);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if([\"default\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 49);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null,\n  false,\n  _index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/index/index.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBNkg7QUFDN0g7QUFDb0U7QUFDTDs7O0FBRy9EO0FBQ2dOO0FBQ2hOLGdCQUFnQixpTkFBVTtBQUMxQixFQUFFLHNGQUFNO0FBQ1IsRUFBRSwyRkFBTTtBQUNSLEVBQUUsb0dBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsK0ZBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zLCByZWN5Y2xhYmxlUmVuZGVyLCBjb21wb25lbnRzIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJiZTg0YTNjJm1wVHlwZT1wYWdlXCJcbnZhciByZW5kZXJqc1xuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgZmFsc2UsXG4gIGNvbXBvbmVudHMsXG4gIHJlbmRlcmpzXG4pXG5cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFnZXMvaW5kZXgvaW5kZXgudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/*!********************************************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/pages/index/index.vue?vue&type=template&id=2be84a3c&mpType=page ***!
  \********************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_11_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--11-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=2be84a3c&mpType=page */ 9);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_11_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_11_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_11_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_11_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 9 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--11-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/pages/index/index.vue?vue&type=template&id=2be84a3c&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    { staticClass: _vm._$s(0, "sc", "content"), attrs: { _i: 0 } },
    [
      _c("image", { staticClass: _vm._$s(1, "sc", "logo"), attrs: { _i: 1 } }),
      _c(
        "view",
        { staticClass: _vm._$s(2, "sc", "text-area"), attrs: { _i: 2 } },
        [
          _c(
            "text",
            { staticClass: _vm._$s(3, "sc", "title"), attrs: { _i: 3 } },
            [_vm._v(_vm._$s(3, "t0-0", _vm._s(_vm.loginStatus)))]
          ),
        ]
      ),
      _c(
        "view",
        { staticClass: _vm._$s(4, "sc", "input_container"), attrs: { _i: 4 } },
        [
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.loginId,
                expression: "loginId",
              },
            ],
            attrs: { _i: 5 },
            domProps: { value: _vm._$s(5, "v-model", _vm.loginId) },
            on: {
              input: function ($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.loginId = $event.target.value
              },
            },
          }),
        ]
      ),
      _c(
        "view",
        { staticClass: _vm._$s(6, "sc", "input_container"), attrs: { _i: 6 } },
        [
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.loginPwd,
                expression: "loginPwd",
              },
            ],
            attrs: { _i: 7 },
            domProps: { value: _vm._$s(7, "v-model", _vm.loginPwd) },
            on: {
              input: function ($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.loginPwd = $event.target.value
              },
            },
          }),
        ]
      ),
      _c("view", [
        _c("button", { attrs: { _i: 9 }, on: { click: _vm.loginIM } }),
      ]),
      _c("view", [
        _c("button", { attrs: { _i: 11 }, on: { click: _vm.closeIM } }),
      ]),
      _c("view", [
        _c("button", { attrs: { _i: 13 }, on: { click: _vm.sendTextMessage } }),
      ]),
    ]
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 10 */
/*!**************************************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/pages/index/index.vue?vue&type=script&lang=js&mpType=page ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--7-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js&mpType=page */ 11);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if([\"default\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWd1QixDQUFnQixzdEJBQUcsRUFBQyIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3Z1ZS1jbGktcGx1Z2luLXVuaS9wYWNrYWdlcy93ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTctMSEuLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stdW5pLWFwcC1sb2FkZXIvdXNpbmctY29tcG9uZW50cy5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--7-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/pages/index/index.vue?vue&type=script&lang=js&mpType=page ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ 13));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 15));\nvar _index = __webpack_require__(/*! @/EaseIM/index.js */ 16);\nvar _emApis = __webpack_require__(/*! @/EaseIM/emApis */ 29);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar _emConnect = (0, _emApis.emConnect)(),\n  loginWithPassword = _emConnect.loginWithPassword,\n  loginWithAccessToken = _emConnect.loginWithAccessToken,\n  closeEaseIM = _emConnect.closeEaseIM;\nvar _emMessages = (0, _emApis.emMessages)(),\n  sendDisplayMessages = _emMessages.sendDisplayMessages;\nvar _default = {\n  data: function data() {\n    return {\n      title: 'Hello',\n      loginId: '17607928053',\n      loginPwd: '123456',\n      storageData: uni.getStorageSync('EM_TOKEN'),\n      sendMsgTimmer: null,\n      seddMsgMaxTimeout: 5000\n    };\n  },\n  onLoad: function onLoad() {},\n  computed: {\n    loginStatus: function loginStatus() {\n      return this.$store.getters.loginStatus;\n    }\n  },\n  methods: {\n    loginIM: function loginIM() {\n      var _this = this;\n      loginWithPassword(this.loginId, this.loginPwd).then(function (res) {\n        __f__(\"log\", '>>>>token获取成功', res, \" at pages/index/index.vue:51\");\n        _this.setUserAccessToken(_this.loginId, res.accessToken);\n      }).catch(function (err) {\n        __f__(\"log\", '>>>>>>fail', err, \" at pages/index/index.vue:55\");\n      });\n    },\n    closeIM: function closeIM() {\n      closeEaseIM();\n      this.$store.commit('SET_LOGIN_STATUS', false);\n    },\n    sendTextMessage: function sendTextMessage() {\n      var _this2 = this;\n      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var params, res;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                /*优化点二： 发送消息时，如果某条消息大于5s没有收到成功回调，则补充连接IM */\n                _this2.sendMsgTimmer && clearTimeout(_this2.sendMsgTimmer);\n                _this2.sendMsgTimmer = setTimeout(function () {\n                  __f__(\"log\", '>>>>>该条消息超时时间大于5s', _index.EMClient.sock.readyState, \" at pages/index/index.vue:66\");\n                  uni.showToast({\n                    icon: 'none',\n                    title: \"\\u8BE5\\u6D88\\u606F\\u8D85\\u65F6\\u672A\\u54CD\\u5E94\".concat(_index.EMClient.sock.readyState, \"\\u6267\\u884C\\u91CD\\u65B0\\u767B\\u5F55\")\n                  });\n                  closeEaseIM();\n                  _this2.compensationLoginIM();\n                }, _this2.seddMsgMaxTimeout);\n                params = {\n                  type: 'txt',\n                  msg: 'test message!',\n                  to: 'pfh',\n                  chatType: 'singleChat'\n                };\n                _context.prev = 3;\n                _context.next = 6;\n                return sendDisplayMessages(_objectSpread({}, params));\n              case 6:\n                res = _context.sent;\n                __f__(\"log\", '>>>>>>>>发送消息成功', res, \" at pages/index/index.vue:96\");\n                _this2.sendMsgTimmer && clearTimeout(_this2.sendMsgTimmer);\n                uni.showToast({\n                  icon: 'none',\n                  title: \"\\u53D1\\u9001\\u6210\\u529F\\uFF01\".concat(res.serverMsgId)\n                });\n                _context.next = 18;\n                break;\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n                _this2.sendMsgTimmer && clearTimeout(_this2.sendMsgTimmer);\n                __f__(\"log\", '>>>>>>>发送失败', _context.t0, \" at pages/index/index.vue:104\");\n                /*  优化点一：在catch到发送消息提示not login时 主动补偿连接IM */\n                if ((_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.type) === 39) {\n                  __f__(\"log\", '>>>>>IM 未连接 调用补偿登录', \" at pages/index/index.vue:107\");\n                  _this2.compensationLoginIM();\n                }\n                uni.showToast({\n                  icon: 'none',\n                  title: \"\\u53D1\\u9001\\u5931\\u8D25\\uFF1A\".concat(JSON.stringify(_context.t0))\n                });\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 12]]);\n      }))();\n    },\n    setUserAccessToken: function setUserAccessToken(userId, userAccessToken) {\n      var params = {\n        key: \"EM_TOKEN\",\n        data: {\n          userId: userId,\n          token: userAccessToken\n        }\n      };\n      uni.setStorageSync(params.key, params.data);\n      __f__(\"log\", '>>>>>token写入本地成功', \" at pages/index/index.vue:122\");\n    },\n    //补偿连接IM\n    compensationLoginIM: function compensationLoginIM() {\n      var _this3 = this;\n      //EMClient.sock.readyState 三种状态 1 连接中 2 连接中 3 未连接\n      __f__(\"log\", '当前SDK socket status', _index.EMClient.sock.readyState, \" at pages/index/index.vue:127\");\n      closeEaseIM();\n      setTimeout(function () {\n        var _this3$storageData, _this3$storageData2;\n        var userId = (_this3$storageData = _this3.storageData) === null || _this3$storageData === void 0 ? void 0 : _this3$storageData.userId;\n        var token = (_this3$storageData2 = _this3.storageData) === null || _this3$storageData2 === void 0 ? void 0 : _this3$storageData2.token;\n        __f__(\"log\", '>>>>>>>开始执行token登录', _this3.storageData, \" at pages/index/index.vue:132\");\n        loginWithAccessToken(userId, token);\n      }, 200);\n    }\n  }\n};\nexports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! exports provided: log, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatLog; });
function typof (v) {
  var s = Object.prototype.toString.call(v)
  return s.substring(8, s.length - 1)
}

function isDebugMode () {
  /* eslint-disable no-undef */
  return typeof __channelId__ === 'string' && __channelId__
}

function jsonStringifyReplacer (k, p) {
  switch (typof(p)) {
    case 'Function':
      return 'function() { [native code] }'
    default :
      return p
  }
}

function log (type) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key]
  }
  console[type].apply(console, args)
}

function formatLog () {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key]
  }
  var type = args.shift()
  if (isDebugMode()) {
    args.push(args.pop().replace('at ', 'uni-app:///'))
    return console[type].apply(console, args)
  }

  var msgs = args.map(function (v) {
    var type = Object.prototype.toString.call(v).toLowerCase()

    if (type === '[object object]' || type === '[object array]') {
      try {
        v = '---BEGIN:JSON---' + JSON.stringify(v, jsonStringifyReplacer) + '---END:JSON---'
      } catch (e) {
        v = type
      }
    } else {
      if (v === null) {
        v = '---NULL---'
      } else if (v === undefined) {
        v = '---UNDEFINED---'
      } else {
        var vType = typof(v).toUpperCase()

        if (vType === 'NUMBER' || vType === 'BOOLEAN') {
          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---'
        } else {
          v = String(v)
        }
      }
    }

    return v
  })
  var msg = ''

  if (msgs.length > 1) {
    var lastMsg = msgs.pop()
    msg = msgs.join('---COMMA---')

    if (lastMsg.indexOf(' at ') === 0) {
      msg += lastMsg
    } else {
      msg += '---COMMA---' + lastMsg
    }
  } else {
    msg = msgs[0]
  }

  console[type](msg)
}


/***/ }),
/* 13 */
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 4);
// TODO(Babel 8): Remove this file.

var runtime = __webpack_require__(/*! ../helpers/regeneratorRuntime */ 14)();
module.exports = runtime;

// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=
try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  if ((typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}

/***/ }),
/* 14 */
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/regeneratorRuntime.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 4)["default"];
function _regeneratorRuntime() {
  "use strict";

  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return exports;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    },
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function value(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function (method, arg) {
      if ("executing" === state) throw new Error("Generator is already running");
      if ("completed" === state) {
        if ("throw" === method) throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg;;) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
          if ("suspendedStart" === state) throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else "return" === context.method && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if ("normal" === record.type) {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method,
      method = delegate.iterator[methodName];
    if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) {
              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            }
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (val) {
    var object = Object(val),
      keys = [];
    for (var key in object) {
      keys.push(key);
    }
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {
        "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
      }
    },
    stop: function stop() {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 15 */
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 16 */
/*!********************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/index.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EMClient = void 0;\nObject.defineProperty(exports, \"EaseSDK\", {\n  enumerable: true,\n  get: function get() {\n    return _.default;\n  }\n});\nvar _ = _interopRequireDefault(__webpack_require__(/*! @/SDK/4.1.7-uniapp-log */ 17));\nvar _config = __webpack_require__(/*! ./config */ 28);\n// import EaseSDK from 'easemob-websdk/uniApp/Easemob-chat';\n\nvar EMClient = uni.EMClient = {};\nexports.EMClient = EMClient;\n_.default.logger.enableAll();\nexports.EMClient = EMClient = new _.default.connection({\n  appKey: '1187231127169058#demo',\n  apiUrl: _config.EM_API_URL,\n  url: _config.EM_WEB_SOCKET_URL\n});\nuni.EMClient = EMClient;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2luZGV4LmpzIl0sIm5hbWVzIjpbIkVNQ2xpZW50IiwidW5pIiwiRWFzZVNESyIsImxvZ2dlciIsImVuYWJsZUFsbCIsImNvbm5lY3Rpb24iLCJhcHBLZXkiLCJhcGlVcmwiLCJFTV9BUElfVVJMIiwidXJsIiwiRU1fV0VCX1NPQ0tFVF9VUkwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUNBO0FBRkE7O0FBR0EsSUFBSUEsUUFBUSxHQUFJQyxHQUFHLENBQUNELFFBQVEsR0FBRyxDQUFDLENBQUU7QUFBQztBQUNuQ0UsU0FBTyxDQUFDQyxNQUFNLENBQUNDLFNBQVMsRUFBRTtBQUMxQixtQkFBQUosUUFBUSxHQUFHLElBQUlFLFNBQU8sQ0FBQ0csVUFBVSxDQUFDO0VBQ2hDQyxNQUFNLEVBQUUsdUJBQXVCO0VBQy9CQyxNQUFNLEVBQUVDLGtCQUFVO0VBQ2xCQyxHQUFHLEVBQUVDO0FBQ1AsQ0FBQyxDQUFDO0FBQ0ZULEdBQUcsQ0FBQ0QsUUFBUSxHQUFHQSxRQUFRIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IEVhc2VTREsgZnJvbSAnZWFzZW1vYi13ZWJzZGsvdW5pQXBwL0Vhc2Vtb2ItY2hhdCc7XG5pbXBvcnQgRWFzZVNESyBmcm9tICdAL1NESy80LjEuNy11bmlhcHAtbG9nJztcbmltcG9ydCB7IEVNX0FQUF9LRVksIEVNX0FQSV9VUkwsIEVNX1dFQl9TT0NLRVRfVVJMIH0gZnJvbSAnLi9jb25maWcnO1xubGV0IEVNQ2xpZW50ID0gKHVuaS5FTUNsaWVudCA9IHt9KTtcbkVhc2VTREsubG9nZ2VyLmVuYWJsZUFsbCgpO1xuRU1DbGllbnQgPSBuZXcgRWFzZVNESy5jb25uZWN0aW9uKHtcbiAgYXBwS2V5OiAnMTE4NzIzMTEyNzE2OTA1OCNkZW1vJyxcbiAgYXBpVXJsOiBFTV9BUElfVVJMLFxuICB1cmw6IEVNX1dFQl9TT0NLRVRfVVJMLFxufSk7XG51bmkuRU1DbGllbnQgPSBFTUNsaWVudDtcbmV4cG9ydCB7IEVhc2VTREssIEVNQ2xpZW50IH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/*!****************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/SDK/4.1.7-uniapp-log.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(__f__, wx, module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 4);\n!function (e, t) {\n  \"object\" == ( false ? undefined : _typeof(exports)) && \"object\" == ( false ? undefined : _typeof(module)) ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(this, function () {\n  return function () {\n    var e = {\n        188: function _(e, t, r) {\n          var o, n, i;\n          !function (a) {\n            \"use strict\";\n\n            if (null != t && \"number\" != typeof t.nodeType) e.exports = a();else if (null != r.amdO) n = [], void 0 === (i = \"function\" == typeof (o = a) ? o.apply(t, n) : o) || (e.exports = i);else {\n              var s = a(),\n                c = \"undefined\" != typeof self ? self : $.global;\n              \"function\" != typeof c.btoa && (c.btoa = s.btoa), \"function\" != typeof c.atob && (c.atob = s.atob);\n            }\n          }(function () {\n            \"use strict\";\n\n            var e = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n            function t(e) {\n              this.message = e;\n            }\n            return t.prototype = new Error(), t.prototype.name = \"InvalidCharacterError\", {\n              btoa: function btoa(r) {\n                for (var o, n, i = String(r), a = 0, s = e, c = \"\"; i.charAt(0 | a) || (s = \"=\", a % 1); c += s.charAt(63 & o >> 8 - a % 1 * 8)) {\n                  if ((n = i.charCodeAt(a += 3 / 4)) > 255) throw new t(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n                  o = o << 8 | n;\n                }\n                return c;\n              },\n              atob: function atob(r) {\n                var o = String(r).replace(/[=]+$/, \"\");\n                if (o.length % 4 == 1) throw new t(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n                for (var n, i, a = 0, s = 0, c = \"\"; i = o.charAt(s++); ~i && (n = a % 4 ? 64 * n + i : i, a++ % 4) ? c += String.fromCharCode(255 & n >> (-2 * a & 6)) : 0) {\n                  i = e.indexOf(i);\n                }\n                return c;\n              }\n            };\n          });\n        },\n        720: function _(e) {\n          e.exports = r;\n          var t = null;\n          try {\n            t = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n          } catch (e) {}\n          function r(e, t, r) {\n            this.low = 0 | e, this.high = 0 | t, this.unsigned = !!r;\n          }\n          function o(e) {\n            return !0 === (e && e.__isLong__);\n          }\n          r.prototype.__isLong__, Object.defineProperty(r.prototype, \"__isLong__\", {\n            value: !0\n          }), r.isLong = o;\n          var n = {},\n            i = {};\n          function a(e, t) {\n            var r, o, a;\n            return t ? (a = 0 <= (e >>>= 0) && e < 256) && (o = i[e]) ? o : (r = c(e, (0 | e) < 0 ? -1 : 0, !0), a && (i[e] = r), r) : (a = -128 <= (e |= 0) && e < 128) && (o = n[e]) ? o : (r = c(e, e < 0 ? -1 : 0, !1), a && (n[e] = r), r);\n          }\n          function s(e, t) {\n            if (isNaN(e)) return t ? E : g;\n            if (t) {\n              if (e < 0) return E;\n              if (e >= h) return O;\n            } else {\n              if (e <= -f) return R;\n              if (e + 1 >= f) return _;\n            }\n            return e < 0 ? s(-e, t).neg() : c(e % d | 0, e / d | 0, t);\n          }\n          function c(e, t, o) {\n            return new r(e, t, o);\n          }\n          r.fromInt = a, r.fromNumber = s, r.fromBits = c;\n          var u = Math.pow;\n          function l(e, t, r) {\n            if (0 === e.length) throw Error(\"empty string\");\n            if (\"NaN\" === e || \"Infinity\" === e || \"+Infinity\" === e || \"-Infinity\" === e) return g;\n            if (\"number\" == typeof t ? (r = t, t = !1) : t = !!t, (r = r || 10) < 2 || 36 < r) throw RangeError(\"radix\");\n            var o;\n            if ((o = e.indexOf(\"-\")) > 0) throw Error(\"interior hyphen\");\n            if (0 === o) return l(e.substring(1), t, r).neg();\n            for (var n = s(u(r, 8)), i = g, a = 0; a < e.length; a += 8) {\n              var c = Math.min(8, e.length - a),\n                p = parseInt(e.substring(a, a + c), r);\n              if (c < 8) {\n                var d = s(u(r, c));\n                i = i.mul(d).add(s(p));\n              } else i = (i = i.mul(n)).add(s(p));\n            }\n            return i.unsigned = t, i;\n          }\n          function p(e, t) {\n            return \"number\" == typeof e ? s(e, t) : \"string\" == typeof e ? l(e, t) : c(e.low, e.high, \"boolean\" == typeof t ? t : e.unsigned);\n          }\n          r.fromString = l, r.fromValue = p;\n          var d = 4294967296,\n            h = d * d,\n            f = h / 2,\n            m = a(1 << 24),\n            g = a(0);\n          r.ZERO = g;\n          var E = a(0, !0);\n          r.UZERO = E;\n          var y = a(1);\n          r.ONE = y;\n          var T = a(1, !0);\n          r.UONE = T;\n          var v = a(-1);\n          r.NEG_ONE = v;\n          var _ = c(-1, 2147483647, !1);\n          r.MAX_VALUE = _;\n          var O = c(-1, -1, !0);\n          r.MAX_UNSIGNED_VALUE = O;\n          var R = c(0, -2147483648, !1);\n          r.MIN_VALUE = R;\n          var I = r.prototype;\n          I.toInt = function () {\n            return this.unsigned ? this.low >>> 0 : this.low;\n          }, I.toNumber = function () {\n            return this.unsigned ? (this.high >>> 0) * d + (this.low >>> 0) : this.high * d + (this.low >>> 0);\n          }, I.toString = function (e) {\n            if ((e = e || 10) < 2 || 36 < e) throw RangeError(\"radix\");\n            if (this.isZero()) return \"0\";\n            if (this.isNegative()) {\n              if (this.eq(R)) {\n                var t = s(e),\n                  r = this.div(t),\n                  o = r.mul(t).sub(this);\n                return r.toString(e) + o.toInt().toString(e);\n              }\n              return \"-\" + this.neg().toString(e);\n            }\n            for (var n = s(u(e, 6), this.unsigned), i = this, a = \"\";;) {\n              var c = i.div(n),\n                l = (i.sub(c.mul(n)).toInt() >>> 0).toString(e);\n              if ((i = c).isZero()) return l + a;\n              for (; l.length < 6;) {\n                l = \"0\" + l;\n              }\n              a = \"\" + l + a;\n            }\n          }, I.getHighBits = function () {\n            return this.high;\n          }, I.getHighBitsUnsigned = function () {\n            return this.high >>> 0;\n          }, I.getLowBits = function () {\n            return this.low;\n          }, I.getLowBitsUnsigned = function () {\n            return this.low >>> 0;\n          }, I.getNumBitsAbs = function () {\n            if (this.isNegative()) return this.eq(R) ? 64 : this.neg().getNumBitsAbs();\n            for (var e = 0 != this.high ? this.high : this.low, t = 31; t > 0 && 0 == (e & 1 << t); t--) {\n              ;\n            }\n            return 0 != this.high ? t + 33 : t + 1;\n          }, I.isZero = function () {\n            return 0 === this.high && 0 === this.low;\n          }, I.eqz = I.isZero, I.isNegative = function () {\n            return !this.unsigned && this.high < 0;\n          }, I.isPositive = function () {\n            return this.unsigned || this.high >= 0;\n          }, I.isOdd = function () {\n            return 1 == (1 & this.low);\n          }, I.isEven = function () {\n            return 0 == (1 & this.low);\n          }, I.equals = function (e) {\n            return o(e) || (e = p(e)), (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low;\n          }, I.eq = I.equals, I.notEquals = function (e) {\n            return !this.eq(e);\n          }, I.neq = I.notEquals, I.ne = I.notEquals, I.lessThan = function (e) {\n            return this.comp(e) < 0;\n          }, I.lt = I.lessThan, I.lessThanOrEqual = function (e) {\n            return this.comp(e) <= 0;\n          }, I.lte = I.lessThanOrEqual, I.le = I.lessThanOrEqual, I.greaterThan = function (e) {\n            return this.comp(e) > 0;\n          }, I.gt = I.greaterThan, I.greaterThanOrEqual = function (e) {\n            return this.comp(e) >= 0;\n          }, I.gte = I.greaterThanOrEqual, I.ge = I.greaterThanOrEqual, I.compare = function (e) {\n            if (o(e) || (e = p(e)), this.eq(e)) return 0;\n            var t = this.isNegative(),\n              r = e.isNegative();\n            return t && !r ? -1 : !t && r ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1;\n          }, I.comp = I.compare, I.negate = function () {\n            return !this.unsigned && this.eq(R) ? R : this.not().add(y);\n          }, I.neg = I.negate, I.add = function (e) {\n            o(e) || (e = p(e));\n            var t = this.high >>> 16,\n              r = 65535 & this.high,\n              n = this.low >>> 16,\n              i = 65535 & this.low,\n              a = e.high >>> 16,\n              s = 65535 & e.high,\n              u = e.low >>> 16,\n              l = 0,\n              d = 0,\n              h = 0,\n              f = 0;\n            return h += (f += i + (65535 & e.low)) >>> 16, d += (h += n + u) >>> 16, l += (d += r + s) >>> 16, l += t + a, c((h &= 65535) << 16 | (f &= 65535), (l &= 65535) << 16 | (d &= 65535), this.unsigned);\n          }, I.subtract = function (e) {\n            return o(e) || (e = p(e)), this.add(e.neg());\n          }, I.sub = I.subtract, I.multiply = function (e) {\n            if (this.isZero()) return g;\n            if (o(e) || (e = p(e)), t) return c(t.mul(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);\n            if (e.isZero()) return g;\n            if (this.eq(R)) return e.isOdd() ? R : g;\n            if (e.eq(R)) return this.isOdd() ? R : g;\n            if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();\n            if (e.isNegative()) return this.mul(e.neg()).neg();\n            if (this.lt(m) && e.lt(m)) return s(this.toNumber() * e.toNumber(), this.unsigned);\n            var r = this.high >>> 16,\n              n = 65535 & this.high,\n              i = this.low >>> 16,\n              a = 65535 & this.low,\n              u = e.high >>> 16,\n              l = 65535 & e.high,\n              d = e.low >>> 16,\n              h = 65535 & e.low,\n              f = 0,\n              E = 0,\n              y = 0,\n              T = 0;\n            return y += (T += a * h) >>> 16, E += (y += i * h) >>> 16, y &= 65535, E += (y += a * d) >>> 16, f += (E += n * h) >>> 16, E &= 65535, f += (E += i * d) >>> 16, E &= 65535, f += (E += a * l) >>> 16, f += r * h + n * d + i * l + a * u, c((y &= 65535) << 16 | (T &= 65535), (f &= 65535) << 16 | (E &= 65535), this.unsigned);\n          }, I.mul = I.multiply, I.divide = function (e) {\n            if (o(e) || (e = p(e)), e.isZero()) throw Error(\"division by zero\");\n            var r, n, i;\n            if (t) return this.unsigned || -2147483648 !== this.high || -1 !== e.low || -1 !== e.high ? c((this.unsigned ? t.div_u : t.div_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned) : this;\n            if (this.isZero()) return this.unsigned ? E : g;\n            if (this.unsigned) {\n              if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return E;\n              if (e.gt(this.shru(1))) return T;\n              i = E;\n            } else {\n              if (this.eq(R)) return e.eq(y) || e.eq(v) ? R : e.eq(R) ? y : (r = this.shr(1).div(e).shl(1)).eq(g) ? e.isNegative() ? y : v : (n = this.sub(e.mul(r)), i = r.add(n.div(e)));\n              if (e.eq(R)) return this.unsigned ? E : g;\n              if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();\n              if (e.isNegative()) return this.div(e.neg()).neg();\n              i = g;\n            }\n            for (n = this; n.gte(e);) {\n              r = Math.max(1, Math.floor(n.toNumber() / e.toNumber()));\n              for (var a = Math.ceil(Math.log(r) / Math.LN2), l = a <= 48 ? 1 : u(2, a - 48), d = s(r), h = d.mul(e); h.isNegative() || h.gt(n);) {\n                h = (d = s(r -= l, this.unsigned)).mul(e);\n              }\n              d.isZero() && (d = y), i = i.add(d), n = n.sub(h);\n            }\n            return i;\n          }, I.div = I.divide, I.modulo = function (e) {\n            return o(e) || (e = p(e)), t ? c((this.unsigned ? t.rem_u : t.rem_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned) : this.sub(this.div(e).mul(e));\n          }, I.mod = I.modulo, I.rem = I.modulo, I.not = function () {\n            return c(~this.low, ~this.high, this.unsigned);\n          }, I.and = function (e) {\n            return o(e) || (e = p(e)), c(this.low & e.low, this.high & e.high, this.unsigned);\n          }, I.or = function (e) {\n            return o(e) || (e = p(e)), c(this.low | e.low, this.high | e.high, this.unsigned);\n          }, I.xor = function (e) {\n            return o(e) || (e = p(e)), c(this.low ^ e.low, this.high ^ e.high, this.unsigned);\n          }, I.shiftLeft = function (e) {\n            return o(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? c(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : c(0, this.low << e - 32, this.unsigned);\n          }, I.shl = I.shiftLeft, I.shiftRight = function (e) {\n            return o(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? c(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : c(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n          }, I.shr = I.shiftRight, I.shiftRightUnsigned = function (e) {\n            if (o(e) && (e = e.toInt()), 0 == (e &= 63)) return this;\n            var t = this.high;\n            return e < 32 ? c(this.low >>> e | t << 32 - e, t >>> e, this.unsigned) : c(32 === e ? t : t >>> e - 32, 0, this.unsigned);\n          }, I.shru = I.shiftRightUnsigned, I.shr_u = I.shiftRightUnsigned, I.toSigned = function () {\n            return this.unsigned ? c(this.low, this.high, !1) : this;\n          }, I.toUnsigned = function () {\n            return this.unsigned ? this : c(this.low, this.high, !0);\n          }, I.toBytes = function (e) {\n            return e ? this.toBytesLE() : this.toBytesBE();\n          }, I.toBytesLE = function () {\n            var e = this.high,\n              t = this.low;\n            return [255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24];\n          }, I.toBytesBE = function () {\n            var e = this.high,\n              t = this.low;\n            return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t];\n          }, r.fromBytes = function (e, t, o) {\n            return o ? r.fromBytesLE(e, t) : r.fromBytesBE(e, t);\n          }, r.fromBytesLE = function (e, t) {\n            return new r(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, t);\n          }, r.fromBytesBE = function (e, t) {\n            return new r(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], t);\n          };\n        },\n        969: function _(e) {\n          \"use strict\";\n\n          function t() {\n            this._listeners = {};\n          }\n          e.exports = t, t.prototype.on = function (e, t, r) {\n            return (this._listeners[e] || (this._listeners[e] = [])).push({\n              fn: t,\n              ctx: r || this\n            }), this;\n          }, t.prototype.off = function (e, t) {\n            if (void 0 === e) this._listeners = {};else if (void 0 === t) this._listeners[e] = [];else for (var r = this._listeners[e], o = 0; o < r.length;) {\n              r[o].fn === t ? r.splice(o, 1) : ++o;\n            }\n            return this;\n          }, t.prototype.emit = function (e) {\n            var t = this._listeners[e];\n            if (t) {\n              for (var r = [], o = 1; o < arguments.length;) {\n                r.push(arguments[o++]);\n              }\n              for (o = 0; o < t.length;) {\n                t[o].fn.apply(t[o++].ctx, r);\n              }\n            }\n            return this;\n          };\n        },\n        728: function _(e) {\n          \"use strict\";\n\n          e.exports = function (e, t) {\n            for (var r = new Array(arguments.length - 1), o = 0, n = 2, i = !0; n < arguments.length;) {\n              r[o++] = arguments[n++];\n            }\n            return new Promise(function (n, a) {\n              r[o] = function (e) {\n                if (i) if (i = !1, e) a(e);else {\n                  for (var t = new Array(arguments.length - 1), r = 0; r < t.length;) {\n                    t[r++] = arguments[r];\n                  }\n                  n.apply(null, t);\n                }\n              };\n              try {\n                e.apply(t || null, r);\n              } catch (e) {\n                i && (i = !1, a(e));\n              }\n            });\n          };\n        },\n        440: function _(e) {\n          \"use strict\";\n\n          var t = e.exports;\n          t.length = function (e) {\n            var t = e.length;\n            if (!t) return 0;\n            for (var r = 0; --t % 4 > 1 && \"=\" === e.charAt(t);) {\n              ++r;\n            }\n            return Math.ceil(3 * e.length) / 4 - r;\n          };\n          for (var r = new Array(64), o = new Array(123), n = 0; n < 64;) {\n            o[r[n] = n < 26 ? n + 65 : n < 52 ? n + 71 : n < 62 ? n - 4 : n - 59 | 43] = n++;\n          }\n          t.encode = function (e, t, o) {\n            for (var n, i = null, a = [], s = 0, c = 0; t < o;) {\n              var u = e[t++];\n              switch (c) {\n                case 0:\n                  a[s++] = r[u >> 2], n = (3 & u) << 4, c = 1;\n                  break;\n                case 1:\n                  a[s++] = r[n | u >> 4], n = (15 & u) << 2, c = 2;\n                  break;\n                case 2:\n                  a[s++] = r[n | u >> 6], a[s++] = r[63 & u], c = 0;\n              }\n              s > 8191 && ((i || (i = [])).push(String.fromCharCode.apply(String, a)), s = 0);\n            }\n            return c && (a[s++] = r[n], a[s++] = 61, 1 === c && (a[s++] = 61)), i ? (s && i.push(String.fromCharCode.apply(String, a.slice(0, s))), i.join(\"\")) : String.fromCharCode.apply(String, a.slice(0, s));\n          };\n          var i = \"invalid encoding\";\n          t.decode = function (e, t, r) {\n            for (var n, a = r, s = 0, c = 0; c < e.length;) {\n              var u = e.charCodeAt(c++);\n              if (61 === u && s > 1) break;\n              if (void 0 === (u = o[u])) throw Error(i);\n              switch (s) {\n                case 0:\n                  n = u, s = 1;\n                  break;\n                case 1:\n                  t[r++] = n << 2 | (48 & u) >> 4, n = u, s = 2;\n                  break;\n                case 2:\n                  t[r++] = (15 & n) << 4 | (60 & u) >> 2, n = u, s = 3;\n                  break;\n                case 3:\n                  t[r++] = (3 & n) << 6 | u, s = 0;\n              }\n            }\n            if (1 === s) throw Error(i);\n            return r - a;\n          }, t.test = function (e) {\n            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e);\n          };\n        },\n        72: function _(e) {\n          e.exports = o;\n          var t,\n            r = /\\/|\\./;\n          function o(e, t) {\n            r.test(e) || (e = \"google/protobuf/\" + e + \".proto\", t = {\n              nested: {\n                google: {\n                  nested: {\n                    protobuf: {\n                      nested: t\n                    }\n                  }\n                }\n              }\n            }), o[e] = t;\n          }\n          o(\"any\", {\n            Any: {\n              fields: {\n                type_url: {\n                  type: \"string\",\n                  id: 1\n                },\n                value: {\n                  type: \"bytes\",\n                  id: 2\n                }\n              }\n            }\n          }), o(\"duration\", {\n            Duration: t = {\n              fields: {\n                seconds: {\n                  type: \"int64\",\n                  id: 1\n                },\n                nanos: {\n                  type: \"int32\",\n                  id: 2\n                }\n              }\n            }\n          }), o(\"timestamp\", {\n            Timestamp: t\n          }), o(\"empty\", {\n            Empty: {\n              fields: {}\n            }\n          }), o(\"struct\", {\n            Struct: {\n              fields: {\n                fields: {\n                  keyType: \"string\",\n                  type: \"Value\",\n                  id: 1\n                }\n              }\n            },\n            Value: {\n              oneofs: {\n                kind: {\n                  oneof: [\"nullValue\", \"numberValue\", \"stringValue\", \"boolValue\", \"structValue\", \"listValue\"]\n                }\n              },\n              fields: {\n                nullValue: {\n                  type: \"NullValue\",\n                  id: 1\n                },\n                numberValue: {\n                  type: \"double\",\n                  id: 2\n                },\n                stringValue: {\n                  type: \"string\",\n                  id: 3\n                },\n                boolValue: {\n                  type: \"bool\",\n                  id: 4\n                },\n                structValue: {\n                  type: \"Struct\",\n                  id: 5\n                },\n                listValue: {\n                  type: \"ListValue\",\n                  id: 6\n                }\n              }\n            },\n            NullValue: {\n              values: {\n                NULL_VALUE: 0\n              }\n            },\n            ListValue: {\n              fields: {\n                values: {\n                  rule: \"repeated\",\n                  type: \"Value\",\n                  id: 1\n                }\n              }\n            }\n          }), o(\"wrappers\", {\n            DoubleValue: {\n              fields: {\n                value: {\n                  type: \"double\",\n                  id: 1\n                }\n              }\n            },\n            FloatValue: {\n              fields: {\n                value: {\n                  type: \"float\",\n                  id: 1\n                }\n              }\n            },\n            Int64Value: {\n              fields: {\n                value: {\n                  type: \"int64\",\n                  id: 1\n                }\n              }\n            },\n            UInt64Value: {\n              fields: {\n                value: {\n                  type: \"uint64\",\n                  id: 1\n                }\n              }\n            },\n            Int32Value: {\n              fields: {\n                value: {\n                  type: \"int32\",\n                  id: 1\n                }\n              }\n            },\n            UInt32Value: {\n              fields: {\n                value: {\n                  type: \"uint32\",\n                  id: 1\n                }\n              }\n            },\n            BoolValue: {\n              fields: {\n                value: {\n                  type: \"bool\",\n                  id: 1\n                }\n              }\n            },\n            StringValue: {\n              fields: {\n                value: {\n                  type: \"string\",\n                  id: 1\n                }\n              }\n            },\n            BytesValue: {\n              fields: {\n                value: {\n                  type: \"bytes\",\n                  id: 1\n                }\n              }\n            }\n          }), o(\"field_mask\", {\n            FieldMask: {\n              fields: {\n                paths: {\n                  rule: \"repeated\",\n                  type: \"string\",\n                  id: 1\n                }\n              }\n            }\n          }), o.get = function (e) {\n            return o[e] || null;\n          };\n        },\n        525: function _(e, t, r) {\n          var o,\n            n,\n            i = e.exports;\n          function a(e, t, r, i) {\n            var a = i.m,\n              s = i.d,\n              c = i.types,\n              u = i.ksi,\n              l = void 0 !== u;\n            if (e.resolvedType) {\n              if (e.resolvedType instanceof o) {\n                for (var p = l ? s[r][u] : s[r], d = e.resolvedType.values, h = Object.keys(d), f = 0; f < h.length; f++) {\n                  if (!(e.repeated && d[h[f]] === e.typeDefault || h[f] != p && d[h[f]] != p)) {\n                    l ? a[r][u] = d[h[f]] : a[r] = d[h[f]];\n                    break;\n                  }\n                }\n              } else {\n                if (\"object\" != _typeof(l ? s[r][u] : s[r])) throw TypeError(e.fullName + \": object expected\");\n                l ? a[r][u] = c[t].fromObject(s[r][u]) : a[r] = c[t].fromObject(s[r]);\n              }\n            } else {\n              var m = !1;\n              switch (e.type) {\n                case \"double\":\n                case \"float\":\n                  l ? a[r][u] = Number(s[r][u]) : a[r] = Number(s[r]);\n                  break;\n                case \"uint32\":\n                case \"fixed32\":\n                  l ? a[r][u] = s[r][u] >>> 0 : a[r] = s[r] >>> 0;\n                  break;\n                case \"int32\":\n                case \"sint32\":\n                case \"sfixed32\":\n                  l ? a[r][u] = 0 | s[r][u] : a[r] = 0 | s[r];\n                  break;\n                case \"uint64\":\n                  m = !0;\n                case \"int64\":\n                case \"sint64\":\n                case \"fixed64\":\n                case \"sfixed64\":\n                  n.Long ? l ? a[r][u] = n.Long.fromValue(s[r][u]).unsigned = m : a[r] = n.Long.fromValue(s[r]).unsigned = m : \"string\" == typeof (l ? s[r][u] : s[r]) ? l ? a[r][u] = parseInt(s[r][u], 10) : a[r] = parseInt(s[r], 10) : \"number\" == typeof (l ? s[r][u] : s[r]) ? l ? a[r][u] = s[r][u] : a[r] = s[r] : \"object\" == _typeof(l ? s[r][u] : s[r]) && (l ? a[r][u] = new n.LongBits(s[r][u].low >>> 0, s[r][u].high >>> 0).toNumber(m) : a[r] = new n.LongBits(s[r].low >>> 0, s[r].high >>> 0).toNumber(m));\n                  break;\n                case \"bytes\":\n                  \"string\" == typeof (l ? s[r][u] : s[r]) ? l ? n.base64.decode(s[r][u], a[r][u] = n.newBuffer(n.base64.length(s[r][u])), 0) : n.base64.decode(s[r], a[r] = n.newBuffer(n.base64.length(s[r])), 0) : (l ? s[r][u] : s[r]).length && (l ? a[r][u] = s[r][u] : a[r] = s[r]);\n                  break;\n                case \"string\":\n                  l ? a[r][u] = String(s[r][u]) : a[r] = String(s[r]);\n                  break;\n                case \"bool\":\n                  l ? a[r][u] = Boolean(s[r][u]) : a[r] = Boolean(s[r]);\n              }\n            }\n          }\n          function s(e, t, r, i) {\n            var a = i.m,\n              s = i.d,\n              c = i.types,\n              u = i.ksi,\n              l = i.o,\n              p = void 0 !== u;\n            if (e.resolvedType) e.resolvedType instanceof o ? p ? s[r][u] = l.enums === String ? c[t].values[a[r][u]] : a[r][u] : s[r] = l.enums === String ? c[t].values[a[r]] : a[r] : p ? s[r][u] = c[t].toObject(a[r][u], l) : s[r] = c[t].toObject(a[r], l);else {\n              var d = !1;\n              switch (e.type) {\n                case \"double\":\n                case \"float\":\n                  p ? s[r][u] = l.json && !isFinite(a[r][u]) ? String(a[r][u]) : a[r][u] : s[r] = l.json && !isFinite(a[r]) ? String(a[r]) : a[r];\n                  break;\n                case \"uint64\":\n                  d = !0;\n                case \"int64\":\n                case \"sint64\":\n                case \"fixed64\":\n                case \"sfixed64\":\n                  \"number\" == typeof a[r][u] ? p ? s[r][u] = l.longs === String ? String(a[r][u]) : a[r][u] : s[r] = l.longs === String ? String(a[r]) : a[r] : p ? s[r][u] = l.longs === String ? n.Long.prototype.toString.call(a[r][u]) : l.longs === Number ? new n.LongBits(a[r][u].low >>> 0, a[r][u].high >>> 0).toNumber(d) : a[r][u] : s[r] = l.longs === String ? n.Long.prototype.toString.call(a[r]) : l.longs === Number ? new n.LongBits(a[r].low >>> 0, a[r].high >>> 0).toNumber(d) : a[r];\n                  break;\n                case \"bytes\":\n                  p ? s[r][u] = l.bytes === String ? n.base64.encode(a[r][u], 0, a[r][u].length) : l.bytes === Array ? Array.prototype.slice.call(a[r][u]) : a[r][u] : s[r] = l.bytes === String ? n.base64.encode(a[r], 0, a[r].length) : l.bytes === Array ? Array.prototype.slice.call(a[r]) : a[r];\n                  break;\n                default:\n                  p ? s[r][u] = a[r][u] : s[r] = a[r];\n              }\n            }\n          }\n          i._configure = function () {\n            o = r(582), n = r(935);\n          }, i.fromObject = function (e) {\n            var t = e.fieldsArray;\n            return function (e) {\n              return function (r) {\n                if (r instanceof this.ctor) return r;\n                if (!t.length) return new this.ctor();\n                for (var i = new this.ctor(), s = 0; s < t.length; ++s) {\n                  var c,\n                    u = t[s].resolve(),\n                    l = u.name;\n                  if (u.map) {\n                    if (r[l]) {\n                      if (\"object\" != _typeof(r[l])) throw TypeError(u.fullName + \": object expected\");\n                      i[l] = {};\n                    }\n                    var p = Object.keys(r[l]);\n                    for (c = 0; c < p.length; ++c) {\n                      a(u, s, l, n.merge(n.copy(e), {\n                        m: i,\n                        d: r,\n                        ksi: p[c]\n                      }));\n                    }\n                  } else if (u.repeated) {\n                    if (r[l]) {\n                      if (!Array.isArray(r[l])) throw TypeError(u.fullName + \": array expected\");\n                      for (i[l] = [], c = 0; c < r[l].length; ++c) {\n                        a(u, s, l, n.merge(n.copy(e), {\n                          m: i,\n                          d: r,\n                          ksi: c\n                        }));\n                      }\n                    }\n                  } else (u.resolvedType instanceof o || null != r[l]) && a(u, s, l, n.merge(n.copy(e), {\n                    m: i,\n                    d: r\n                  }));\n                }\n                return i;\n              };\n            };\n          }, i.toObject = function (e) {\n            var t = e.fieldsArray.slice().sort(n.compareFieldsById);\n            return function (r) {\n              return t.length ? function (i, a) {\n                a = a || {};\n                for (var c, u, l = {}, p = [], d = [], h = [], f = 0; f < t.length; ++f) {\n                  t[f].partOf || (t[f].resolve().repeated ? p : t[f].map ? d : h).push(t[f]);\n                }\n                if (p.length && (a.arrays || a.defaults)) for (f = 0; f < p.length; ++f) {\n                  l[p[f].name] = [];\n                }\n                if (d.length && (a.objects || a.defaults)) for (f = 0; f < d.length; ++f) {\n                  l[d[f].name] = {};\n                }\n                if (h.length && a.defaults) for (f = 0; f < h.length; ++f) {\n                  if (u = (c = h[f]).name, c.resolvedType instanceof o) l[u] = a.enums = String ? c.resolvedType.valuesById[c.typeDefault] : c.typeDefault;else if (c.long) {\n                    if (n.Long) {\n                      var m = new n.Long(c.typeDefault.low, c.typeDefault.high, c.typeDefault.unsigned);\n                      l[u] = a.longs === String ? m.toString() : a.longs === Number ? m.toNumber() : m;\n                    } else l[u] = a.longs === String ? c.typeDefault.toString() : c.typeDefault.toNumber();\n                  } else c.bytes ? l[u] = a.bytes === String ? String.fromCharCode.apply(String, c.typeDefault) : Array.prototype.slice.call(c.typeDefault).join(\"*..*\").split(\"*..*\") : l[u] = c.typeDefault;\n                }\n                var g = !1;\n                for (f = 0; f < t.length; ++f) {\n                  u = (c = t[f]).name;\n                  var E,\n                    y,\n                    T = e._fieldsArray.indexOf(c);\n                  if (c.map) {\n                    if (g || (g = !0), i[u] && (E = Object.keys(i[u]).length)) for (l[u] = {}, y = 0; y < E.length; ++y) {\n                      s(c, T, u, n.merge(n.copy(r), {\n                        m: i,\n                        d: l,\n                        ksi: E[y],\n                        o: a\n                      }));\n                    }\n                  } else if (c.repeated) {\n                    if (i[u] && i[u].length) for (l[u] = [], y = 0; y < i[u].length; ++y) {\n                      s(c, T, u, n.merge(n.copy(r), {\n                        m: i,\n                        d: l,\n                        ksi: y,\n                        o: a\n                      }));\n                    }\n                  } else null != i[u] && i.hasOwnProperty(u) && s(c, T, u, n.merge(n.copy(r), {\n                    m: i,\n                    d: l,\n                    o: a\n                  })), c.partOf && a.oneofs && (l[c.partOf.name] = u);\n                }\n                return l;\n              } : function () {\n                return {};\n              };\n            };\n          };\n        },\n        888: function _(e, t, r) {\n          var o, n, i;\n          function a(e) {\n            return \"missing required '\" + e.name + \"'\";\n          }\n          function s(e) {\n            return function (t) {\n              var r = t.Reader,\n                s = t.types,\n                c = t.util;\n              return function (t, u) {\n                t instanceof r || (t = r.create(t));\n                for (var l, p = void 0 === u ? t.len : t.pos + u, d = new this.ctor(); t.pos < p;) {\n                  var h = t.uint32();\n                  if (e.group && 4 == (7 & h)) break;\n                  for (var f = h >>> 3, m = 0, g = !1; m < e.fieldsArray.length; ++m) {\n                    var E = e._fieldsArray[m].resolve(),\n                      y = E.name,\n                      T = E.resolvedType instanceof o ? \"int32\" : E.type;\n                    if (f == E.id) {\n                      if (g = !0, E.map) t.skip().pos++, d[y] === c.emptyObject && (d[y] = {}), l = t[E.keyType](), t.pos++, null != n.long[E.keyType] ? null == n.basic[T] ? d[y][\"object\" == _typeof(l) ? c.longToHash(l) : l] = s[m].decode(t, t.uint32()) : d[y][\"object\" == _typeof(l) ? c.longToHash(l) : l] = t[T]() : null == n.basic[T] ? d[y] = s[m].decode(t, t.uint32()) : d[y] = t[T]();else if (E.repeated) {\n                        if (d[y] && d[y].length || (d[y] = []), null != n.packed[T] && 2 == (7 & h)) for (var v = t.uint32() + t.pos; t.pos < v;) {\n                          d[y].push(t[T]());\n                        } else null == n.basic[T] ? E.resolvedType.group ? d[y].push(s[m].decode(t)) : d[y].push(s[m].decode(t, t.uint32())) : d[y].push(t[T]());\n                      } else null == n.basic[T] ? E.resolvedType.group ? d[y] = s[m].decode(t) : d[y] = s[m].decode(t, t.uint32()) : d[y] = t[T]();\n                      break;\n                    }\n                  }\n                  g || (__f__(\"log\", \"t\", h, \" at SDK/4.1.7-uniapp-log.js:1\"), t.skipType(7 & h));\n                }\n                for (m = 0; m < e._fieldsArray.length; ++m) {\n                  var _ = e._fieldsArray[m];\n                  if (_.required && !d.hasOwnProperty(_.name)) throw i.ProtocolError(a(_), {\n                    instance: d\n                  });\n                }\n                return d;\n              };\n            };\n          }\n          e.exports = s, s._configure = function () {\n            o = r(582), n = r(696), i = r(935);\n          };\n        },\n        929: function _(e, t, r) {\n          var o, n;\n          function i(e) {\n            return function (t) {\n              var r = t.Writer,\n                i = t.types,\n                a = t.util;\n              return function (t, s) {\n                s = s || r.create();\n                for (var c = e.fieldsArray.slice().sort(a.compareFieldsById), u = 0; u < c.length; u++) {\n                  var l = c[u],\n                    p = e._fieldsArray.indexOf(l),\n                    d = l.resolvedType instanceof o ? \"uint32\" : l.type,\n                    h = n.basic[d],\n                    f = t[l.name];\n                  if (l.resolvedType instanceof o && \"string\" == typeof f && (f = i[p].values[f]), l.map) {\n                    if (null != f && t.hasOwnProperty(l.name)) for (var m = Object.keys(f), g = 0; g < m.length; ++g) {\n                      s.uint32((l.id << 3 | 2) >>> 0).fork().uint32(8 | n.mapKey[l.keyType])[l.keyType](m[g]), void 0 === h ? i[p].encode(f[m[g]], s.uint32(18).fork()).ldelim().ldelim() : s.uint32(16 | h)[d](f[m[g]]).ldelim();\n                    }\n                  } else if (l.repeated) {\n                    if (f && f.length) if (l.packed && void 0 !== n.packed[d]) {\n                      s.uint32((l.id << 3 | 2) >>> 0).fork();\n                      for (var E = 0; E < f.length; E++) {\n                        s[d](f[E]);\n                      }\n                      s.ldelim();\n                    } else for (var y = 0; y < f.length; y++) {\n                      void 0 === h ? l.resolvedType.group ? i[p].encode(f[y], s.uint32((l.id << 3 | 3) >>> 0)).uint32((l.id << 3 | 4) >>> 0) : i[p].encode(f[y], s.uint32((l.id << 3 | 2) >>> 0).fork()).ldelim() : s.uint32((l.id << 3 | h) >>> 0)[d](f[y]);\n                    }\n                  } else (!l.optional || null != f && t.hasOwnProperty(l.name)) && (l.optional || null != f && t.hasOwnProperty(l.name) || __f__(\"warn\", \"注意啦!!!很大概率会报错 类型:\", t.$type ? t.$type.name : \"不晓得\", \"没有设置对应的属性:\", l.name, \"检查是不是proto文件属性设置为了required\", \" at SDK/4.1.7-uniapp-log.js:1\"), void 0 === h ? l.resolvedType.group ? i[p].encode(f, s.uint32((l.id << 3 | 3) >>> 0)).uint32((l.id << 3 | 4) >>> 0) : i[p].encode(f, s.uint32((l.id << 3 | 2) >>> 0).fork()).ldelim() : s.uint32((l.id << 3 | h) >>> 0)[d](f));\n                }\n                return s;\n              };\n            };\n          }\n          e.exports = i, i._configure = function () {\n            o = r(582), n = r(696);\n          };\n        },\n        582: function _(e, t, r) {\n          e.exports = i;\n          var o = r(998);\n          ((i.prototype = Object.create(o.prototype)).constructor = i).className = \"Enum\";\n          var n = r(476);\n          function i(e, t, r, n, i) {\n            if (o.call(this, e, r), t && \"object\" != _typeof(t)) throw TypeError(\"values must be an object\");\n            if (this.valuesById = {}, this.values = Object.create(this.valuesById), this.comment = n, this.comments = i || {}, this.reserved = void 0, t) for (var a = Object.keys(t), s = 0; s < a.length; ++s) {\n              \"number\" == typeof t[a[s]] && (this.valuesById[this.values[a[s]] = t[a[s]]] = a[s]);\n            }\n          }\n          i.fromJSON = function (e, t) {\n            var r = new i(e, t.values, t.options, t.comment, t.comments);\n            return r.reserved = t.reserved, r;\n          }, i.prototype.toJSON = function (e) {\n            var t = !!e && Boolean(e.keepComments);\n            return util.toObject([\"options\", this.options, \"values\", this.values, \"reserved\", this.reserved && this.reserved.length ? this.reserved : void 0, \"comment\", t ? this.comment : void 0, \"comments\", t ? this.comments : void 0]);\n          }, i.prototype.add = function (e, t, r) {\n            if (!util.isString(e)) throw TypeError(\"name must be a string\");\n            if (!util.isInteger(t)) throw TypeError(\"id must be an integer\");\n            if (void 0 !== this.values[e]) throw Error(\"duplicate name '\" + e + \"' in \" + this);\n            if (this.isReservedId(t)) throw Error(\"id \" + t + \" is reserved in \" + this);\n            if (this.isReservedName(e)) throw Error(\"name '\" + e + \"' is reserved in \" + this);\n            if (void 0 !== this.valuesById[t]) {\n              if (!this.options || !this.options.allow_alias) throw Error(\"duplicate id \" + t + \" in \" + this);\n              this.values[e] = t;\n            } else this.valuesById[this.values[e] = t] = e;\n            return this.comments[e] = r || null, this;\n          }, i.prototype.remove = function (e) {\n            if (!util.isString(e)) throw TypeError(\"name must be a string\");\n            var t = this.values[e];\n            if (null == t) throw Error(\"name '\" + e + \"' does not exist in \" + this);\n            return delete this.valuesById[t], delete this.values[e], delete this.comments[e], this;\n          }, i.prototype.isReservedId = function (e) {\n            return n.isReservedId(this.reserved, e);\n          }, i.prototype.isReservedName = function (e) {\n            return n.isReservedName(this.reserved, e);\n          };\n        },\n        286: function _(e, t, r) {\n          e.exports = u;\n          var o,\n            n,\n            i,\n            a,\n            s = r(998);\n          ((u.prototype = Object.create(s.prototype)).constructor = u).className = \"Field\";\n          var c = /^required|optional|repeated$/;\n          function u(e, t, r, o, a, u, l) {\n            if (i.isObject(o) ? (l = a, u = o, o = a = void 0) : i.isObject(a) && (l = u, u = a, a = void 0), s.call(this, e, u), !i.isInteger(t) || t < 0) throw TypeError(\"id must be a non-negative integer\");\n            if (!i.isString(r)) throw TypeError(\"type must be a string\");\n            if (void 0 !== o && !c.test(o = o.toString().toLowerCase())) throw TypeError(\"rule must be a string rule\");\n            if (void 0 !== a && !i.isString(a)) throw TypeError(\"extend must be a string\");\n            this.rule = o && \"optional\" !== o ? o : void 0, this.type = r, this.id = t, this.extend = a || void 0, this.required = \"required\" === o, this.optional = !this.required, this.repeated = \"repeated\" === o, this.map = !1, this.message = null, this.partOf = null, this.typeDefault = null, this.defaultValue = null, this.long = !!i.Long && void 0 !== n.long[r], this.bytes = \"bytes\" === r, this.resolvedType = null, this.extensionField = null, this.declaringField = null, this._packed = null, this.comment = l;\n          }\n          u.fromJSON = function (e, t) {\n            return new u(e, t.id, t.type, t.rule, t.extend, t.options, t.comment);\n          }, Object.defineProperty(u.prototype, \"packed\", {\n            get: function get() {\n              return null === this._packed && (this._packed = !1 !== this.getOption(\"packed\")), this._packed;\n            }\n          }), u.prototype.setOption = function (e, t, r) {\n            return \"packed\" === e && (this._packed = null), s.prototype.setOption.call(this, e, t, r);\n          }, u.prototype.toJSON = function (e) {\n            var t = !!e && Boolean(e.keepComments);\n            return i.toObject([\"rule\", \"optional\" !== this.rule && this.rule || void 0, \"type\", this.type, \"id\", this.id, \"extend\", this.extend, \"options\", this.options, \"comment\", t ? this.comment : void 0]);\n          }, u.prototype.resolve = function () {\n            if (this.resolved) return this;\n            if (void 0 === (this.typeDefault = n.defaults[this.type]) && (this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type), this.resolvedType instanceof a ? this.typeDefault = null : this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]), this.options && null != this.options.default && (this.typeDefault = this.options.default, this.resolvedType instanceof o && \"string\" == typeof this.typeDefault && (this.typeDefault = this.resolvedType.values[this.typeDefault])), this.options && (!0 !== this.options.packed && (void 0 === this.options.packed || !this.resolvedType || this.resolvedType instanceof o) || delete this.options.packed, Object.keys(this.options).length || (this.options = void 0)), this.long) this.typeDefault = i.Long.fromNumber(this.typeDefault, \"u\" === this.type.charAt(0)), Object.freeze && Object.freeze(this.typeDefault);else if (this.bytes && \"string\" == typeof this.typeDefault) {\n              var e;\n              i.utf8.write(this.typeDefault, e = i.newBuffer(i.utf8.length(this.typeDefault)), 0), this.typeDefault = e;\n            }\n            return this.map ? this.defaultValue = i.emptyObject : this.repeated ? this.defaultValue = i.emptyArray : this.defaultValue = this.typeDefault, this.parent instanceof a && (this.parent.ctor.prototype[this.name] = this.defaultValue), s.prototype.resolve.call(this);\n          }, u.d = function (e, t, r, o) {\n            return \"function\" == typeof t ? t = i.decorateType(t).name : t && \"object\" == _typeof(t) && (t = i.decorateEnum(t).name), function (n, a) {\n              i.decorateType(n.constructor).add(new u(a, e, t, r, {\n                default: o\n              }));\n            };\n          }, u._configure = function () {\n            a = r(192), o = r(582), n = r(696), i = r(935);\n          };\n        },\n        283: function _(e) {\n          function t(e) {\n            return \"undefined\" != typeof Float32Array ? function () {\n              var t = new Float32Array([-0]),\n                r = new Uint8Array(t.buffer),\n                o = 128 === r[3];\n              function n(e, o, n) {\n                t[0] = e, o[n] = r[0], o[n + 1] = r[1], o[n + 2] = r[2], o[n + 3] = r[3];\n              }\n              function i(e, o, n) {\n                t[0] = e, o[n] = r[3], o[n + 1] = r[2], o[n + 2] = r[1], o[n + 3] = r[0];\n              }\n              function a(e, o) {\n                return r[0] = e[o], r[1] = e[o + 1], r[2] = e[o + 2], r[3] = e[o + 3], t[0];\n              }\n              function s(e, o) {\n                return r[3] = e[o], r[2] = e[o + 1], r[1] = e[o + 2], r[0] = e[o + 3], t[0];\n              }\n              e.writeFloatLE = o ? n : i, e.writeFloatBE = o ? i : n, e.readFloatLE = o ? a : s, e.readFloatBE = o ? s : a;\n            }() : function () {\n              function t(e, t, r, o) {\n                var n = t < 0 ? 1 : 0;\n                if (n && (t = -t), 0 === t) e(1 / t > 0 ? 0 : 2147483648, r, o);else if (isNaN(t)) e(2143289344, r, o);else if (t > 34028234663852886e22) e((n << 31 | 2139095040) >>> 0, r, o);else if (t < 11754943508222875e-54) e((n << 31 | Math.round(t / 1401298464324817e-60)) >>> 0, r, o);else {\n                  var i = Math.floor(Math.log(t) / Math.LN2);\n                  e((n << 31 | i + 127 << 23 | 8388607 & Math.round(t * Math.pow(2, -i) * 8388608)) >>> 0, r, o);\n                }\n              }\n              function a(e, t, r) {\n                var o = e(t, r),\n                  n = 2 * (o >> 31) + 1,\n                  i = o >>> 23 & 255,\n                  a = 8388607 & o;\n                return 255 === i ? a ? NaN : n * (1 / 0) : 0 === i ? 1401298464324817e-60 * n * a : n * Math.pow(2, i - 150) * (a + 8388608);\n              }\n              e.writeFloatLE = t.bind(null, r), e.writeFloatBE = t.bind(null, o), e.readFloatLE = a.bind(null, n), e.readFloatBE = a.bind(null, i);\n            }(), \"undefined\" != typeof Float64Array ? function () {\n              var t = new Float64Array([-0]),\n                r = new Uint8Array(t.buffer),\n                o = 128 === r[7];\n              function n(e, o, n) {\n                t[0] = e, o[n] = r[0], o[n + 1] = r[1], o[n + 2] = r[2], o[n + 3] = r[3], o[n + 4] = r[4], o[n + 5] = r[5], o[n + 6] = r[6], o[n + 7] = r[7];\n              }\n              function i(e, o, n) {\n                t[0] = e, o[n] = r[7], o[n + 1] = r[6], o[n + 2] = r[5], o[n + 3] = r[4], o[n + 4] = r[3], o[n + 5] = r[2], o[n + 6] = r[1], o[n + 7] = r[0];\n              }\n              function a(e, o) {\n                return r[0] = e[o], r[1] = e[o + 1], r[2] = e[o + 2], r[3] = e[o + 3], r[4] = e[o + 4], r[5] = e[o + 5], r[6] = e[o + 6], r[7] = e[o + 7], t[0];\n              }\n              function s(e, o) {\n                return r[7] = e[o], r[6] = e[o + 1], r[5] = e[o + 2], r[4] = e[o + 3], r[3] = e[o + 4], r[2] = e[o + 5], r[1] = e[o + 6], r[0] = e[o + 7], t[0];\n              }\n              e.writeDoubleLE = o ? n : i, e.writeDoubleBE = o ? i : n, e.readDoubleLE = o ? a : s, e.readDoubleBE = o ? s : a;\n            }() : function () {\n              function t(e, t, r, o, n, i) {\n                var a = o < 0 ? 1 : 0;\n                if (a && (o = -o), 0 === o) e(0, n, i + t), e(1 / o > 0 ? 0 : 2147483648, n, i + r);else if (isNaN(o)) e(0, n, i + t), e(2146959360, n, i + r);else if (o > 17976931348623157e292) e(0, n, i + t), e((a << 31 | 2146435072) >>> 0, n, i + r);else {\n                  var s;\n                  if (o < 22250738585072014e-324) e((s = o / 5e-324) >>> 0, n, i + t), e((a << 31 | s / 4294967296) >>> 0, n, i + r);else {\n                    var c = Math.floor(Math.log(o) / Math.LN2);\n                    1024 === c && (c = 1023), e(4503599627370496 * (s = o * Math.pow(2, -c)) >>> 0, n, i + t), e((a << 31 | c + 1023 << 20 | 1048576 * s & 1048575) >>> 0, n, i + r);\n                  }\n                }\n              }\n              function a(e, t, r, o, n) {\n                var i = e(o, n + t),\n                  a = e(o, n + r),\n                  s = 2 * (a >> 31) + 1,\n                  c = a >>> 20 & 2047,\n                  u = 4294967296 * (1048575 & a) + i;\n                return 2047 === c ? u ? NaN : s * (1 / 0) : 0 === c ? 5e-324 * s * u : s * Math.pow(2, c - 1075) * (u + 4503599627370496);\n              }\n              e.writeDoubleLE = t.bind(null, r, 0, 4), e.writeDoubleBE = t.bind(null, o, 4, 0), e.readDoubleLE = a.bind(null, n, 0, 4), e.readDoubleBE = a.bind(null, i, 4, 0);\n            }(), e;\n          }\n          function r(e, t, r) {\n            t[r] = 255 & e, t[r + 1] = e >>> 8 & 255, t[r + 2] = e >>> 16 & 255, t[r + 3] = e >>> 24;\n          }\n          function o(e, t, r) {\n            t[r] = e >>> 24, t[r + 1] = e >>> 16 & 255, t[r + 2] = e >>> 8 & 255, t[r + 3] = 255 & e;\n          }\n          function n(e, t) {\n            return (e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24) >>> 0;\n          }\n          function i(e, t) {\n            return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0;\n          }\n          e.exports = t(t);\n        },\n        939: function _(e) {\n          e.exports = r;\n          var t = null;\n          try {\n            t = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n          } catch (e) {}\n          function r(e, t, r) {\n            this.low = 0 | e, this.high = 0 | t, this.unsigned = !!r;\n          }\n          function o(e) {\n            return !0 === (e && e.__isLong__);\n          }\n          r.prototype.__isLong__, Object.defineProperty(r.prototype, \"__isLong__\", {\n            value: !0\n          }), r.isLong = o;\n          var n = {},\n            i = {};\n          function a(e, t) {\n            var r, o, a;\n            return t ? (a = 0 <= (e >>>= 0) && e < 256) && (o = i[e]) ? o : (r = c(e, (0 | e) < 0 ? -1 : 0, !0), a && (i[e] = r), r) : (a = -128 <= (e |= 0) && e < 128) && (o = n[e]) ? o : (r = c(e, e < 0 ? -1 : 0, !1), a && (n[e] = r), r);\n          }\n          function s(e, t) {\n            if (isNaN(e)) return t ? E : g;\n            if (t) {\n              if (e < 0) return E;\n              if (e >= h) return O;\n            } else {\n              if (e <= -f) return R;\n              if (e + 1 >= f) return _;\n            }\n            return e < 0 ? s(-e, t).neg() : c(e % d | 0, e / d | 0, t);\n          }\n          function c(e, t, o) {\n            return new r(e, t, o);\n          }\n          r.fromInt = a, r.fromNumber = s, r.fromBits = c;\n          var u = Math.pow;\n          function l(e, t, r) {\n            if (0 === e.length) throw Error(\"empty string\");\n            if (\"NaN\" === e || \"Infinity\" === e || \"+Infinity\" === e || \"-Infinity\" === e) return g;\n            if (\"number\" == typeof t ? (r = t, t = !1) : t = !!t, (r = r || 10) < 2 || 36 < r) throw RangeError(\"radix\");\n            var o;\n            if ((o = e.indexOf(\"-\")) > 0) throw Error(\"interior hyphen\");\n            if (0 === o) return l(e.substring(1), t, r).neg();\n            for (var n = s(u(r, 8)), i = g, a = 0; a < e.length; a += 8) {\n              var c = Math.min(8, e.length - a),\n                p = parseInt(e.substring(a, a + c), r);\n              if (c < 8) {\n                var d = s(u(r, c));\n                i = i.mul(d).add(s(p));\n              } else i = (i = i.mul(n)).add(s(p));\n            }\n            return i.unsigned = t, i;\n          }\n          function p(e, t) {\n            return \"number\" == typeof e ? s(e, t) : \"string\" == typeof e ? l(e, t) : c(e.low, e.high, \"boolean\" == typeof t ? t : e.unsigned);\n          }\n          r.fromString = l, r.fromValue = p;\n          var d = 4294967296,\n            h = d * d,\n            f = h / 2,\n            m = a(1 << 24),\n            g = a(0);\n          r.ZERO = g;\n          var E = a(0, !0);\n          r.UZERO = E;\n          var y = a(1);\n          r.ONE = y;\n          var T = a(1, !0);\n          r.UONE = T;\n          var v = a(-1);\n          r.NEG_ONE = v;\n          var _ = c(-1, 2147483647, !1);\n          r.MAX_VALUE = _;\n          var O = c(-1, -1, !0);\n          r.MAX_UNSIGNED_VALUE = O;\n          var R = c(0, -2147483648, !1);\n          r.MIN_VALUE = R;\n          var I = r.prototype;\n          I.toInt = function () {\n            return this.unsigned ? this.low >>> 0 : this.low;\n          }, I.toNumber = function () {\n            return this.unsigned ? (this.high >>> 0) * d + (this.low >>> 0) : this.high * d + (this.low >>> 0);\n          }, I.toString = function (e) {\n            if ((e = e || 10) < 2 || 36 < e) throw RangeError(\"radix\");\n            if (this.isZero()) return \"0\";\n            if (this.isNegative()) {\n              if (this.eq(R)) {\n                var t = s(e),\n                  r = this.div(t),\n                  o = r.mul(t).sub(this);\n                return r.toString(e) + o.toInt().toString(e);\n              }\n              return \"-\" + this.neg().toString(e);\n            }\n            for (var n = s(u(e, 6), this.unsigned), i = this, a = \"\";;) {\n              var c = i.div(n),\n                l = (i.sub(c.mul(n)).toInt() >>> 0).toString(e);\n              if ((i = c).isZero()) return l + a;\n              for (; l.length < 6;) {\n                l = \"0\" + l;\n              }\n              a = \"\" + l + a;\n            }\n          }, I.getHighBits = function () {\n            return this.high;\n          }, I.getHighBitsUnsigned = function () {\n            return this.high >>> 0;\n          }, I.getLowBits = function () {\n            return this.low;\n          }, I.getLowBitsUnsigned = function () {\n            return this.low >>> 0;\n          }, I.getNumBitsAbs = function () {\n            if (this.isNegative()) return this.eq(R) ? 64 : this.neg().getNumBitsAbs();\n            for (var e = 0 != this.high ? this.high : this.low, t = 31; t > 0 && 0 == (e & 1 << t); t--) {\n              ;\n            }\n            return 0 != this.high ? t + 33 : t + 1;\n          }, I.isZero = function () {\n            return 0 === this.high && 0 === this.low;\n          }, I.eqz = I.isZero, I.isNegative = function () {\n            return !this.unsigned && this.high < 0;\n          }, I.isPositive = function () {\n            return this.unsigned || this.high >= 0;\n          }, I.isOdd = function () {\n            return 1 == (1 & this.low);\n          }, I.isEven = function () {\n            return 0 == (1 & this.low);\n          }, I.equals = function (e) {\n            return o(e) || (e = p(e)), (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low;\n          }, I.eq = I.equals, I.notEquals = function (e) {\n            return !this.eq(e);\n          }, I.neq = I.notEquals, I.ne = I.notEquals, I.lessThan = function (e) {\n            return this.comp(e) < 0;\n          }, I.lt = I.lessThan, I.lessThanOrEqual = function (e) {\n            return this.comp(e) <= 0;\n          }, I.lte = I.lessThanOrEqual, I.le = I.lessThanOrEqual, I.greaterThan = function (e) {\n            return this.comp(e) > 0;\n          }, I.gt = I.greaterThan, I.greaterThanOrEqual = function (e) {\n            return this.comp(e) >= 0;\n          }, I.gte = I.greaterThanOrEqual, I.ge = I.greaterThanOrEqual, I.compare = function (e) {\n            if (o(e) || (e = p(e)), this.eq(e)) return 0;\n            var t = this.isNegative(),\n              r = e.isNegative();\n            return t && !r ? -1 : !t && r ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1;\n          }, I.comp = I.compare, I.negate = function () {\n            return !this.unsigned && this.eq(R) ? R : this.not().add(y);\n          }, I.neg = I.negate, I.add = function (e) {\n            o(e) || (e = p(e));\n            var t = this.high >>> 16,\n              r = 65535 & this.high,\n              n = this.low >>> 16,\n              i = 65535 & this.low,\n              a = e.high >>> 16,\n              s = 65535 & e.high,\n              u = e.low >>> 16,\n              l = 0,\n              d = 0,\n              h = 0,\n              f = 0;\n            return h += (f += i + (65535 & e.low)) >>> 16, d += (h += n + u) >>> 16, l += (d += r + s) >>> 16, l += t + a, c((h &= 65535) << 16 | (f &= 65535), (l &= 65535) << 16 | (d &= 65535), this.unsigned);\n          }, I.subtract = function (e) {\n            return o(e) || (e = p(e)), this.add(e.neg());\n          }, I.sub = I.subtract, I.multiply = function (e) {\n            if (this.isZero()) return g;\n            if (o(e) || (e = p(e)), t) return c(t.mul(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);\n            if (e.isZero()) return g;\n            if (this.eq(R)) return e.isOdd() ? R : g;\n            if (e.eq(R)) return this.isOdd() ? R : g;\n            if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();\n            if (e.isNegative()) return this.mul(e.neg()).neg();\n            if (this.lt(m) && e.lt(m)) return s(this.toNumber() * e.toNumber(), this.unsigned);\n            var r = this.high >>> 16,\n              n = 65535 & this.high,\n              i = this.low >>> 16,\n              a = 65535 & this.low,\n              u = e.high >>> 16,\n              l = 65535 & e.high,\n              d = e.low >>> 16,\n              h = 65535 & e.low,\n              f = 0,\n              E = 0,\n              y = 0,\n              T = 0;\n            return y += (T += a * h) >>> 16, E += (y += i * h) >>> 16, y &= 65535, E += (y += a * d) >>> 16, f += (E += n * h) >>> 16, E &= 65535, f += (E += i * d) >>> 16, E &= 65535, f += (E += a * l) >>> 16, f += r * h + n * d + i * l + a * u, c((y &= 65535) << 16 | (T &= 65535), (f &= 65535) << 16 | (E &= 65535), this.unsigned);\n          }, I.mul = I.multiply, I.divide = function (e) {\n            if (o(e) || (e = p(e)), e.isZero()) throw Error(\"division by zero\");\n            var r, n, i;\n            if (t) return this.unsigned || -2147483648 !== this.high || -1 !== e.low || -1 !== e.high ? c((this.unsigned ? t.div_u : t.div_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned) : this;\n            if (this.isZero()) return this.unsigned ? E : g;\n            if (this.unsigned) {\n              if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return E;\n              if (e.gt(this.shru(1))) return T;\n              i = E;\n            } else {\n              if (this.eq(R)) return e.eq(y) || e.eq(v) ? R : e.eq(R) ? y : (r = this.shr(1).div(e).shl(1)).eq(g) ? e.isNegative() ? y : v : (n = this.sub(e.mul(r)), i = r.add(n.div(e)));\n              if (e.eq(R)) return this.unsigned ? E : g;\n              if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();\n              if (e.isNegative()) return this.div(e.neg()).neg();\n              i = g;\n            }\n            for (n = this; n.gte(e);) {\n              r = Math.max(1, Math.floor(n.toNumber() / e.toNumber()));\n              for (var a = Math.ceil(Math.log(r) / Math.LN2), l = a <= 48 ? 1 : u(2, a - 48), d = s(r), h = d.mul(e); h.isNegative() || h.gt(n);) {\n                h = (d = s(r -= l, this.unsigned)).mul(e);\n              }\n              d.isZero() && (d = y), i = i.add(d), n = n.sub(h);\n            }\n            return i;\n          }, I.div = I.divide, I.modulo = function (e) {\n            return o(e) || (e = p(e)), t ? c((this.unsigned ? t.rem_u : t.rem_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned) : this.sub(this.div(e).mul(e));\n          }, I.mod = I.modulo, I.rem = I.modulo, I.not = function () {\n            return c(~this.low, ~this.high, this.unsigned);\n          }, I.and = function (e) {\n            return o(e) || (e = p(e)), c(this.low & e.low, this.high & e.high, this.unsigned);\n          }, I.or = function (e) {\n            return o(e) || (e = p(e)), c(this.low | e.low, this.high | e.high, this.unsigned);\n          }, I.xor = function (e) {\n            return o(e) || (e = p(e)), c(this.low ^ e.low, this.high ^ e.high, this.unsigned);\n          }, I.shiftLeft = function (e) {\n            return o(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? c(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : c(0, this.low << e - 32, this.unsigned);\n          }, I.shl = I.shiftLeft, I.shiftRight = function (e) {\n            return o(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? c(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : c(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n          }, I.shr = I.shiftRight, I.shiftRightUnsigned = function (e) {\n            if (o(e) && (e = e.toInt()), 0 == (e &= 63)) return this;\n            var t = this.high;\n            return e < 32 ? c(this.low >>> e | t << 32 - e, t >>> e, this.unsigned) : c(32 === e ? t : t >>> e - 32, 0, this.unsigned);\n          }, I.shru = I.shiftRightUnsigned, I.shr_u = I.shiftRightUnsigned, I.toSigned = function () {\n            return this.unsigned ? c(this.low, this.high, !1) : this;\n          }, I.toUnsigned = function () {\n            return this.unsigned ? this : c(this.low, this.high, !0);\n          }, I.toBytes = function (e) {\n            return e ? this.toBytesLE() : this.toBytesBE();\n          }, I.toBytesLE = function () {\n            var e = this.high,\n              t = this.low;\n            return [255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24];\n          }, I.toBytesBE = function () {\n            var e = this.high,\n              t = this.low;\n            return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t];\n          }, r.fromBytes = function (e, t, o) {\n            return o ? r.fromBytesLE(e, t) : r.fromBytesBE(e, t);\n          }, r.fromBytesLE = function (e, t) {\n            return new r(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, t);\n          }, r.fromBytesBE = function (e, t) {\n            return new r(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], t);\n          };\n        },\n        365: function _(e, t, r) {\n          e.exports = n;\n          var o = r(935);\n          function n(e, t) {\n            this.lo = e >>> 0, this.hi = t >>> 0;\n          }\n          var i = n.zero = new n(0, 0);\n          i.toNumber = function () {\n            return 0;\n          }, i.zzEncode = i.zzDecode = function () {\n            return this;\n          }, i.length = function () {\n            return 1;\n          };\n          var a = n.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n          n.fromNumber = function (e) {\n            if (0 === e) return i;\n            var t = e < 0;\n            t && (e = -e);\n            var r = e >>> 0,\n              o = (e - r) / 4294967296 >>> 0;\n            return t && (o = ~o >>> 0, r = ~r >>> 0, ++r > 4294967295 && (r = 0, ++o > 4294967295 && (o = 0))), new n(r, o);\n          }, n.from = function (e) {\n            if (\"number\" == typeof e) return n.fromNumber(e);\n            if (\"string\" == typeof e || e instanceof String) {\n              if (!o.Long) return n.fromNumber(parseInt(e, 10));\n              e = o.Long.fromString(e);\n            }\n            return e.low || e.high ? new n(e.low >>> 0, e.high >>> 0) : i;\n          }, n.prototype.toNumber = function (e) {\n            if (!e && this.hi >>> 31) {\n              var t = 1 + ~this.lo >>> 0,\n                r = ~this.hi >>> 0;\n              return t || (r = r + 1 >>> 0), -(t + 4294967296 * r);\n            }\n            return this.lo + 4294967296 * this.hi;\n          }, n.prototype.toLong = function (e) {\n            return o.Long ? new o.Long(0 | this.lo, 0 | this.hi, Boolean(e)) : {\n              low: 0 | this.lo,\n              high: 0 | this.hi,\n              unsigned: Boolean(e)\n            };\n          };\n          var s = String.prototype.charCodeAt;\n          n.fromHash = function (e) {\n            return e === a ? i : new n((s.call(e, 0) | s.call(e, 1) << 8 | s.call(e, 2) << 16 | s.call(e, 3) << 24) >>> 0, (s.call(e, 4) | s.call(e, 5) << 8 | s.call(e, 6) << 16 | s.call(e, 7) << 24) >>> 0);\n          }, n.prototype.toHash = function () {\n            return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);\n          }, n.prototype.zzEncode = function () {\n            var e = this.hi >> 31;\n            return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e) >>> 0, this.lo = (this.lo << 1 ^ e) >>> 0, this;\n          }, n.prototype.zzDecode = function () {\n            var e = -(1 & this.lo);\n            return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e) >>> 0, this.hi = (this.hi >>> 1 ^ e) >>> 0, this;\n          }, n.prototype.length = function () {\n            var e = this.lo,\n              t = (this.lo >>> 28 | this.hi << 4) >>> 0,\n              r = this.hi >>> 24;\n            return 0 === r ? 0 === t ? e < 16384 ? e < 128 ? 1 : 2 : e < 2097152 ? 3 : 4 : t < 16384 ? t < 128 ? 5 : 6 : t < 2097152 ? 7 : 8 : r < 128 ? 9 : 10;\n          };\n        },\n        435: function _(e, t, r) {\n          e.exports = a;\n          var o,\n            n,\n            i = r(286);\n          function a(e, t, r, o, a, s) {\n            if (i.call(this, e, t, o, void 0, void 0, a, s), !n.isString(r)) throw TypeError(\"keyType must be a string\");\n            this.keyType = r, this.resolvedKeyType = null, this.map = !0;\n          }\n          ((a.prototype = Object.create(i.prototype)).constructor = a).className = \"MapField\", a.fromJSON = function (e, t) {\n            return new a(e, t.id, t.keyType, t.type, t.options, t.comment);\n          }, a.prototype.toJSON = function (e) {\n            var t = !!e && Boolean(e.keepComments);\n            return n.toObject([\"keyType\", this.keyType, \"type\", this.type, \"id\", this.id, \"extend\", this.extend, \"options\", this.options, \"comment\", t ? this.comment : void 0]);\n          }, a.prototype.resolve = function () {\n            if (this.resolved) return this;\n            if (void 0 === o.mapKey[this.keyType]) throw Error(\"invalid key type: \" + this.keyType);\n            return i.prototype.resolve.call(this);\n          }, a.d = function (e, t, r) {\n            return \"function\" == typeof r ? r = n.decorateType(r).name : r && \"object\" == _typeof(r) && (r = n.decorateEnum(r).name), function (o, i) {\n              n.decorateType(o.constructor).add(new a(i, e, t, r));\n            };\n          }, a._configure = function () {\n            o = r(696), n = r(935);\n          };\n        },\n        339: function _(e, t, r) {\n          \"use strict\";\n\n          var o;\n          function n(e) {\n            if (e) for (var t = Object.keys(e), r = 0; r < t.length; ++r) {\n              this[t[r]] = e[t[r]];\n            }\n          }\n          e.exports = n, n.create = function (e) {\n            return this.$type.create(e);\n          }, n.encode = function (e, t) {\n            return arguments.length ? 1 == arguments.length ? this.$type.encode(arguments[0]) : this.$type.encode(arguments[0], arguments[1]) : this.$type.encode(this);\n          }, n.encodeDelimited = function (e, t) {\n            return this.$type.encodeDelimited(e, t);\n          }, n.decode = function (e) {\n            return this.$type.decode(e);\n          }, n.decodeDelimited = function (e) {\n            return this.$type.decodeDelimited(e);\n          }, n.verify = function (e) {\n            return this.$type.verify(e);\n          }, n.fromObject = function (e) {\n            return this.$type.fromObject(e);\n          }, n.toObject = function (e, t) {\n            return e = e || this, this.$type.toObject(e, t);\n          }, n.prototype.toJSON = function () {\n            return this.$type.toObject(this, o.toJSONOptions);\n          }, n.set = function (e, t) {\n            n[e] = t;\n          }, n.get = function (e) {\n            return n[e];\n          }, n._configure = function () {\n            o = r(935);\n          };\n        },\n        484: function _(e, t, r) {\n          \"use strict\";\n\n          e.exports = i;\n          var o,\n            n = r(998);\n          function i(e, t, r, i, a, s, c, u) {\n            if (o.isObject(a) ? (c = a, a = s = void 0) : o.isObject(s) && (c = s, s = void 0), void 0 !== t && !o.isString(t)) throw TypeError(\"type must be a string\");\n            if (!o.isString(r)) throw TypeError(\"requestType must be a string\");\n            if (!o.isString(i)) throw TypeError(\"responseType must be a string\");\n            n.call(this, e, c), this.type = t || \"rpc\", this.requestType = r, this.requestStream = !!a || void 0, this.responseType = i, this.responseStream = !!s || void 0, this.resolvedRequestType = null, this.resolvedResponseType = null, this.comment = u;\n          }\n          ((i.prototype = Object.create(n.prototype)).constructor = i).className = \"Method\", i.fromJSON = function (e, t) {\n            return new i(e, t.type, t.requestType, t.responseType, t.requestStream, t.responseStream, t.options, t.comment);\n          }, i.prototype.toJSON = function (e) {\n            var t = !!e && Boolean(e.keepComments);\n            return o.toObject([\"type\", \"rpc\" !== this.type && this.type || void 0, \"requestType\", this.requestType, \"requestStream\", this.requestStream, \"responseType\", this.responseType, \"responseStream\", this.responseStream, \"options\", this.options, \"comment\", t ? this.comment : void 0]);\n          }, i.prototype.resolve = function () {\n            return this.resolved ? this : (this.resolvedRequestType = this.parent.lookupType(this.requestType), this.resolvedResponseType = this.parent.lookupType(this.responseType), n.prototype.resolve.call(this));\n          }, i._configure = function () {\n            o = r(935);\n          };\n        },\n        476: function _(e, t, r) {\n          e.exports = l;\n          var o,\n            n,\n            i,\n            a,\n            s,\n            c = r(998);\n          function u(e, t) {\n            if (e && e.length) {\n              for (var r = {}, o = 0; o < e.length; ++o) {\n                r[e[o].name] = e[o].toJSON(t);\n              }\n              return r;\n            }\n          }\n          function l(e, t) {\n            c.call(this, e, t), this.nested = void 0, this._nestedArray = null;\n          }\n          function p(e) {\n            return e._nestedArray = null, e;\n          }\n          ((l.prototype = Object.create(c.prototype)).constructor = l).className = \"Namespace\", l.fromJSON = function (e, t) {\n            return new l(e, t.options).addJSON(t.nested);\n          }, l.arrayToJSON = u, l.isReservedId = function (e, t) {\n            if (e) for (var r = 0; r < e.length; ++r) {\n              if (\"string\" != typeof e[r] && e[r][0] <= t && e[r][1] >= t) return !0;\n            }\n            return !1;\n          }, l.isReservedName = function (e, t) {\n            if (e) for (var r = 0; r < e.length; ++r) {\n              if (e[r] === t) return !0;\n            }\n            return !1;\n          }, Object.defineProperty(l.prototype, \"nestedArray\", {\n            get: function get() {\n              return this._nestedArray || (this._nestedArray = i.toArray(this.nested));\n            }\n          }), l.prototype.toJSON = function (e) {\n            return i.toObject([\"options\", this.options, \"nested\", u(this.nestedArray, e)]);\n          }, l.prototype.addJSON = function (e) {\n            if (e) for (var t, r = Object.keys(e), i = 0; i < r.length; ++i) {\n              t = e[r[i]], this.add((void 0 !== t.fields ? a.fromJSON : void 0 !== t.values ? o.fromJSON : void 0 !== t.methods ? s.fromJSON : void 0 !== t.id ? n.fromJSON : l.fromJSON)(r[i], t));\n            }\n            return this;\n          }, l.prototype.get = function (e) {\n            return this.nested && this.nested[e] || null;\n          }, l.prototype.getEnum = function (e) {\n            if (this.nested && this.nested[e] instanceof o) return this.nested[e].values;\n            throw Error(\"no such enum: \" + e);\n          }, l.prototype.add = function (e) {\n            if (!(e instanceof n && void 0 !== e.extend || e instanceof a || e instanceof o || e instanceof s || e instanceof l)) throw TypeError(\"object must be a valid nested object\");\n            if (this.nested) {\n              var t = this.get(e.name);\n              if (t) {\n                if (!(t instanceof l && e instanceof l) || t instanceof a || t instanceof s) throw Error(\"duplicate name '\" + e.name + \"' in \" + this);\n                for (var r = t.nestedArray, i = 0; i < r.length; ++i) {\n                  e.add(r[i]);\n                }\n                this.remove(t), this.nested || (this.nested = {}), e.setOptions(t.options, !0);\n              }\n            } else this.nested = {};\n            return this.nested[e.name] = e, e.onAdd(this), p(this);\n          }, l.prototype.remove = function (e) {\n            if (!(e instanceof c)) throw TypeError(\"object must be a ReflectionObject\");\n            if (e.parent !== this) throw Error(e + \" is not a member of \" + this);\n            return delete this.nested[e.name], Object.keys(this.nested).length || (this.nested = void 0), e.onRemove(this), p(this);\n          }, l.prototype.define = function (e, t) {\n            if (i.isString(e)) e = e.split(\".\");else if (!Array.isArray(e)) throw TypeError(\"illegal path\");\n            if (e && e.length && \"\" === e[0]) throw Error(\"path must be relative\");\n            for (var r = this; e.length > 0;) {\n              var o = e.shift();\n              if (r.nested && r.nested[o]) {\n                if (!((r = r.nested[o]) instanceof l)) throw Error(\"path conflicts with non-namespace objects\");\n              } else r.add(r = new l(o));\n            }\n            return t && r.addJSON(t), r;\n          }, l.prototype.resolveAll = function () {\n            for (var e = this.nestedArray, t = 0; t < e.length;) {\n              e[t] instanceof l ? e[t++].resolveAll() : e[t++].resolve();\n            }\n            return this.resolve();\n          }, l.prototype.lookup = function (e, t, r) {\n            if (\"boolean\" == typeof t ? (r = t, t = void 0) : t && !Array.isArray(t) && (t = [t]), i.isString(e) && e.length) {\n              if (\".\" === e) return this.root;\n              e = e.split(\".\");\n            } else if (!e.length) return this;\n            if (\"\" === e[0]) return this.root.lookup(e.slice(1), t);\n            var o = this.get(e[0]);\n            if (o) {\n              if (1 === e.length) {\n                if (!t || t.indexOf(o.constructor) > -1) return o;\n              } else if (o instanceof l && (o = o.lookup(e.slice(1), t, !0))) return o;\n            } else for (var n = 0; n < this.nestedArray.length; ++n) {\n              if (this._nestedArray[n] instanceof l && (o = this._nestedArray[n].lookup(e, t, !0))) return o;\n            }\n            return null === this.parent || r ? null : this.parent.lookup(e, t);\n          }, l.prototype.lookupType = function (e) {\n            var t = this.lookup(e, [a]);\n            if (!t) throw Error(\"no such type: \" + e);\n            return t;\n          }, l.prototype.lookupEnum = function (e) {\n            var t = this.lookup(e, [o]);\n            if (!t) throw Error(\"no such Enum '\" + e + \"' in \" + this);\n            return t;\n          }, l.prototype.lookupTypeOrEnum = function (e) {\n            var t = this.lookup(e, [a, o]);\n            if (!t) throw Error(\"no such Type or Enum '\" + e + \"' in \" + this);\n            return t;\n          }, l.prototype.lookupService = function (e) {\n            var t = this.lookup(e, [s]);\n            if (!t) throw Error(\"no such Service '\" + e + \"' in \" + this);\n            return t;\n          }, l._configure = function () {\n            o = r(582), n = r(286), i = r(935), a = r(192), s = r(447);\n          };\n        },\n        998: function _(e, t, r) {\n          \"use strict\";\n\n          var o, n;\n          function i(e, t) {\n            if (!o.isString(e)) throw TypeError(\"name must be a string\");\n            if (t && !o.isObject(t)) throw TypeError(\"options must be an object\");\n            this.options = t, this.name = e, this.parent = null, this.resolved = !1, this.comment = null, this.filename = null;\n          }\n          e.exports = i, i.className = \"ReflectionObject\", Object.defineProperties(i.prototype, {\n            root: {\n              get: function get() {\n                for (var e = this; null !== e.parent;) {\n                  e = e.parent;\n                }\n                return e;\n              }\n            },\n            fullName: {\n              get: function get() {\n                for (var e = [this.name], t = this.parent; t;) {\n                  e.unshift(t.name), t = t.parent;\n                }\n                return e.join(\".\");\n              }\n            }\n          }), i.prototype.toJSON = function () {\n            throw Error();\n          }, i.prototype.onAdd = function (e) {\n            this.parent && this.parent !== e && this.parent.remove(this), this.parent = e, this.resolved = !1;\n            var t = e.root;\n            t instanceof n && t._handleAdd(this);\n          }, i.prototype.onRemove = function (e) {\n            var t = e.root;\n            t instanceof n && t._handleRemove(this), this.parent = null, this.resolved = !1;\n          }, i.prototype.resolve = function () {\n            return this.resolved || this.root instanceof n && (this.resolved = !0), this;\n          }, i.prototype.getOption = function (e) {\n            if (this.options) return this.options[e];\n          }, i.prototype.setOption = function (e, t, r) {\n            return r && this.options && void 0 !== this.options[e] || ((this.options || (this.options = {}))[e] = t), this;\n          }, i.prototype.setOptions = function (e, t) {\n            if (e) for (var r = Object.keys(e), o = 0; o < r.length; ++o) {\n              this.setOption(r[o], e[r[o]], t);\n            }\n            return this;\n          }, i.prototype.toString = function () {\n            var e = this.constructor.className,\n              t = this.fullName;\n            return t.length ? e + \" \" + t : e;\n          }, i._configure = function (e) {\n            n = r(685), o = r(935);\n          };\n        },\n        735: function _(e, t, r) {\n          e.exports = a;\n          var o,\n            n,\n            i = r(998);\n          function a(e, t, r, o) {\n            if (Array.isArray(t) || (r = t, t = void 0), i.call(this, e, r), void 0 !== t && !Array.isArray(t)) throw TypeError(\"fieldNames must be an Array\");\n            this.oneof = t || [], this.fieldsArray = [], this.comment = o;\n          }\n          function s(e) {\n            if (e.parent) for (var t = 0; t < e.fieldsArray.length; ++t) {\n              e.fieldsArray[t].parent || e.parent.add(e.fieldsArray[t]);\n            }\n          }\n          ((a.prototype = Object.create(i.prototype)).constructor = a).className = \"OneOf\", a.fromJSON = function (e, t) {\n            return new a(e, t.oneof, t.options, t.comment);\n          }, a.prototype.toJSON = function (e) {\n            var t = !!e && Boolean(e.keepComments);\n            return n.toObject([\"options\", this.options, \"oneof\", this.oneof, \"comment\", t ? this.comment : void 0]);\n          }, a.prototype.add = function (e) {\n            if (!(e instanceof o)) throw TypeError(\"field must be a Field\");\n            return e.parent && e.parent !== this.parent && e.parent.remove(e), this.oneof.push(e.name), this.fieldsArray.push(e), e.partOf = this, s(this), this;\n          }, a.prototype.remove = function (e) {\n            if (!(e instanceof o)) throw TypeError(\"field must be a Field\");\n            var t = this.fieldsArray.indexOf(e);\n            if (t < 0) throw Error(e + \" is not a member of \" + this);\n            return this.fieldsArray.splice(t, 1), (t = this.oneof.indexOf(e.name)) > -1 && this.oneof.splice(t, 1), e.partOf = null, this;\n          }, a.prototype.onAdd = function (e) {\n            i.prototype.onAdd.call(this, e);\n            for (var t = 0; t < this.oneof.length; ++t) {\n              var r = e.get(this.oneof[t]);\n              r && !r.partOf && (r.partOf = this, this.fieldsArray.push(r));\n            }\n            s(this);\n          }, a.prototype.onRemove = function (e) {\n            for (var t, r = 0; r < this.fieldsArray.length; ++r) {\n              (t = this.fieldsArray[r]).parent && t.parent.remove(t);\n            }\n            i.prototype.onRemove.call(this, e);\n          }, a.d = function () {\n            for (var e = new Array(arguments.length), t = 0; t < arguments.length;) {\n              e[t] = arguments[t++];\n            }\n            return function (t, r) {\n              n.decorateType(t.constructor).add(new a(r, e)), Object.defineProperty(t, r, {\n                get: n.oneOfGetter(e),\n                set: n.oneOfSetter(e)\n              });\n            };\n          }, a._configure = function () {\n            o = r(286), n = r(935);\n          };\n        },\n        845: function _(e, t, r) {\n          \"use strict\";\n\n          var o, n, i, a, s, c, u, l, p, d, h;\n          e.exports = I, I.filename = null, I.defaults = {\n            keepCase: !1\n          };\n          var f = /^[1-9][0-9]*$/,\n            m = /^-?[1-9][0-9]*$/,\n            g = /^0[x][0-9a-fA-F]+$/,\n            E = /^-?0[x][0-9a-fA-F]+$/,\n            y = /^0[0-7]+$/,\n            T = /^-?0[0-7]+$/,\n            v = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n            _ = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n            O = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,\n            R = /^(?:\\.[a-zA-Z][a-zA-Z_0-9]*)+$/;\n          function I(e, t, r) {\n            t instanceof n || (r = t, t = new n()), r || (r = I.defaults);\n            var S,\n              C,\n              N,\n              A,\n              M,\n              b = o(e, r.alternateCommentMode || !1),\n              U = b.next,\n              w = b.push,\n              k = b.peek,\n              P = b.skip,\n              L = b.cmnt,\n              D = !0,\n              G = !1,\n              x = t,\n              B = r.keepCase ? function (e) {\n                return e;\n              } : h.camelCase;\n            function H(e, t, r) {\n              var o = I.filename;\n              return r || (I.filename = null), Error(\"illegal \" + (t || \"token\") + \" '\" + e + \"' (\" + (o ? o + \", \" : \"\") + \"line \" + b.line + \")\");\n            }\n            function j() {\n              var e,\n                t = [];\n              do {\n                if ('\"' !== (e = U()) && \"'\" !== e) throw H(e);\n                t.push(U()), P(e), e = k();\n              } while ('\"' === e || \"'\" === e);\n              return t.join(\"\");\n            }\n            function F(e) {\n              var t = U();\n              switch (t) {\n                case \"'\":\n                case '\"':\n                  return w(t), j();\n                case \"true\":\n                case \"TRUE\":\n                  return !0;\n                case \"false\":\n                case \"FALSE\":\n                  return !1;\n              }\n              try {\n                return function (e, t) {\n                  var r = 1;\n                  switch (\"-\" === e.charAt(0) && (r = -1, e = e.substring(1)), e) {\n                    case \"inf\":\n                    case \"INF\":\n                    case \"Inf\":\n                      return r * (1 / 0);\n                    case \"nan\":\n                    case \"NAN\":\n                    case \"Nan\":\n                    case \"NaN\":\n                      return NaN;\n                    case \"0\":\n                      return 0;\n                  }\n                  if (f.test(e)) return r * parseInt(e, 10);\n                  if (g.test(e)) return r * parseInt(e, 16);\n                  if (y.test(e)) return r * parseInt(e, 8);\n                  if (v.test(e)) return r * parseFloat(e);\n                  throw H(e, \"number\", !0);\n                }(t);\n              } catch (r) {\n                if (e && O.test(t)) return t;\n                throw H(t, \"value\");\n              }\n            }\n            function W(e, t) {\n              var r, o;\n              do {\n                !t || '\"' !== (r = k()) && \"'\" !== r ? e.push([o = q(U()), P(\"to\", !0) ? q(U()) : o]) : e.push(j());\n              } while (P(\",\", !0));\n              P(\";\");\n            }\n            function q(e, t) {\n              switch (e) {\n                case \"max\":\n                case \"MAX\":\n                case \"Max\":\n                  return 536870911;\n                case \"0\":\n                  return 0;\n              }\n              if (!t && \"-\" === e.charAt(0)) throw H(e, \"id\");\n              if (m.test(e)) return parseInt(e, 10);\n              if (E.test(e)) return parseInt(e, 16);\n              if (T.test(e)) return parseInt(e, 8);\n              throw H(e, \"id\");\n            }\n            function K() {\n              if (void 0 !== S) throw H(\"package\");\n              if (S = U(), !O.test(S)) throw H(S, \"name\");\n              x = x.define(S), P(\";\");\n            }\n            function z() {\n              var e,\n                t = k();\n              switch (t) {\n                case \"weak\":\n                  e = N || (N = []), U();\n                  break;\n                case \"public\":\n                  U();\n                default:\n                  e = C || (C = []);\n              }\n              t = j(), P(\";\"), e.push(t);\n            }\n            function V() {\n              if (P(\"=\"), A = j(), !(G = \"proto3\" === A) && \"proto2\" !== A) throw H(A, \"syntax\");\n              P(\";\");\n            }\n            function J(e, t) {\n              switch (t) {\n                case \"option\":\n                  return Q(e, t), P(\";\"), !0;\n                case \"message\":\n                  return function (e, t) {\n                    if (!_.test(t = U())) throw H(t, \"type name\");\n                    var r = new i(t);\n                    X(r, function (e) {\n                      if (!J(r, e)) switch (e) {\n                        case \"map\":\n                          !function (e) {\n                            P(\"<\");\n                            var t = U();\n                            if (void 0 === d.mapKey[t]) throw H(t, \"type\");\n                            P(\",\");\n                            var r = U();\n                            if (!O.test(r)) throw H(r, \"type\");\n                            P(\">\");\n                            var o = U();\n                            if (!_.test(o)) throw H(o, \"name\");\n                            P(\"=\");\n                            var n = new s(B(o), q(U()), t, r);\n                            X(n, function (e) {\n                              if (\"option\" !== e) throw H(e);\n                              Q(n, e), P(\";\");\n                            }, function () {\n                              ee(n);\n                            }), e.add(n);\n                          }(r);\n                          break;\n                        case \"required\":\n                        case \"optional\":\n                        case \"repeated\":\n                          Y(r, e);\n                          break;\n                        case \"oneof\":\n                          !function (e, t) {\n                            if (!_.test(t = U())) throw H(t, \"name\");\n                            var r = new c(B(t));\n                            X(r, function (e) {\n                              \"option\" === e ? (Q(r, e), P(\";\")) : (w(e), Y(r, \"optional\"));\n                            }), e.add(r);\n                          }(r, e);\n                          break;\n                        case \"extensions\":\n                          W(r.extensions || (r.extensions = []));\n                          break;\n                        case \"reserved\":\n                          W(r.reserved || (r.reserved = []), !0);\n                          break;\n                        default:\n                          if (!G || !O.test(e)) throw H(e);\n                          w(e), Y(r, \"optional\");\n                      }\n                    }), e.add(r);\n                  }(e, t), !0;\n                case \"enum\":\n                  return function (e, t) {\n                    if (!_.test(t = U())) throw H(t, \"name\");\n                    var r = new u(t);\n                    X(r, function (e) {\n                      switch (e) {\n                        case \"option\":\n                          Q(r, e), P(\";\");\n                          break;\n                        case \"reserved\":\n                          W(r.reserved || (r.reserved = []), !0);\n                          break;\n                        default:\n                          !function (e, t) {\n                            if (!_.test(t)) throw H(t, \"name\");\n                            P(\"=\");\n                            var r = q(U(), !0),\n                              o = {};\n                            X(o, function (e) {\n                              if (\"option\" !== e) throw H(e);\n                              Q(o, e), P(\";\");\n                            }, function () {\n                              ee(o);\n                            }), e.add(t, r, o.comment);\n                          }(r, e);\n                      }\n                    }), e.add(r);\n                  }(e, t), !0;\n                case \"service\":\n                  return function (e, t) {\n                    if (!_.test(t = U())) throw H(t, \"service name\");\n                    var r = new l(t);\n                    X(r, function (e) {\n                      if (!J(r, e)) {\n                        if (\"rpc\" !== e) throw H(e);\n                        !function (e, t) {\n                          var r = t;\n                          if (!_.test(t = U())) throw H(t, \"name\");\n                          var o,\n                            n,\n                            i,\n                            a,\n                            s = t;\n                          if (P(\"(\"), P(\"stream\", !0) && (n = !0), !O.test(t = U())) throw H(t);\n                          if (o = t, P(\")\"), P(\"returns\"), P(\"(\"), P(\"stream\", !0) && (a = !0), !O.test(t = U())) throw H(t);\n                          i = t, P(\")\");\n                          var c = new p(s, r, o, i, n, a);\n                          X(c, function (e) {\n                            if (\"option\" !== e) throw H(e);\n                            Q(c, e), P(\";\");\n                          }), e.add(c);\n                        }(r, e);\n                      }\n                    }), e.add(r);\n                  }(e, t), !0;\n                case \"extend\":\n                  return function (e, t) {\n                    if (!O.test(t = U())) throw H(t, \"reference\");\n                    var r = t;\n                    X(null, function (t) {\n                      switch (t) {\n                        case \"required\":\n                        case \"repeated\":\n                        case \"optional\":\n                          Y(e, t, r);\n                          break;\n                        default:\n                          if (!G || !O.test(t)) throw H(t);\n                          w(t), Y(e, \"optional\", r);\n                      }\n                    });\n                  }(e, t), !0;\n              }\n              return !1;\n            }\n            function X(e, t, r) {\n              var o = b.line;\n              if (e && (e.comment = L(), e.filename = I.filename), P(\"{\", !0)) {\n                for (var n; \"}\" !== (n = U());) {\n                  t(n);\n                }\n                P(\";\", !0);\n              } else r && r(), P(\";\"), e && \"string\" != typeof e.comment && (e.comment = L(o));\n            }\n            function Y(e, t, r) {\n              var o = U();\n              if (\"group\" !== o) {\n                if (!O.test(o)) throw H(o, \"type\");\n                var n = U();\n                if (!_.test(n)) throw H(n, \"name\");\n                n = B(n), P(\"=\");\n                var s = new a(n, q(U()), o, t, r);\n                X(s, function (e) {\n                  if (\"option\" !== e) throw H(e);\n                  Q(s, e), P(\";\");\n                }, function () {\n                  ee(s);\n                }), e.add(s), G || !s.repeated || void 0 === d.packed[o] && void 0 !== d.basic[o] || s.setOption(\"packed\", !1, !0);\n              } else !function (e, t) {\n                var r = U();\n                if (!_.test(r)) throw H(r, \"name\");\n                var o = h.lcFirst(r);\n                r === o && (r = h.ucFirst(r)), P(\"=\");\n                var n = q(U()),\n                  s = new i(r);\n                s.group = !0;\n                var c = new a(o, n, r, t);\n                c.filename = I.filename, X(s, function (e) {\n                  switch (e) {\n                    case \"option\":\n                      Q(s, e), P(\";\");\n                      break;\n                    case \"required\":\n                    case \"optional\":\n                    case \"repeated\":\n                      Y(s, e);\n                      break;\n                    default:\n                      throw H(e);\n                  }\n                }), e.add(s).add(c);\n              }(e, t);\n            }\n            function Q(e, t) {\n              var r = P(\"(\", !0);\n              if (!O.test(t = U())) throw H(t, \"name\");\n              var o = t;\n              r && (P(\")\"), o = \"(\" + o + \")\", t = k(), R.test(t) && (o += t, U())), P(\"=\"), $(e, o);\n            }\n            function $(e, t) {\n              if (P(\"{\", !0)) do {\n                if (!_.test(M = U())) throw H(M, \"name\");\n                \"{\" === k() ? $(e, t + \".\" + M) : (P(\":\"), \"{\" === k() ? $(e, t + \".\" + M) : Z(e, t + \".\" + M, F(!0)));\n              } while (!P(\"}\", !0));else Z(e, t, F(!0));\n            }\n            function Z(e, t, r) {\n              e.setOption && e.setOption(t, r);\n            }\n            function ee(e) {\n              if (P(\"[\", !0)) {\n                do {\n                  Q(e, \"option\");\n                } while (P(\",\", !0));\n                P(\"]\");\n              }\n              return e;\n            }\n            for (; null !== (M = U());) {\n              switch (M) {\n                case \"package\":\n                  if (!D) throw H(M);\n                  K();\n                  break;\n                case \"import\":\n                  if (!D) throw H(M);\n                  z();\n                  break;\n                case \"syntax\":\n                  if (!D) throw H(M);\n                  V();\n                  break;\n                case \"option\":\n                  if (!D) throw H(M);\n                  Q(x, M), P(\";\");\n                  break;\n                default:\n                  if (J(x, M)) {\n                    D = !1;\n                    continue;\n                  }\n                  throw H(M);\n              }\n            }\n            return I.filename = null, {\n              package: S,\n              imports: C,\n              weakImports: N,\n              syntax: A,\n              root: t\n            };\n          }\n          I._configure = function () {\n            o = r(869), n = r(685), i = r(192), a = r(286), s = r(435), c = r(735), u = r(582), l = r(447), p = r(484), d = r(696), h = r(935);\n          };\n        },\n        444: function _(e) {\n          var t = e.exports,\n            r = t.isAbsolute = function (e) {\n              return /^(?:\\/|\\w+:)/.test(e);\n            },\n            o = t.normalize = function (e) {\n              var t = (e = e.replace(/\\\\/g, \"/\").replace(/\\/{2,}/g, \"/\")).split(\"/\"),\n                o = r(e),\n                n = \"\";\n              o && (n = t.shift() + \"/\");\n              for (var i = 0; i < t.length;) {\n                \"..\" === t[i] ? i > 0 && \"..\" !== t[i - 1] ? t.splice(--i, 2) : o ? t.splice(i, 1) : ++i : \".\" === t[i] ? t.splice(i, 1) : ++i;\n              }\n              return n + t.join(\"/\");\n            };\n          t.resolve = function (e, t, n) {\n            return n || (t = o(t)), r(t) ? t : (n || (e = o(e)), (e = e.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? o(e + \"/\" + t) : t);\n          };\n        },\n        997: function _(e) {\n          e.exports = function (e, t, r) {\n            var o = r || 8192,\n              n = o >>> 1,\n              i = null,\n              a = o;\n            return function (r) {\n              if (r < 1 || r > n) return e(r);\n              a + r > o && (i = e(o), a = 0);\n              var s = t.call(i, a, a += r);\n              return 7 & a && (a = 1 + (7 | a)), s;\n            };\n          };\n        },\n        494: function _(e, t, r) {\n          e.exports = s;\n          var o,\n            n,\n            i = r(935);\n          function a(e, t) {\n            return RangeError(\"index out of range: \" + e.pos + \" + \" + (t || 1) + \" > \" + e.len);\n          }\n          function s(e) {\n            this.buf = e, this.pos = 0, this.len = e.length;\n          }\n          var c,\n            u = \"undefined\" != typeof Uint8Array ? function (e) {\n              return e instanceof Uint8Array || Array.isArray(e) ? new s(e) : (\"undefined\" != typeof ArrayBuffer && e instanceof ArrayBuffer && __f__(\"warn\", \"\", \" at SDK/4.1.7-uniapp-log.js:1\"), new s(new Uint8Array(e)));\n            } : function (e) {\n              if (Array.isArray(e)) return new s(e);\n            };\n          function l() {\n            var e = new o(0, 0),\n              t = 0;\n            if (!(this.len - this.pos > 4)) {\n              for (; t < 3; ++t) {\n                if (this.pos >= this.len) throw a(this);\n                if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;\n              }\n              return e.lo = (e.lo | (127 & this.buf[this.pos++]) << 7 * t) >>> 0, e;\n            }\n            for (; t < 4; ++t) {\n              if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;\n            }\n            if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e.hi = (e.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128) return e;\n            if (t = 0, this.len - this.pos > 4) {\n              for (; t < 5; ++t) {\n                if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e;\n              }\n            } else for (; t < 5; ++t) {\n              if (this.pos >= this.len) throw a(this);\n              if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e;\n            }\n            throw Error(\"invalid varint encoding\");\n          }\n          function p(e, t) {\n            return (e[t - 4] | e[t - 3] << 8 | e[t - 2] << 16 | e[t - 1] << 24) >>> 0;\n          }\n          function d() {\n            if (this.pos + 8 > this.len) throw a(this, 8);\n            return new o(p(this.buf, this.pos += 4), p(this.buf, this.pos += 4));\n          }\n          s.create = i.Buffer ? function (e) {\n            return (s.create = function (e) {\n              return i.Buffer.isBuffer(e) ? new (void 0)(e) : u(e);\n            })(e);\n          } : u, s.prototype._slice = i.Array.prototype.subarray || i.Array.prototype.slice, s.prototype.uint32 = (c = 4294967295, function () {\n            if (c = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128) return c;\n            if (c = (c | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128) return c;\n            if (c = (c | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128) return c;\n            if (c = (c | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128) return c;\n            if (c = (c | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128) return c;\n            if ((this.pos += 5) > this.len) throw this.pos = this.len, a(this, 10);\n            return c;\n          }), s.prototype.int32 = function () {\n            return 0 | this.uint32();\n          }, s.prototype.sint32 = function () {\n            var e = this.uint32();\n            return e >>> 1 ^ -(1 & e) | 0;\n          }, s.prototype.bool = function () {\n            return 0 !== this.uint32();\n          }, s.prototype.fixed32 = function () {\n            if (this.pos + 4 > this.len) throw a(this, 4);\n            return p(this.buf, this.pos += 4);\n          }, s.prototype.sfixed32 = function () {\n            if (this.pos + 4 > this.len) throw a(this, 4);\n            return 0 | p(this.buf, this.pos += 4);\n          }, s.prototype.float = function () {\n            if (this.pos + 4 > this.len) throw a(this, 4);\n            var e = i.float.readFloatLE(this.buf, this.pos);\n            return this.pos += 4, e;\n          }, s.prototype.double = function () {\n            if (this.pos + 8 > this.len) throw a(this, 4);\n            var e = i.float.readDoubleLE(this.buf, this.pos);\n            return this.pos += 8, e;\n          }, s.prototype.bytes = function () {\n            var e = this.uint32(),\n              t = this.pos,\n              r = this.pos + e;\n            if (r > this.len) throw a(this, e);\n            return this.pos += e, Array.isArray(this.buf) ? this.buf.slice(t, r) : t === r ? new this.buf.constructor(0) : this._slice.call(this.buf, t, r);\n          }, s.prototype.string = function () {\n            var e = this.bytes();\n            return n.read(e, 0, e.length);\n          }, s.prototype.skip = function (e) {\n            if (\"number\" == typeof e) {\n              if (this.pos + e > this.len) throw a(this, e);\n              this.pos += e;\n            } else do {\n              if (this.pos >= this.len) throw a(this);\n            } while (128 & this.buf[this.pos++]);\n            return this;\n          }, s.prototype.skipType = function (e) {\n            switch (e) {\n              case 0:\n                this.skip();\n                break;\n              case 1:\n                this.skip(8);\n                break;\n              case 2:\n                this.skip(this.uint32());\n                break;\n              case 3:\n                for (; 4 != (e = 7 & this.uint32());) {\n                  this.skipType(e);\n                }\n                break;\n              case 5:\n                this.skip(4);\n                break;\n              default:\n                throw Error(\"invalid wire type \" + e + \" at offset \" + this.pos);\n            }\n            return this;\n          }, s._configure = function () {\n            o = r(365), n = r(498);\n            var e = i.Long ? \"toLong\" : \"toNumber\";\n            i.merge(s.prototype, {\n              int64: function int64() {\n                return l.call(this)[e](!1);\n              },\n              uint64: function uint64() {\n                return l.call(this)[e](!0);\n              },\n              sint64: function sint64() {\n                return l.call(this).zzDecode()[e](!1);\n              },\n              fixed64: function fixed64() {\n                return d.call(this)[e](!0);\n              },\n              sfixed64: function sfixed64() {\n                return d.call(this)[e](!1);\n              }\n            });\n          };\n        },\n        685: function _(e, t, r) {\n          e.exports = p;\n          var o = r(476);\n          ((p.prototype = Object.create(o.prototype)).constructor = p).className = \"Root\";\n          var n,\n            i,\n            a,\n            s = r(286),\n            c = r(582),\n            u = r(735),\n            l = r(935);\n          function p(e) {\n            o.call(this, \"\", e), this.deferred = [], this.files = [], this.names = [];\n          }\n          function d() {}\n          p.fromJSON = function (e, t) {\n            return e = \"string\" == typeof e ? JSON.parse(e) : e, t || (t = new p()), e.options && t.setOptions(e.options), t.addJSON(e.nested);\n          }, p.prototype.resolvePath = l.path.resolve, p.prototype.parseFromPbString = function e(t, r, o) {\n            \"function\" == typeof r && (o = r, r = void 0);\n            var n = this;\n            if (!o) return l.asPromise(e, n, t, r);\n            var s = null;\n            if (\"string\" == typeof t) s = JSON.parse(t);else {\n              if (\"object\" != _typeof(t)) return void __f__(\"log\", \"pb格式转化失败\", \" at SDK/4.1.7-uniapp-log.js:1\");\n              s = t;\n            }\n            function c(e, t) {\n              if (o) {\n                var r = o;\n                o = null, r(e, t);\n              }\n            }\n            function u(e, t) {\n              try {\n                if (l.isString(t) && \"{\" === t.charAt(0) && (t = JSON.parse(t)), l.isString(t)) {\n                  i.filename = e;\n                  var o,\n                    a = i(t, n, r),\n                    s = 0;\n                  if (a.imports) for (; s < a.imports.length; ++s) {\n                    p(o = a.imports[s]);\n                  }\n                  if (a.weakImports) {\n                    for (s = 0; s < a.weakImports.length; ++s) {\n                      o = a.weakImports[s];\n                    }\n                    p(o);\n                  }\n                } else n.setOptions(t.options).addJSON(t.nested);\n              } catch (e) {\n                c(e);\n              }\n              c(null, n);\n            }\n            function p(e) {\n              n.names.indexOf(e) > -1 || (n.names.push(e), e in a && u(e, a[e]));\n            }\n            u(s.name, s.pbJsonStr);\n          }, p.prototype.load = function e(t, r, o) {\n            \"function\" == typeof r && (o = r, r = void 0);\n            var n = this;\n            if (!o) return l.asPromise(e, n, t, r);\n            var s = o === d;\n            function c(e, t) {\n              if (o) {\n                var r = o;\n                if (o = null, s) throw e;\n                r(e, t);\n              }\n            }\n            function u(e, t) {\n              try {\n                if (l.isString(t) && \"{\" === t.charAt(0) && (t = JSON.parse(t)), l.isString(t)) {\n                  i.filename = e;\n                  var o,\n                    a = i(t, n, r),\n                    u = 0;\n                  if (a.imports) for (; u < a.imports.length; ++u) {\n                    (o = n.resolvePath(e, a.imports[u])) && p(o);\n                  }\n                  if (a.weakImports) for (u = 0; u < a.weakImports.length; ++u) {\n                    (o = n.resolvePath(e, a.weakImports[u])) && p(o, !0);\n                  }\n                } else n.setOptions(t.options).addJSON(t.nested);\n              } catch (e) {\n                c(e);\n              }\n              s || h || c(null, n);\n            }\n            function p(e, t) {\n              var r = e.lastIndexOf(\"google/protobuf/\");\n              if (r > -1) {\n                var i = e.substring(r);\n                i in a && (e = i);\n              }\n              if (!(n.files.indexOf(e) > -1)) if (n.files.push(e), e in a) s ? u(e, a[e]) : (++h, setTimeout(function () {\n                --h, u(e, a[e]);\n              }));else if (s) {\n                var p;\n                try {\n                  p = l.fs.readFileSync(e).toString(\"utf8\");\n                } catch (e) {\n                  return void (t || c(e));\n                }\n                u(e, p);\n              } else ++h, l.fetch(e, function (r, i) {\n                --h, o && (r ? t ? h || c(null, n) : c(r) : u(e, i));\n              });\n            }\n            var h = 0;\n            l.isString(t) && (t = [t]);\n            for (var f, m = 0; m < t.length; ++m) {\n              (f = n.resolvePath(\"\", t[m])) && p(f);\n            }\n            if (s) return n;\n            h || c(null, n);\n          }, p.prototype.loadSync = function (e, t) {\n            if (!l.isNode) throw Error(\"not supported\");\n            return this.load(e, t, d);\n          }, p.prototype.resolveAll = function () {\n            if (this.deferred.length) throw Error(\"unresolvable extensions: \" + this.deferred.map(function (e) {\n              return \"'extend \" + e.extend + \"' in \" + e.parent.fullName;\n            }).join(\", \"));\n            return o.prototype.resolveAll.call(this);\n          };\n          var h = /^[A-Z]/;\n          function f(e, t) {\n            var r = t.parent.lookup(t.extend);\n            if (r) {\n              var o = new s(t.fullName, t.id, t.type, t.rule, void 0, t.options);\n              return o.declaringField = t, t.extensionField = o, r.add(o), !0;\n            }\n            return !1;\n          }\n          p.prototype._handleAdd = function (e) {\n            if (e instanceof s) void 0 === e.extend || e.extensionField || f(0, e) || this.deferred.push(e);else if (e instanceof c) h.test(e.name) && (e.parent[e.name] = e.values);else if (!(e instanceof u)) {\n              if (e instanceof n) for (var t = 0; t < this.deferred.length;) {\n                f(0, this.deferred[t]) ? this.deferred.splice(t, 1) : ++t;\n              }\n              for (var r = 0; r < e.nestedArray.length; ++r) {\n                this._handleAdd(e._nestedArray[r]);\n              }\n              h.test(e.name) && (e.parent[e.name] = e);\n            }\n          }, p.prototype._handleRemove = function (e) {\n            if (e instanceof s) {\n              if (void 0 !== e.extend) if (e.extensionField) e.extensionField.parent.remove(e.extensionField), e.extensionField = null;else {\n                var t = this.deferred.indexOf(e);\n                t > -1 && this.deferred.splice(t, 1);\n              }\n            } else if (e instanceof c) h.test(e.name) && delete e.parent[e.name];else if (e instanceof o) {\n              for (var r = 0; r < e.nestedArray.length; ++r) {\n                this._handleRemove(e._nestedArray[r]);\n              }\n              h.test(e.name) && delete e.parent[e.name];\n            }\n          }, p._configure = function () {\n            n = r(192), i = r(845), a = r(72), s = r(286), c = r(582), u = r(735), l = r(935);\n          };\n        },\n        889: function _(e) {\n          e.exports = {};\n        },\n        325: function _(e, t, r) {\n          \"use strict\";\n\n          e.exports = n;\n          var o = r(935);\n          function n(e, t, r) {\n            if (\"function\" != typeof e) throw TypeError(\"rpcImpl must be a function\");\n            o.EventEmitter.call(this), this.rpcImpl = e, this.requestDelimited = Boolean(t), this.responseDelimited = Boolean(r);\n          }\n          (n.prototype = Object.create(o.EventEmitter.prototype)).constructor = n, n.prototype.rpcCall = function e(t, r, n, i, a) {\n            if (!i) throw TypeError(\"request must be specified\");\n            var s = this;\n            if (!a) return o.asPromise(e, s, t, r, n, i);\n            if (s.rpcImpl) try {\n              return s.rpcImpl(t, r[s.requestDelimited ? \"encodeDelimited\" : \"encode\"](i).finish(), function (e, r) {\n                if (e) return s.emit(\"error\", e, t), a(e);\n                if (null !== r) {\n                  if (!(r instanceof n)) try {\n                    r = n[s.responseDelimited ? \"decodeDelimited\" : \"decode\"](r);\n                  } catch (e) {\n                    return s.emit(\"error\", e, t), a(e);\n                  }\n                  return s.emit(\"data\", r, t), a(null, r);\n                }\n                s.end(!0);\n              });\n            } catch (e) {\n              return s.emit(\"error\", e, t), void setTimeout(function () {\n                a(e);\n              }, 0);\n            } else setTimeout(function () {\n              a(Error(\"already ended\"));\n            }, 0);\n          }, n.prototype.end = function (e) {\n            return this.rpcImpl && (e || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit(\"end\").off()), this;\n          };\n        },\n        447: function _(e, t, r) {\n          \"use strict\";\n\n          e.exports = s;\n          var o,\n            n,\n            i,\n            a = r(476);\n          function s(e, t) {\n            a.call(this, e, t), this.methods = {}, this._methodsArray = null;\n          }\n          function c(e) {\n            return e._methodsArray = null, e;\n          }\n          ((s.prototype = Object.create(a.prototype)).constructor = s).className = \"Service\", s.fromJSON = function (e, t) {\n            var r = new s(e, t.options);\n            if (t.methods) for (var n = Object.keys(t.methods), i = 0; i < n.length; ++i) {\n              r.add(o.fromJSON(n[i], t.methods[n[i]]));\n            }\n            return t.nested && r.addJSON(t.nested), r.comment = t.comment, r;\n          }, s.prototype.toJSON = function (e) {\n            var t = a.prototype.toJSON.call(this, e),\n              r = !!e && Boolean(e.keepComments);\n            return n.toObject([\"options\", t && t.options || void 0, \"methods\", a.arrayToJSON(this.methodsArray, e) || {}, \"nested\", t && t.nested || void 0, \"comment\", r ? this.comment : void 0]);\n          }, Object.defineProperty(s.prototype, \"methodsArray\", {\n            get: function get() {\n              return this._methodsArray || (this._methodsArray = n.toArray(this.methods));\n            }\n          }), s.prototype.get = function (e) {\n            return this.methods[e] || a.prototype.get.call(this, e);\n          }, s.prototype.resolveAll = function () {\n            for (var e = this.methodsArray, t = 0; t < e.length; ++t) {\n              e[t].resolve();\n            }\n            return a.prototype.resolve.call(this);\n          }, s.prototype.add = function (e) {\n            if (this.get(e.name)) throw Error(\"duplicate name '\" + e.name + \"' in \" + this);\n            return e instanceof o ? (this.methods[e.name] = e, e.parent = this, c(this)) : a.prototype.add.call(this, e);\n          }, s.prototype.remove = function (e) {\n            if (e instanceof o) {\n              if (this.methods[e.name] !== e) throw Error(e + \" is not a member of \" + this);\n              return delete this.methods[e.name], e.parent = null, c(this);\n            }\n            return a.prototype.remove.call(this, e);\n          }, s.prototype.create = function (e, t, r) {\n            for (var o, a = new i.Service(e, t, r), s = 0; s < this.methodsArray.length; ++s) {\n              var c = n.lcFirst((o = this._methodsArray[s]).resolve().name).replace(/[^$\\w_]/g, \"\");\n              a[c] = n.codegen([\"r\", \"c\"], n.isReserved(c) ? c + \"_\" : c)(\"return this.rpcCall(m,q,s,r,c)\")({\n                m: o,\n                q: o.resolvedRequestType.ctor,\n                s: o.resolvedResponseType.ctor\n              });\n            }\n            return a;\n          }, s._configure = function () {\n            o = r(484), n = r(935), i = r(325);\n          };\n        },\n        869: function _(e) {\n          e.exports = p;\n          var t = /[\\s{}=;:[\\],'\"()<>]/g,\n            r = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n            o = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g,\n            n = /^ *[*/]+ */,\n            i = /^\\s*\\*?\\/*/,\n            a = /\\n/g,\n            s = /\\s/,\n            c = /\\\\(.?)/g,\n            u = {\n              0: \"\\0\",\n              r: \"\\r\",\n              n: \"\\n\",\n              t: \"\\t\"\n            };\n          function l(e) {\n            return e.replace(c, function (e, t) {\n              switch (t) {\n                case \"\\\\\":\n                case \"\":\n                  return t;\n                default:\n                  return u[t] || \"\";\n              }\n            });\n          }\n          function p(e, c) {\n            e = e.toString();\n            var u = 0,\n              p = e.length,\n              d = 1,\n              h = null,\n              f = null,\n              m = 0,\n              g = !1,\n              E = [],\n              y = null;\n            function T(e) {\n              return Error(\"illegal \" + e + \" (line \" + d + \")\");\n            }\n            function v(t) {\n              return e.charAt(t);\n            }\n            function _(t, r) {\n              h = e.charAt(t++), m = d, g = !1;\n              var o,\n                s = t - (c ? 2 : 3);\n              do {\n                if (--s < 0 || \"\\n\" === (o = e.charAt(s))) {\n                  g = !0;\n                  break;\n                }\n              } while (\" \" === o || \"\\t\" === o);\n              for (var u = e.substring(t, r).split(a), l = 0; l < u.length; ++l) {\n                u[l] = u[l].replace(c ? i : n, \"\").trim();\n              }\n              f = u.join(\"\\n\").trim();\n            }\n            function O(t) {\n              var r = R(t),\n                o = e.substring(t, r);\n              return /^\\s*\\/{1,2}/.test(o);\n            }\n            function R(e) {\n              for (var t = e; t < p && \"\\n\" !== v(t);) {\n                t++;\n              }\n              return t;\n            }\n            function I() {\n              if (E.length > 0) return E.shift();\n              if (y) return function () {\n                var t = \"'\" === y ? o : r;\n                t.lastIndex = u - 1;\n                var n = t.exec(e);\n                if (!n) throw T(\"string\");\n                return u = t.lastIndex, S(y), y = null, l(n[1]);\n              }();\n              var n, i, a, h, f;\n              do {\n                if (u === p) return null;\n                for (n = !1; s.test(a = v(u));) {\n                  if (\"\\n\" === a && ++d, ++u === p) return null;\n                }\n                if (\"/\" === v(u)) {\n                  if (++u === p) throw T(\"comment\");\n                  if (\"/\" === v(u)) {\n                    if (c) {\n                      if (h = u, f = !1, O(u)) {\n                        f = !0;\n                        do {\n                          if ((u = R(u)) === p) break;\n                          u++;\n                        } while (O(u));\n                      } else u = Math.min(p, R(u) + 1);\n                      f && _(h, u), d++, n = !0;\n                    } else {\n                      for (f = \"/\" === v(h = u + 1); \"\\n\" !== v(++u);) {\n                        if (u === p) return null;\n                      }\n                      ++u, f && _(h, u - 1), ++d, n = !0;\n                    }\n                  } else {\n                    if (\"*\" !== (a = v(u))) return \"/\";\n                    h = u + 1, f = c || \"*\" === v(h);\n                    do {\n                      if (\"\\n\" === a && ++d, ++u === p) throw T(\"comment\");\n                      i = a, a = v(u);\n                    } while (\"*\" !== i || \"/\" !== a);\n                    ++u, f && _(h, u - 2), n = !0;\n                  }\n                }\n              } while (n);\n              var m = u;\n              if (t.lastIndex = 0, !t.test(v(m++))) for (; m < p && !t.test(v(m));) {\n                ++m;\n              }\n              var g = e.substring(u, u = m);\n              return '\"' !== g && \"'\" !== g || (y = g), g;\n            }\n            function S(e) {\n              E.push(e);\n            }\n            function C() {\n              if (!E.length) {\n                var e = I();\n                if (null === e) return null;\n                S(e);\n              }\n              return E[0];\n            }\n            return Object.defineProperty({\n              next: I,\n              peek: C,\n              push: S,\n              skip: function skip(e, t) {\n                var r = C();\n                if (r === e) return I(), !0;\n                if (!t) throw T(\"token '\" + r + \"', '\" + e + \"' expected\");\n                return !1;\n              },\n              cmnt: function cmnt(e) {\n                var t = null;\n                return void 0 === e ? m === d - 1 && (c || \"*\" === h || g) && (t = f) : (m < e && C(), m !== e || g || !c && \"/\" !== h || (t = f)), t;\n              }\n            }, \"line\", {\n              get: function get() {\n                return d;\n              }\n            });\n          }\n          p.unescape = l;\n        },\n        192: function _(e, t, r) {\n          e.exports = y;\n          var o,\n            n,\n            i,\n            a,\n            s,\n            c,\n            u,\n            l,\n            p,\n            d,\n            h,\n            f,\n            m,\n            g,\n            E = r(476);\n          function y(e, t) {\n            E.call(this, e, t), this.fields = {}, this.oneofs = void 0, this.extensions = void 0, this.reserved = void 0, this.group = void 0, this._fieldsById = null, this._fieldsArray = null, this._oneofsArray = null, this._ctor = null;\n          }\n          function T(e) {\n            return e._fieldsById = e._fieldsArray = e._oneofsArray = null, delete e.encode, delete e.decode, delete e.verify, e;\n          }\n          ((y.prototype = Object.create(E.prototype)).constructor = y).className = \"Type\", Object.defineProperties(y.prototype, {\n            fieldsById: {\n              get: function get() {\n                if (this._fieldsById) return this._fieldsById;\n                this._fieldsById = {};\n                for (var e = Object.keys(this.fields), t = 0; t < e.length; ++t) {\n                  var r = this.fields[e[t]],\n                    o = r.id;\n                  if (this._fieldsById[o]) throw Error(\"duplicate id \" + o + \" in \" + this);\n                  this._fieldsById[o] = r;\n                }\n                return this._fieldsById;\n              }\n            },\n            fieldsArray: {\n              get: function get() {\n                return this._fieldsArray || (this._fieldsArray = u.toArray(this.fields));\n              }\n            },\n            oneofsArray: {\n              get: function get() {\n                return this._oneofsArray || (this._oneofsArray = u.toArray(this.oneofs));\n              }\n            },\n            ctor: {\n              get: function get() {\n                return this._ctor || (this.ctor = y.generateConstructor(this));\n              },\n              set: function set(e) {\n                var t = e.prototype;\n                t instanceof i || ((e.prototype = new i()).constructor = e, u.merge(e.prototype, t)), e.$type = e.prototype.$type = this, u.merge(e, i, !0), u.merge(e.prototype, i, !0), this._ctor = e;\n                for (var r = 0; r < this.fieldsArray.length; ++r) {\n                  this._fieldsArray[r].resolve();\n                }\n                var o = {};\n                for (r = 0; r < this.oneofsArray.length; ++r) {\n                  var n = this._oneofsArray[r].resolve().name,\n                    a = function (e) {\n                      for (var t = {}, r = 0; r < e.length; ++r) {\n                        t[e[r]] = 0;\n                      }\n                      return {\n                        setter: function setter(r) {\n                          if (!(e.indexOf(r) < 0)) {\n                            t[r] = 1;\n                            for (var o = 0; o < e.length; ++o) {\n                              e[o] !== r && delete this[e[o]];\n                            }\n                          }\n                        },\n                        getter: function getter() {\n                          for (var e = Object.keys(this), r = e.length - 1; r > -1; --r) {\n                            if (1 === t[e[r]] && void 0 !== this[e[r]] && null !== this[e[r]]) return e[r];\n                          }\n                        }\n                      };\n                    }(this._oneofsArray[r].oneof);\n                  o[n] = {\n                    get: a.getter,\n                    set: a.setter\n                  };\n                }\n                r && Object.defineProperties(e.prototype, o);\n              }\n            }\n          }), y.generateConstructor = function (e) {\n            return function (t) {\n              for (var r, o = 0; o < e.fieldsArray.length; o++) {\n                (r = e._fieldsArray[o]).map ? this[r.name] = {} : r.repeated && (this[r.name] = []);\n              }\n              if (t) for (var n = Object.keys(t), i = 0; i < n.length; ++i) {\n                null != t[n[i]] && (this[n[i]] = t[n[i]]);\n              }\n            };\n          }, y.fromJSON = function (e, t) {\n            var r = new y(e, t.options);\n            r.extensions = t.extensions, r.reserved = t.reserved;\n            for (var i = Object.keys(t.fields), s = 0; s < i.length; ++s) {\n              r.add((void 0 !== t.fields[i[s]].keyType ? g.fromJSON : n.fromJSON)(i[s], t.fields[i[s]]));\n            }\n            if (t.oneofs) for (i = Object.keys(t.oneofs), s = 0; s < i.length; ++s) {\n              r.add(a.fromJSON(i[s], t.oneofs[i[s]]));\n            }\n            if (t.nested) for (i = Object.keys(t.nested), s = 0; s < i.length; ++s) {\n              var c = t.nested[i[s]];\n              r.add((void 0 !== c.id ? n.fromJSON : void 0 !== c.fields ? y.fromJSON : void 0 !== c.values ? o.fromJSON : void 0 !== c.methods ? h.fromJSON : E.fromJSON)(i[s], c));\n            }\n            return t.extensions && t.extensions.length && (r.extensions = t.extensions), t.reserved && t.reserved.length && (r.reserved = t.reserved), t.group && (r.group = !0), t.comment && (r.comment = t.comment), r;\n          }, y.prototype.toJSON = function (e) {\n            var t = E.prototype.toJSON.call(this, e),\n              r = !!e && Boolean(e.keepComments);\n            return {\n              options: t && t.options || void 0,\n              oneofs: E.arrayToJSON(this.oneofsArray, e),\n              fields: E.arrayToJSON(this.fieldsArray.filter(function (e) {\n                return !e.declaringField;\n              }), e) || {},\n              extensions: this.extensions && this.extensions.length ? this.extensions : void 0,\n              reserved: this.reserved && this.reserved.length ? this.reserved : void 0,\n              group: this.group || void 0,\n              nested: t && t.nested || void 0,\n              comment: r ? this.comment : void 0\n            };\n          }, y.prototype.resolveAll = function () {\n            for (var e = this.fieldsArray, t = 0; t < e.length;) {\n              e[t++].resolve();\n            }\n            var r = this.oneofsArray;\n            for (t = 0; t < r.length;) {\n              r[t++].resolve();\n            }\n            return E.prototype.resolveAll.call(this);\n          }, y.prototype.get = function (e) {\n            return this.fields[e] || this.oneofs && this.oneofs[e] || this.nested && this.nested[e] || null;\n          }, y.prototype.add = function (e) {\n            if (this.get(e.name)) throw Error(\"duplicate name '\" + e.name + \"' in \" + this);\n            if (e instanceof n && void 0 === e.extend) {\n              if (this._fieldsById && this._fieldsById[e.id]) throw Error(\"duplicate id \" + e.id + \" in \" + this);\n              if (this.isReservedId(e.id)) throw Error(\"id \" + e.id + \" is reserved in \" + this);\n              if (this.isReservedName(e.name)) throw Error(\"name '\" + e.name + \"' is reserved in \" + this);\n              return e.parent && e.parent.remove(e), this.fields[e.name] = e, e.message = this, e.onAdd(this), T(this);\n            }\n            return e instanceof a ? (this.oneofs || (this.oneofs = {}), this.oneofs[e.name] = e, e.onAdd(this), T(this)) : E.prototype.add.call(this, e);\n          }, y.prototype.remove = function (e) {\n            if (e instanceof n && void 0 === e.extend) {\n              if (!this.fields || this.fields[e.name] !== e) throw Error(e + \" is not a member of \" + this);\n              return delete this.fields[e.name], e.parent = null, e.onRemove(this), T(this);\n            }\n            if (e instanceof a) {\n              if (!this.oneofs || this.oneofs[e.name] !== e) throw Error(e + \" is not a member of \" + this);\n              return delete this.oneofs[e.name], e.parent = null, e.onRemove(this), T(this);\n            }\n            return E.prototype.remove.call(this, e);\n          }, y.prototype.isReservedId = function (e) {\n            return E.isReservedId(this.reserved, e);\n          }, y.prototype.isReservedName = function (e) {\n            return E.isReservedName(this.reserved, e);\n          }, y.prototype.create = function (e) {\n            return new this.ctor(e);\n          }, y.prototype.setup = function () {\n            for (var e = this.fullName, t = [], r = 0; r < this.fieldsArray.length; ++r) {\n              t.push(this._fieldsArray[r].resolve().resolvedType);\n            }\n            this.encode = p(this)({\n              Writer: s,\n              types: t,\n              util: u\n            }), this.decode = d(this)({\n              Reader: c,\n              types: t,\n              util: u\n            }), this.verify = l(this)({\n              types: t,\n              util: u\n            }), this.fromObject = m.fromObject(this)({\n              types: t,\n              util: u\n            }), this.toObject = m.toObject(this)({\n              types: t,\n              util: u\n            });\n            var o = f[e];\n            if (o) {\n              var n = Object.create(this);\n              n.fromObject = this.fromObject, this.fromObject = o.fromObject.bind(n), n.toObject = this.toObject, this.toObject = o.toObject.bind(n);\n            }\n            return this;\n          }, y.prototype.encode = function (e, t) {\n            return this.setup().encode(e, t);\n          }, y.prototype.encodeDelimited = function (e, t) {\n            return this.encode(e, t && t.len ? t.fork() : t).ldelim();\n          }, y.prototype.decode = function (e, t) {\n            return this.setup().decode(e, t);\n          }, y.prototype.decodeDelimited = function (e) {\n            return e instanceof c || (e = c.create(e)), this.decode(e, e.uint32());\n          }, y.prototype.verify = function (e) {\n            return this.setup().verify(e);\n          }, y.prototype.fromObject = function (e) {\n            return this.setup().fromObject(e);\n          }, y.prototype.toObject = function (e, t) {\n            return this.setup().toObject(e, t);\n          }, y.d = function (e) {\n            return function (t) {\n              u.decorateType(t, e);\n            };\n          }, y._configure = function () {\n            o = r(582), n = r(286), i = r(339), a = r(735), s = r(244), c = r(494), u = r(935), l = r(216), p = r(929), d = r(888), h = r(447), f = r(834), m = r(525), g = r(435);\n          };\n        },\n        696: function _(e, t, r) {\n          \"use strict\";\n\n          var o = e.exports,\n            n = r(935),\n            i = [\"double\", \"float\", \"int32\", \"uint32\", \"sint32\", \"fixed32\", \"sfixed32\", \"int64\", \"uint64\", \"sint64\", \"fixed64\", \"sfixed64\", \"bool\", \"string\", \"bytes\"];\n          function a(e, t) {\n            var r = 0,\n              o = {};\n            for (t |= 0; r < e.length;) {\n              o[i[r + t]] = e[r++];\n            }\n            return o;\n          }\n          o.basic = a([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2, 2]), o.defaults = a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !1, \"\", n.emptyArray, null]), o.long = a([0, 0, 0, 1, 1], 7), o.mapKey = a([0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2], 2), o.packed = a([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0]), o._configure = function () {\n            n = r(935);\n          };\n        },\n        498: function _(e) {\n          \"use strict\";\n\n          var t = e.exports;\n          t.length = function (e) {\n            for (var t = 0, r = 0, o = 0; o < e.length; ++o) {\n              (r = e.charCodeAt(o)) < 128 ? t += 1 : r < 2048 ? t += 2 : 55296 == (64512 & r) && 56320 == (64512 & e.charCodeAt(o + 1)) ? (++o, t += 4) : t += 3;\n            }\n            return t;\n          }, t.read = function (e, t, r) {\n            if (r - t < 1) return \"\";\n            for (var o, n = null, i = [], a = 0; t < r;) {\n              (o = e[t++]) < 128 ? i[a++] = o : o > 191 && o < 224 ? i[a++] = (31 & o) << 6 | 63 & e[t++] : o > 239 && o < 365 ? (o = ((7 & o) << 18 | (63 & e[t++]) << 12 | (63 & e[t++]) << 6 | 63 & e[t++]) - 65536, i[a++] = 55296 + (o >> 10), i[a++] = 56320 + (1023 & o)) : i[a++] = (15 & o) << 12 | (63 & e[t++]) << 6 | 63 & e[t++], a > 8191 && ((n || (n = [])).push(String.fromCharCode.apply(String, i)), a = 0);\n            }\n            return n ? (a && n.push(String.fromCharCode.apply(String, i.slice(0, a))), n.join(\"\")) : String.fromCharCode.apply(String, i.slice(0, a));\n          }, t.write = function (e, t, r) {\n            for (var o, n, i = r, a = 0; a < e.length; ++a) {\n              (o = e.charCodeAt(a)) < 128 ? t[r++] = o : o < 2048 ? (t[r++] = o >> 6 | 192, t[r++] = 63 & o | 128) : 55296 == (64512 & o) && 56320 == (64512 & (n = e.charCodeAt(a + 1))) ? (o = 65536 + ((1023 & o) << 10) + (1023 & n), ++a, t[r++] = o >> 18 | 240, t[r++] = o >> 12 & 63 | 128, t[r++] = o >> 6 & 63 | 128, t[r++] = 63 & o | 128) : (t[r++] = o >> 12 | 224, t[r++] = o >> 6 & 63 | 128, t[r++] = 63 & o | 128);\n            }\n            return r - i;\n          };\n        },\n        935: function _(e, t, r) {\n          var o = e.exports,\n            n = r(889);\n          o.LongBits = r(365), o.Long = r(939), o.pool = r(997), o.float = r(283), o.asPromise = r(728), o.EventEmitter = r(969), o.path = r(444), o.base64 = r(440), o.utf8 = r(498), o.compareFieldsById = function (e, t) {\n            return e.id - t.id;\n          }, o.toArray = function (e) {\n            if (e) {\n              for (var t = Object.keys(e), r = new Array(t.length), o = 0; o < t.length;) {\n                r[o] = e[t[o++]];\n              }\n              return r;\n            }\n            return [];\n          }, o.toObject = function (e) {\n            for (var t = {}, r = 0; r < e.length;) {\n              var o = e[r++],\n                n = e[r++];\n              void 0 !== n && (t[o] = n);\n            }\n            return t;\n          }, o.isString = function (e) {\n            return \"string\" == typeof e || e instanceof String;\n          }, o.isReserved = function (e) {\n            return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(e);\n          }, o.isObject = function (e) {\n            return e && \"object\" == _typeof(e);\n          }, o.Array = \"undefined\" != typeof Uint8Array ? Uint8Array : Array, o.oneOfGetter = function (e) {\n            for (var t = {}, r = 0; r < e.length; ++r) {\n              t[e[r]] = 1;\n            }\n            return function () {\n              for (var e = Object.keys(this), r = e.length - 1; r > -1; --r) {\n                if (1 === t[e[r]] && void 0 !== this[e[r]] && null !== this[e[r]]) return e[r];\n              }\n            };\n          }, o.oneOfSetter = function (e) {\n            return function (t) {\n              for (var r = 0; r < e.length; ++r) {\n                e[r] !== t && delete this[e[r]];\n              }\n            };\n          }, o.merge = function (e, t, r) {\n            for (var o = Object.keys(t), n = 0; n < o.length; ++n) {\n              void 0 !== e[o[n]] && r || (e[o[n]] = t[o[n]]);\n            }\n            return e;\n          }, o.decorateType = function (e, t) {\n            if (e.$type) return t && e.$type.name !== t && (o.decorateRoot.remove(e.$type), e.$type.name = t, o.decorateRoot.add(e.$type)), e.$type;\n            Type || (Type = r(192));\n            var n = new Type(t || e.name);\n            return o.decorateRoot.add(n), n.ctor = e, Object.defineProperty(e, \"$type\", {\n              value: n,\n              enumerable: !1\n            }), Object.defineProperty(e.prototype, \"$type\", {\n              value: n,\n              enumerable: !1\n            }), n;\n          }, o.emptyArray = Object.freeze ? Object.freeze([]) : [], o.emptyObject = Object.freeze ? Object.freeze({}) : {}, o.longToHash = function (e) {\n            return e ? o.LongBits.from(e).toHash() : o.LongBits.zeroHash;\n          }, o.copy = function (e) {\n            if (\"object\" != _typeof(e)) return e;\n            var t = {};\n            for (var r in e) {\n              t[r] = e[r];\n            }\n            return t;\n          }, o.deepCopy = function e(t) {\n            if (\"object\" != _typeof(t)) return t;\n            var r = {};\n            for (var o in t) {\n              r[o] = e(t[o]);\n            }\n            return r;\n          }, o.ProtocolError = function (e) {\n            function t(e, r) {\n              if (!(this instanceof t)) return new t(e, r);\n              Object.defineProperty(this, \"message\", {\n                get: function get() {\n                  return e;\n                }\n              }), Error.captureStackTrace ? Error.captureStackTrace(this, t) : Object.defineProperty(this, \"stack\", {\n                value: new Error().stack || \"\"\n              }), r && merge(this, r);\n            }\n            return (t.prototype = Object.create(Error.prototype)).constructor = t, Object.defineProperty(t.prototype, \"name\", {\n              get: function get() {\n                return e;\n              }\n            }), t.prototype.toString = function () {\n              return this.name + \": \" + this.message;\n            }, t;\n          }, o.toJSONOptions = {\n            longs: String,\n            enums: String,\n            bytes: String,\n            json: !0\n          }, o.Buffer = null, o.newBuffer = function (e) {\n            return \"number\" == typeof e ? new o.Array(e) : \"undefined\" == typeof Uint8Array ? e : new Uint8Array(e);\n          }, o.stringToBytes = function (e) {\n            var t,\n              r,\n              o = [];\n            t = e.length;\n            for (var n = 0; n < t; n++) {\n              (r = e.charCodeAt(n)) >= 65536 && r <= 1114111 ? (o.push(r >> 18 & 7 | 240), o.push(r >> 12 & 63 | 128), o.push(r >> 6 & 63 | 128), o.push(63 & r | 128)) : r >= 2048 && r <= 65535 ? (o.push(r >> 12 & 15 | 224), o.push(r >> 6 & 63 | 128), o.push(63 & r | 128)) : r >= 128 && r <= 2047 ? (o.push(r >> 6 & 31 | 192), o.push(63 & r | 128)) : o.push(255 & r);\n            }\n            return o;\n          }, o.byteToString = function (e) {\n            if (\"string\" == typeof e) return e;\n            for (var t = \"\", r = e, o = 0; o < r.length; o++) {\n              var n = r[o].toString(2),\n                i = n.match(/^1+?(?=0)/);\n              if (i && 8 == n.length) {\n                for (var a = i[0].length, s = r[o].toString(2).slice(7 - a), c = 1; c < a; c++) {\n                  s += r[c + o].toString(2).slice(2);\n                }\n                t += String.fromCharCode(parseInt(s, 2)), o += a - 1;\n              } else t += String.fromCharCode(r[o]);\n            }\n            return t;\n          }, o.isInteger = Number.isInteger || function (e) {\n            return \"number\" == typeof e && isFinite(e) && Math.floor(e) === e;\n          }, Object.defineProperty(o, \"decorateRoot\", {\n            get: function get() {\n              return n.decorated || (n.decorated = new (r(685))());\n            }\n          });\n        },\n        216: function _(e, t, r) {\n          var o, n;\n          function i(e, t) {\n            return e.name + \": \" + t + (e.repeated && \"array\" !== t ? \"[]\" : e.map && \"object\" !== t ? \"{k:\" + e.keyType + \"}\" : \"\") + \" expected\";\n          }\n          function a(e, t, r, a) {\n            var s = a.types;\n            if (e.resolvedType) {\n              if (e.resolvedType instanceof o) {\n                if (Object.keys(e.resolvedType.values).indexOf(r) < 0) return i(e, \"enum value\");\n              } else {\n                var c = s[t].verify(r);\n                if (c) return e.name + \".\" + c;\n              }\n            } else switch (e.type) {\n              case \"int32\":\n              case \"uint32\":\n              case \"sint32\":\n              case \"fixed32\":\n              case \"sfixed32\":\n                if (!n.isInteger(r)) return i(e, \"integer\");\n                break;\n              case \"int64\":\n              case \"uint64\":\n              case \"sint64\":\n              case \"fixed64\":\n              case \"sfixed64\":\n                if (!(n.isInteger(r) || r && n.isInteger(r.low) && n.isInteger(r.high))) return i(e, \"integer|Long\");\n                break;\n              case \"float\":\n              case \"double\":\n                if (\"number\" != typeof r) return i(e, \"number\");\n                break;\n              case \"bool\":\n                if (\"boolean\" != typeof r) return i(e, \"boolean\");\n                break;\n              case \"string\":\n                if (!n.isString(r)) return i(e, \"string\");\n                break;\n              case \"bytes\":\n                if (!(r && \"number\" == typeof r.length || n.isString(r))) return i(e, \"buffer\");\n            }\n          }\n          function s(e, t) {\n            switch (e.keyType) {\n              case \"int32\":\n              case \"uint32\":\n              case \"sint32\":\n              case \"fixed32\":\n              case \"sfixed32\":\n                if (!n.key32Re.test(t)) return i(e, \"integer key\");\n                break;\n              case \"int64\":\n              case \"uint64\":\n              case \"sint64\":\n              case \"fixed64\":\n              case \"sfixed64\":\n                if (!n.key64Re.test(t)) return i(e, \"integer|Long key\");\n                break;\n              case \"bool\":\n                if (!n.key2Re.test(t)) return i(e, \"boolean key\");\n            }\n          }\n          function c(e) {\n            return function (t) {\n              return function (r) {\n                var o;\n                if (\"object\" != _typeof(r) || null === r) return \"object expected\";\n                var c,\n                  u = {};\n                e.oneofsArray.length && (c = {});\n                for (var l = 0; l < e.fieldsArray.length; ++l) {\n                  var p,\n                    d = e._fieldsArray[l].resolve(),\n                    h = r[d.name];\n                  if (!d.optional || null != h && r.hasOwnProperty(d.name)) if (d.map) {\n                    if (!n.isObject(h)) return i(d, \"object\");\n                    var f = Object.keys(h);\n                    for (p = 0; p < f.length; ++p) {\n                      if (o = s(d, f[p])) return o;\n                      if (o = a(d, l, h[f[p]], t)) return o;\n                    }\n                  } else if (d.repeated) {\n                    if (!Array.isArray(h)) return i(d, \"array\");\n                    for (p = 0; p < h.length; ++p) {\n                      if (o = a(d, l, h[p], t)) return o;\n                    }\n                  } else {\n                    if (d.partOf) {\n                      var m = d.partOf.name;\n                      if (1 === u[d.partOf.name] && 1 === c[m]) return d.partOf.name + \": multiple values\";\n                      c[m] = 1;\n                    }\n                    if (o = a(d, l, h, t)) return o;\n                  }\n                }\n              };\n            };\n          }\n          e.exports = c, c._configure = function () {\n            o = r(582), n = r(935);\n          };\n        },\n        834: function _(e, t, r) {\n          var o,\n            n = t;\n          n[\".google.protobuf.Any\"] = {\n            fromObject: function fromObject(e) {\n              if (e && e[\"@type\"]) {\n                var t = this.lookup(e[\"@type\"]);\n                if (t) {\n                  var r = \".\" === e[\"@type\"].charAt(0) ? e[\"@type\"].substr(1) : e[\"@type\"];\n                  return this.create({\n                    type_url: \"/\" + r,\n                    value: t.encode(t.fromObject(e)).finish()\n                  });\n                }\n              }\n              return this.fromObject(e);\n            },\n            toObject: function toObject(e, t) {\n              if (t && t.json && e.type_url && e.value) {\n                var r = e.type_url.substring(e.type_url.lastIndexOf(\"/\") + 1),\n                  n = this.lookup(r);\n                n && (e = n.decode(e.value));\n              }\n              if (!(e instanceof this.ctor) && e instanceof o) {\n                var i = e.$type.toObject(e, t);\n                return i[\"@type\"] = e.$type.fullName, i;\n              }\n              return this.toObject(e, t);\n            }\n          }, n._configure = function () {\n            o = r(339);\n          };\n        },\n        244: function _(e, t, r) {\n          e.exports = u;\n          var o,\n            n = r(935),\n            i = r(498);\n          function a(e, t, r) {\n            this.fn = e, this.len = t, this.next = void 0, this.val = r;\n          }\n          function s() {}\n          function c(e) {\n            this.head = e.head, this.tail = e.tail, this.len = e.len, this.next = e.states;\n          }\n          function u() {\n            this.len = 0, this.head = new a(s, 0, 0), this.tail = this.head, this.states = null;\n          }\n          function l(e, t, r) {\n            t[r] = 255 & e;\n          }\n          function p(e, t) {\n            this.len = e, this.next = void 0, this.val = t;\n          }\n          function d(e, t, r) {\n            for (; e.hi;) {\n              t[r++] = 127 & e.lo | 128, e.lo = (e.lo >>> 7 | e.hi << 25) >>> 0, e.hi >>>= 7;\n            }\n            for (; e.lo > 127;) {\n              t[r++] = 127 & e.lo | 128, e.lo = e.lo >>> 7;\n            }\n            t[r++] = e.lo;\n          }\n          function h(e, t, r) {\n            t[r] = 255 & e, t[r + 1] = e >>> 8 & 255, t[r + 2] = e >>> 16 & 255, t[r + 3] = e >>> 24;\n          }\n          u.create = n.Buffer ? function () {\n            return (u.create = function () {\n              return new (void 0)();\n            })();\n          } : function () {\n            return new u();\n          }, u.alloc = function (e) {\n            return new n.Array(e);\n          }, n.Array !== Array && (u.alloc = n.pool(u.alloc, n.Array.prototype.subarray)), u.prototype._push = function (e, t, r) {\n            return this.tail = this.tail.next = new a(e, t, r), this.len += t, this;\n          }, p.prototype = Object.create(a.prototype), p.prototype.fn = function (e, t, r) {\n            for (; e > 127;) {\n              t[r++] = 127 & e | 128, e >>>= 7;\n            }\n            t[r] = e;\n          }, u.prototype.uint32 = function (e) {\n            return this.len += (this.tail = this.tail.next = new p((e >>>= 0) < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : 5, e)).len, this;\n          }, u.prototype.int32 = function (e) {\n            return e < 0 ? this._push(d, 10, o.fromNumber(e)) : this.uint32(e);\n          }, u.prototype.sint32 = function (e) {\n            return this.uint32((e << 1 ^ e >> 31) >>> 0);\n          }, u.prototype.uint64 = function (e) {\n            var t = o.from(e);\n            return this._push(d, t.length(), t);\n          }, u.prototype.int64 = u.prototype.uint64, u.prototype.sint64 = function (e) {\n            var t = o.from(e).zzEncode();\n            return this._push(d, t.length(), t);\n          }, u.prototype.bool = function (e) {\n            return this._push(l, 1, e ? 1 : 0);\n          }, u.prototype.fixed32 = function (e) {\n            return this._push(h, 4, e >>> 0);\n          }, u.prototype.sfixed32 = u.prototype.fixed32, u.prototype.fixed64 = function (e) {\n            var t = o.from(e);\n            return this._push(h, 4, t.lo)._push(h, 4, t.hi);\n          }, u.prototype.sfixed64 = u.prototype.fixed64, u.prototype.float = function (e) {\n            return this._push(n.float.writeFloatLE, 4, e);\n          }, u.prototype.double = function (e) {\n            return this._push(n.float.writeDoubleLE, 8, e);\n          };\n          var f = n.Array.prototype.set ? function (e, t, r) {\n            t.set(e, r);\n          } : function (e, t, r) {\n            for (var o = 0; o < e.length; ++o) {\n              t[r + o] = e[o];\n            }\n          };\n          u.prototype.bytes = function (e) {\n            var t = e.length >>> 0;\n            if (!t) return this._push(l, 1, 0);\n            if (n.isString(e)) {\n              var r = u.alloc(t = i.length(e));\n              i.write(e, r, 0), e = r;\n            }\n            return this.uint32(t)._push(f, t, e);\n          }, u.prototype.string = function (e) {\n            var t = i.length(e);\n            return t ? this.uint32(t)._push(i.write, t, e) : this._push(l, 1, 0);\n          }, u.prototype.fork = function () {\n            return this.states = new c(this), this.head = this.tail = new a(s, 0, 0), this.len = 0, this;\n          }, u.prototype.reset = function () {\n            return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new a(s, 0, 0), this.len = 0), this;\n          }, u.prototype.ldelim = function () {\n            var e = this.head,\n              t = this.tail,\n              r = this.len;\n            return this.reset().uint32(r), r && (this.tail.next = e.next, this.tail = t, this.len += r), this;\n          }, u.prototype.finish = function () {\n            for (var e = this.head.next, t = this.constructor.alloc(this.len), r = 0; e;) {\n              e.fn(e.val, t, r), r += e.len, e = e.next;\n            }\n            return t;\n          }, u._configure = function () {\n            o = r(365), r(440), i = r(498);\n          };\n        }\n      },\n      t = {};\n    function r(o) {\n      var n = t[o];\n      if (void 0 !== n) return n.exports;\n      var i = t[o] = {\n        exports: {}\n      };\n      return e[o](i, i.exports, r), i.exports;\n    }\n    r.amdO = {}, r.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return r.d(t, {\n        a: t\n      }), t;\n    }, r.d = function (e, t) {\n      for (var o in t) {\n        r.o(t, o) && !r.o(e, o) && Object.defineProperty(e, o, {\n          enumerable: !0,\n          get: t[o]\n        });\n      }\n    }, r.g = function () {\n      if (\"object\" == (typeof globalThis === \"undefined\" ? \"undefined\" : _typeof(globalThis))) return globalThis;\n      try {\n        return this || new Function(\"return this\")();\n      } catch (e) {\n        if (\"object\" == (typeof window === \"undefined\" ? \"undefined\" : _typeof(window))) return window;\n      }\n    }(), r.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, r.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    };\n    var o = {};\n    return function () {\n      \"use strict\";\n\n      r.r(o), r.d(o, {\n        default: function _default() {\n          return ga;\n        }\n      });\n      var e = {};\n      r.r(e), r.d(e, {\n        acceptContactInvite: function acceptContactInvite() {\n          return yr;\n        },\n        acceptInvitation: function acceptInvitation() {\n          return Er;\n        },\n        addContact: function addContact() {\n          return fr;\n        },\n        addReaction: function addReaction() {\n          return Ar;\n        },\n        addToBlackList: function addToBlackList() {\n          return _r;\n        },\n        addUsersToBlacklist: function addUsersToBlacklist() {\n          return Or;\n        },\n        addUsersToBlocklist: function addUsersToBlocklist() {\n          return Rr;\n        },\n        declineContactInvite: function declineContactInvite() {\n          return vr;\n        },\n        declineInvitation: function declineInvitation() {\n          return Tr;\n        },\n        deleteContact: function deleteContact() {\n          return gr;\n        },\n        deleteConversation: function deleteConversation() {\n          return ir;\n        },\n        deleteReaction: function deleteReaction() {\n          return Mr;\n        },\n        deleteSession: function deleteSession() {\n          return nr;\n        },\n        fetchHistoryMessages: function fetchHistoryMessages() {\n          return pr;\n        },\n        fetchUserInfoById: function fetchUserInfoById() {\n          return cr;\n        },\n        getBlacklist: function getBlacklist() {\n          return Yt;\n        },\n        getBlocklist: function getBlocklist() {\n          return Qt;\n        },\n        getChatToken: function getChatToken() {\n          return lr;\n        },\n        getContacts: function getContacts() {\n          return Zt;\n        },\n        getConversationlist: function getConversationlist() {\n          return or;\n        },\n        getHistoryMessages: function getHistoryMessages() {\n          return hr;\n        },\n        getReactionDetail: function getReactionDetail() {\n          return wr;\n        },\n        getReactionList: function getReactionList() {\n          return br;\n        },\n        getReactionlist: function getReactionlist() {\n          return Ur;\n        },\n        getRoster: function getRoster() {\n          return $t;\n        },\n        getServerConversations: function getServerConversations() {\n          return Lr;\n        },\n        getServerPinnedConversations: function getServerPinnedConversations() {\n          return Gr;\n        },\n        getSessionList: function getSessionList() {\n          return rr;\n        },\n        pinConversation: function pinConversation() {\n          return xr;\n        },\n        recallMessage: function recallMessage() {\n          return Nr;\n        },\n        removeFromBlackList: function removeFromBlackList() {\n          return Ir;\n        },\n        removeHistoryMessages: function removeHistoryMessages() {\n          return Pr;\n        },\n        removeRoster: function removeRoster() {\n          return mr;\n        },\n        removeUserFromBlackList: function removeUserFromBlackList() {\n          return Sr;\n        },\n        removeUserFromBlocklist: function removeUserFromBlocklist() {\n          return Cr;\n        },\n        reportMessage: function reportMessage() {\n          return kr;\n        },\n        updateCurrentUserNick: function updateCurrentUserNick() {\n          return ur;\n        },\n        updateOwnUserInfo: function updateOwnUserInfo() {\n          return ar;\n        },\n        updateUserInfo: function updateUserInfo() {\n          return sr;\n        },\n        uploadPushToken: function uploadPushToken() {\n          return tr;\n        },\n        uploadToken: function uploadToken() {\n          return er;\n        }\n      });\n      var t = {};\n      r.r(t), r.d(t, {\n        acceptGroupInvite: function acceptGroupInvite() {\n          return To;\n        },\n        acceptGroupJoinRequest: function acceptGroupJoinRequest() {\n          return mo;\n        },\n        addUsersToGroupAllowlist: function addUsersToGroupAllowlist() {\n          return Vo;\n        },\n        addUsersToGroupWhitelist: function addUsersToGroupWhitelist() {\n          return zo;\n        },\n        agreeInviteIntoGroup: function agreeInviteIntoGroup() {\n          return yo;\n        },\n        agreeJoinGroup: function agreeJoinGroup() {\n          return fo;\n        },\n        blockGroup: function blockGroup() {\n          return Wr;\n        },\n        blockGroupMember: function blockGroupMember() {\n          return Po;\n        },\n        blockGroupMembers: function blockGroupMembers() {\n          return Do;\n        },\n        blockGroupMessages: function blockGroupMessages() {\n          return qr;\n        },\n        changeGroupOwner: function changeGroupOwner() {\n          return Yr;\n        },\n        changeOwner: function changeOwner() {\n          return Xr;\n        },\n        createGroup: function createGroup() {\n          return Fr;\n        },\n        createGroupNew: function createGroupNew() {\n          return jr;\n        },\n        deleteGroupSharedFile: function deleteGroupSharedFile() {\n          return cn;\n        },\n        destroyGroup: function destroyGroup() {\n          return so;\n        },\n        disableSendGroupMsg: function disableSendGroupMsg() {\n          return qo;\n        },\n        dissolveGroup: function dissolveGroup() {\n          return ao;\n        },\n        downloadGroupSharedFile: function downloadGroupSharedFile() {\n          return pn;\n        },\n        enableSendGroupMsg: function enableSendGroupMsg() {\n          return Ko;\n        },\n        fetchGroupAnnouncement: function fetchGroupAnnouncement() {\n          return nn;\n        },\n        fetchGroupSharedFileList: function fetchGroupSharedFileList() {\n          return un;\n        },\n        getGroup: function getGroup() {\n          return Vr;\n        },\n        getGroupAdmin: function getGroupAdmin() {\n          return to;\n        },\n        getGroupAllowlist: function getGroupAllowlist() {\n          return $o;\n        },\n        getGroupBlacklist: function getGroupBlacklist() {\n          return Fo;\n        },\n        getGroupBlacklistNew: function getGroupBlacklistNew() {\n          return jo;\n        },\n        getGroupBlocklist: function getGroupBlocklist() {\n          return Wo;\n        },\n        getGroupInfo: function getGroupInfo() {\n          return Qr;\n        },\n        getGroupMemberAttributes: function getGroupMemberAttributes() {\n          return hn;\n        },\n        getGroupMembersAttributes: function getGroupMembersAttributes() {\n          return fn;\n        },\n        getGroupMsgReadUser: function getGroupMsgReadUser() {\n          return on;\n        },\n        getGroupMuteList: function getGroupMuteList() {\n          return Uo;\n        },\n        getGroupMutelist: function getGroupMutelist() {\n          return wo;\n        },\n        getGroupSharedFilelist: function getGroupSharedFilelist() {\n          return ln;\n        },\n        getGroupWhitelist: function getGroupWhitelist() {\n          return Qo;\n        },\n        getJoinedGroups: function getJoinedGroups() {\n          return Jr;\n        },\n        getMuted: function getMuted() {\n          return bo;\n        },\n        getPublicGroups: function getPublicGroups() {\n          return zr;\n        },\n        groupBlockMulti: function groupBlockMulti() {\n          return Lo;\n        },\n        groupBlockSingle: function groupBlockSingle() {\n          return ko;\n        },\n        inviteToGroup: function inviteToGroup() {\n          return lo;\n        },\n        inviteUsersToGroup: function inviteUsersToGroup() {\n          return po;\n        },\n        isGroupWhiteUser: function isGroupWhiteUser() {\n          return Zo;\n        },\n        isInGroupAllowlist: function isInGroupAllowlist() {\n          return tn;\n        },\n        isInGroupMutelist: function isInGroupMutelist() {\n          return rn;\n        },\n        isInGroupWhiteList: function isInGroupWhiteList() {\n          return en;\n        },\n        joinGroup: function joinGroup() {\n          return ho;\n        },\n        leaveGroup: function leaveGroup() {\n          return uo;\n        },\n        listGroupMember: function listGroupMember() {\n          return Zr;\n        },\n        listGroupMembers: function listGroupMembers() {\n          return eo;\n        },\n        listGroups: function listGroups() {\n          return Kr;\n        },\n        modifyGroup: function modifyGroup() {\n          return $r;\n        },\n        mute: function mute() {\n          return Co;\n        },\n        muteGroupMember: function muteGroupMember() {\n          return No;\n        },\n        quitGroup: function quitGroup() {\n          return co;\n        },\n        rejectGroupInvite: function rejectGroupInvite() {\n          return _o;\n        },\n        rejectGroupJoinRequest: function rejectGroupJoinRequest() {\n          return Eo;\n        },\n        rejectInviteIntoGroup: function rejectInviteIntoGroup() {\n          return vo;\n        },\n        rejectJoinGroup: function rejectJoinGroup() {\n          return go;\n        },\n        removeAdmin: function removeAdmin() {\n          return no;\n        },\n        removeGroupAdmin: function removeGroupAdmin() {\n          return io;\n        },\n        removeGroupAllowlistMember: function removeGroupAllowlistMember() {\n          return Yo;\n        },\n        removeGroupBlockMulti: function removeGroupBlockMulti() {\n          return Bo;\n        },\n        removeGroupBlockSingle: function removeGroupBlockSingle() {\n          return Go;\n        },\n        removeGroupMember: function removeGroupMember() {\n          return Ro;\n        },\n        removeGroupMembers: function removeGroupMembers() {\n          return So;\n        },\n        removeGroupWhitelistMember: function removeGroupWhitelistMember() {\n          return Xo;\n        },\n        removeMultiGroupMember: function removeMultiGroupMember() {\n          return Io;\n        },\n        removeMute: function removeMute() {\n          return Ao;\n        },\n        removeSingleGroupMember: function removeSingleGroupMember() {\n          return Oo;\n        },\n        rmUsersFromGroupWhitelist: function rmUsersFromGroupWhitelist() {\n          return Jo;\n        },\n        setAdmin: function setAdmin() {\n          return ro;\n        },\n        setGroupAdmin: function setGroupAdmin() {\n          return oo;\n        },\n        setGroupMemberAttributes: function setGroupMemberAttributes() {\n          return dn;\n        },\n        unblockGroupMember: function unblockGroupMember() {\n          return xo;\n        },\n        unblockGroupMembers: function unblockGroupMembers() {\n          return Ho;\n        },\n        unmuteGroupMember: function unmuteGroupMember() {\n          return Mo;\n        },\n        updateGroupAnnouncement: function updateGroupAnnouncement() {\n          return an;\n        },\n        uploadGroupSharedFile: function uploadGroupSharedFile() {\n          return sn;\n        }\n      });\n      var n = {};\n      r.r(n), r.d(n, {\n        addUsersToChatRoom: function addUsersToChatRoom() {\n          return In;\n        },\n        addUsersToChatRoomAllowlist: function addUsersToChatRoomAllowlist() {\n          return Zn;\n        },\n        addUsersToChatRoomWhitelist: function addUsersToChatRoomWhitelist() {\n          return $n;\n        },\n        blockChatRoomMember: function blockChatRoomMember() {\n          return Hn;\n        },\n        blockChatRoomMembers: function blockChatRoomMembers() {\n          return Fn;\n        },\n        chatRoomBlockMulti: function chatRoomBlockMulti() {\n          return jn;\n        },\n        chatRoomBlockSingle: function chatRoomBlockSingle() {\n          return Bn;\n        },\n        createChatRoom: function createChatRoom() {\n          return gn;\n        },\n        deleteChatRoomSharedFile: function deleteChatRoomSharedFile() {\n          return pi;\n        },\n        destroyChatRoom: function destroyChatRoom() {\n          return En;\n        },\n        disableSendChatRoomMsg: function disableSendChatRoomMsg() {\n          return Yn;\n        },\n        enableSendChatRoomMsg: function enableSendChatRoomMsg() {\n          return Qn;\n        },\n        fetchChatRoomAnnouncement: function fetchChatRoomAnnouncement() {\n          return ci;\n        },\n        fetchChatRoomSharedFileList: function fetchChatRoomSharedFileList() {\n          return di;\n        },\n        getChatRoomAdmin: function getChatRoomAdmin() {\n          return bn;\n        },\n        getChatRoomAllowlist: function getChatRoomAllowlist() {\n          return ni;\n        },\n        getChatRoomAttributes: function getChatRoomAttributes() {\n          return fi;\n        },\n        getChatRoomBlacklist: function getChatRoomBlacklist() {\n          return Jn;\n        },\n        getChatRoomBlacklistNew: function getChatRoomBlacklistNew() {\n          return Vn;\n        },\n        getChatRoomBlocklist: function getChatRoomBlocklist() {\n          return Xn;\n        },\n        getChatRoomDetails: function getChatRoomDetails() {\n          return yn;\n        },\n        getChatRoomMuteList: function getChatRoomMuteList() {\n          return Gn;\n        },\n        getChatRoomMuted: function getChatRoomMuted() {\n          return Dn;\n        },\n        getChatRoomMutelist: function getChatRoomMutelist() {\n          return xn;\n        },\n        getChatRoomSharedFilelist: function getChatRoomSharedFilelist() {\n          return hi;\n        },\n        getChatRoomWhitelist: function getChatRoomWhitelist() {\n          return oi;\n        },\n        getChatRooms: function getChatRooms() {\n          return mn;\n        },\n        isChatRoomWhiteUser: function isChatRoomWhiteUser() {\n          return ii;\n        },\n        isInChatRoomAllowlist: function isInChatRoomAllowlist() {\n          return ai;\n        },\n        isInChatRoomMutelist: function isInChatRoomMutelist() {\n          return si;\n        },\n        joinChatRoom: function joinChatRoom() {\n          return Sn;\n        },\n        leaveChatRoom: function leaveChatRoom() {\n          return Nn;\n        },\n        listChatRoomMember: function listChatRoomMember() {\n          return An;\n        },\n        listChatRoomMembers: function listChatRoomMembers() {\n          return Mn;\n        },\n        modifyChatRoom: function modifyChatRoom() {\n          return Tn;\n        },\n        muteChatRoomMember: function muteChatRoomMember() {\n          return kn;\n        },\n        quitChatRoom: function quitChatRoom() {\n          return Cn;\n        },\n        removeChatRoomAdmin: function removeChatRoomAdmin() {\n          return wn;\n        },\n        removeChatRoomAllowlistMember: function removeChatRoomAllowlistMember() {\n          return ri;\n        },\n        removeChatRoomAttribute: function removeChatRoomAttribute() {\n          return yi;\n        },\n        removeChatRoomAttributes: function removeChatRoomAttributes() {\n          return Ei;\n        },\n        removeChatRoomBlockMulti: function removeChatRoomBlockMulti() {\n          return Kn;\n        },\n        removeChatRoomBlockSingle: function removeChatRoomBlockSingle() {\n          return Wn;\n        },\n        removeChatRoomMember: function removeChatRoomMember() {\n          return _n;\n        },\n        removeChatRoomMembers: function removeChatRoomMembers() {\n          return Rn;\n        },\n        removeChatRoomWhitelistMember: function removeChatRoomWhitelistMember() {\n          return ti;\n        },\n        removeMultiChatRoomMember: function removeMultiChatRoomMember() {\n          return On;\n        },\n        removeMuteChatRoomMember: function removeMuteChatRoomMember() {\n          return Pn;\n        },\n        removeSingleChatRoomMember: function removeSingleChatRoomMember() {\n          return vn;\n        },\n        rmUsersFromChatRoomWhitelist: function rmUsersFromChatRoomWhitelist() {\n          return ei;\n        },\n        setChatRoomAdmin: function setChatRoomAdmin() {\n          return Un;\n        },\n        setChatRoomAttribute: function setChatRoomAttribute() {\n          return gi;\n        },\n        setChatRoomAttributes: function setChatRoomAttributes() {\n          return mi;\n        },\n        unblockChatRoomMember: function unblockChatRoomMember() {\n          return qn;\n        },\n        unblockChatRoomMembers: function unblockChatRoomMembers() {\n          return zn;\n        },\n        unmuteChatRoomMember: function unmuteChatRoomMember() {\n          return Ln;\n        },\n        updateChatRoomAnnouncement: function updateChatRoomAnnouncement() {\n          return ui;\n        },\n        uploadChatRoomSharedFile: function uploadChatRoomSharedFile() {\n          return li;\n        }\n      });\n      var i = {};\n      r.r(i), r.d(i, {\n        getPresenceStatus: function getPresenceStatus() {\n          return Ci;\n        },\n        getSubscribedPresenceList: function getSubscribedPresenceList() {\n          return Ii;\n        },\n        getSubscribedPresencelist: function getSubscribedPresencelist() {\n          return Si;\n        },\n        publishPresence: function publishPresence() {\n          return _i;\n        },\n        subscribePresence: function subscribePresence() {\n          return Oi;\n        },\n        unsubscribePresence: function unsubscribePresence() {\n          return Ri;\n        }\n      });\n      var a = {};\n      r.r(a), r.d(a, {\n        clearRemindTypeForConversation: function clearRemindTypeForConversation() {\n          return bi;\n        },\n        getPushPerformLanguage: function getPushPerformLanguage() {\n          return Pi;\n        },\n        getSilentModeForAll: function getSilentModeForAll() {\n          return Ai;\n        },\n        getSilentModeForConversation: function getSilentModeForConversation() {\n          return Ui;\n        },\n        getSilentModeForConversations: function getSilentModeForConversations() {\n          return wi;\n        },\n        setPushPerformLanguage: function setPushPerformLanguage() {\n          return ki;\n        },\n        setSilentModeForAll: function setSilentModeForAll() {\n          return Ni;\n        },\n        setSilentModeForConversation: function setSilentModeForConversation() {\n          return Mi;\n        }\n      });\n      var s = {};\n      r.r(s), r.d(s, {\n        changeChatThreadName: function changeChatThreadName() {\n          return ji;\n        },\n        createChatThread: function createChatThread() {\n          return Gi;\n        },\n        destroyChatThread: function destroyChatThread() {\n          return Hi;\n        },\n        getChatThreadDetail: function getChatThreadDetail() {\n          return Vi;\n        },\n        getChatThreadLastMessage: function getChatThreadLastMessage() {\n          return zi;\n        },\n        getChatThreadMembers: function getChatThreadMembers() {\n          return Fi;\n        },\n        getChatThreads: function getChatThreads() {\n          return Ki;\n        },\n        getJoinedChatThreads: function getJoinedChatThreads() {\n          return qi;\n        },\n        joinChatThread: function joinChatThread() {\n          return xi;\n        },\n        leaveChatThread: function leaveChatThread() {\n          return Bi;\n        },\n        removeChatThreadMember: function removeChatThreadMember() {\n          return Wi;\n        }\n      });\n      var c = {};\n      r.r(c), r.d(c, {\n        getSupportedLanguages: function getSupportedLanguages() {\n          return Ji;\n        },\n        translateMessage: function translateMessage() {\n          return Xi;\n        }\n      });\n      var u = {};\n      function l() {\n        u.converter._configure(), u.decoder._configure(), u.encoder._configure(), u.Field._configure(), u.MapField._configure(), u.Message._configure(), u.Namespace._configure(), u.Method._configure(), u.ReflectionObject._configure(), u.OneOf._configure(), u.parse._configure(), u.Reader._configure(), u.Root._configure(), u.Service._configure(), u.verifier._configure(), u.Type._configure(), u.types._configure(), u.wrappers._configure(), u.Writer._configure();\n      }\n      u.build = \"minimal\", u.Writer = r(244), u.encoder = r(929), u.Reader = r(494), u.util = r(935), u.rpc = r(325), u.roots = r(889), u.verifier = r(216), u.tokenize = r(869), u.parse = r(845), u.common = r(72), u.ReflectionObject = r(998), u.Namespace = r(476), u.Root = r(685), u.Enum = r(582), u.Type = r(192), u.Field = r(286), u.OneOf = r(735), u.MapField = r(435), u.Service = r(447), u.Method = r(484), u.converter = r(525), u.decoder = r(888), u.Message = r(339), u.wrappers = r(834), u.types = r(696), u.util = r(935), u.configure = l, u.load = function (e, t, r) {\n        return \"function\" == typeof t ? (r = t, t = new u.Root()) : t || (t = new u.Root()), t.load(e, r);\n      }, u.loadSync = function (e, t) {\n        return t || (t = new u.Root()), t.loadSync(e);\n      }, u.parseFromPbString = function (e, t, r) {\n        return \"function\" == typeof t ? (r = t, t = new u.Root()) : t || (t = new u.Root()), t.parseFromPbString(e, r);\n      }, l();\n      var p,\n        d = u,\n        h = r(720),\n        f = r.n(h),\n        m = function () {\n          function e(e) {\n            this.type = e.type, this.message = e.message, this.data = e.data;\n          }\n          return e.create = function (t) {\n            return new e(t);\n          }, e;\n        }();\n      !function (e) {\n        e[e.REQUEST_SUCCESS = 0] = \"REQUEST_SUCCESS\", e[e.REQUEST_TIMEOUT = -1] = \"REQUEST_TIMEOUT\", e[e.REQUEST_UNKNOWN = -2] = \"REQUEST_UNKNOWN\", e[e.REQUEST_PARAMETER_ERROR = -3] = \"REQUEST_PARAMETER_ERROR\", e[e.REQUEST_ABORT = -4] = \"REQUEST_ABORT\", e[e.WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR = 0] = \"WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_OPEN_ERROR = 1] = \"WEBIM_CONNCTION_OPEN_ERROR\", e[e.WEBIM_CONNCTION_AUTH_ERROR = 2] = \"WEBIM_CONNCTION_AUTH_ERROR\", e[e.WEBIM_CONNCTION_OPEN_USERGRID_ERROR = 3] = \"WEBIM_CONNCTION_OPEN_USERGRID_ERROR\", e[e.WEBIM_CONNCTION_ATTACH_ERROR = 4] = \"WEBIM_CONNCTION_ATTACH_ERROR\", e[e.WEBIM_CONNCTION_ATTACH_USERGRID_ERROR = 5] = \"WEBIM_CONNCTION_ATTACH_USERGRID_ERROR\", e[e.WEBIM_CONNCTION_REOPEN_ERROR = 6] = \"WEBIM_CONNCTION_REOPEN_ERROR\", e[e.WEBIM_CONNCTION_SERVER_CLOSE_ERROR = 7] = \"WEBIM_CONNCTION_SERVER_CLOSE_ERROR\", e[e.WEBIM_CONNCTION_SERVER_ERROR = 8] = \"WEBIM_CONNCTION_SERVER_ERROR\", e[e.WEBIM_CONNCTION_IQ_ERROR = 9] = \"WEBIM_CONNCTION_IQ_ERROR\", e[e.WEBIM_CONNCTION_PING_ERROR = 10] = \"WEBIM_CONNCTION_PING_ERROR\", e[e.WEBIM_CONNCTION_NOTIFYVERSION_ERROR = 11] = \"WEBIM_CONNCTION_NOTIFYVERSION_ERROR\", e[e.WEBIM_CONNCTION_GETROSTER_ERROR = 12] = \"WEBIM_CONNCTION_GETROSTER_ERROR\", e[e.WEBIM_CONNCTION_CROSSDOMAIN_ERROR = 13] = \"WEBIM_CONNCTION_CROSSDOMAIN_ERROR\", e[e.WEBIM_CONNCTION_LISTENING_OUTOF_MAXRETRIES = 14] = \"WEBIM_CONNCTION_LISTENING_OUTOF_MAXRETRIES\", e[e.WEBIM_CONNCTION_RECEIVEMSG_CONTENTERROR = 15] = \"WEBIM_CONNCTION_RECEIVEMSG_CONTENTERROR\", e[e.WEBIM_CONNCTION_DISCONNECTED = 16] = \"WEBIM_CONNCTION_DISCONNECTED\", e[e.WEBIM_CONNCTION_AJAX_ERROR = 17] = \"WEBIM_CONNCTION_AJAX_ERROR\", e[e.WEBIM_CONNCTION_JOINROOM_ERROR = 18] = \"WEBIM_CONNCTION_JOINROOM_ERROR\", e[e.WEBIM_CONNCTION_GETROOM_ERROR = 19] = \"WEBIM_CONNCTION_GETROOM_ERROR\", e[e.WEBIM_CONNCTION_GETROOMINFO_ERROR = 20] = \"WEBIM_CONNCTION_GETROOMINFO_ERROR\", e[e.WEBIM_CONNCTION_GETROOMMEMBER_ERROR = 21] = \"WEBIM_CONNCTION_GETROOMMEMBER_ERROR\", e[e.WEBIM_CONNCTION_GETROOMOCCUPANTS_ERROR = 22] = \"WEBIM_CONNCTION_GETROOMOCCUPANTS_ERROR\", e[e.WEBIM_CONNCTION_LOAD_CHATROOM_ERROR = 23] = \"WEBIM_CONNCTION_LOAD_CHATROOM_ERROR\", e[e.WEBIM_CONNCTION_NOT_SUPPORT_CHATROOM_ERROR = 24] = \"WEBIM_CONNCTION_NOT_SUPPORT_CHATROOM_ERROR\", e[e.WEBIM_CONNCTION_JOINCHATROOM_ERROR = 25] = \"WEBIM_CONNCTION_JOINCHATROOM_ERROR\", e[e.WEBIM_CONNCTION_QUITCHATROOM_ERROR = 26] = \"WEBIM_CONNCTION_QUITCHATROOM_ERROR\", e[e.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR = 27] = \"WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR = 28] = \"WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_SESSIONID_NOT_ASSIGN_ERROR = 29] = \"WEBIM_CONNCTION_SESSIONID_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_RID_NOT_ASSIGN_ERROR = 30] = \"WEBIM_CONNCTION_RID_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_CALLBACK_INNER_ERROR = 31] = \"WEBIM_CONNCTION_CALLBACK_INNER_ERROR\", e[e.WEBIM_CONNCTION_CLIENT_OFFLINE = 32] = \"WEBIM_CONNCTION_CLIENT_OFFLINE\", e[e.WEBIM_CONNCTION_CLIENT_LOGOUT = 33] = \"WEBIM_CONNCTION_CLIENT_LOGOUT\", e[e.WEBIM_CONNCTION_CLIENT_TOO_MUCH_ERROR = 34] = \"WEBIM_CONNCTION_CLIENT_TOO_MUCH_ERROR\", e[e.WEBIM_CONNECTION_ACCEPT_INVITATION_FROM_GROUP = 35] = \"WEBIM_CONNECTION_ACCEPT_INVITATION_FROM_GROUP\", e[e.WEBIM_CONNECTION_DECLINE_INVITATION_FROM_GROUP = 36] = \"WEBIM_CONNECTION_DECLINE_INVITATION_FROM_GROUP\", e[e.WEBIM_CONNECTION_ACCEPT_JOIN_GROUP = 37] = \"WEBIM_CONNECTION_ACCEPT_JOIN_GROUP\", e[e.WEBIM_CONNECTION_DECLINE_JOIN_GROUP = 38] = \"WEBIM_CONNECTION_DECLINE_JOIN_GROUP\", e[e.WEBIM_CONNECTION_CLOSED = 39] = \"WEBIM_CONNECTION_CLOSED\", e[e.WEBIM_CONNECTION_ERROR = 40] = \"WEBIM_CONNECTION_ERROR\", e[e.MAX_LIMIT = 50] = \"MAX_LIMIT\", e[e.MESSAGE_NOT_FOUND = 51] = \"MESSAGE_NOT_FOUND\", e[e.NO_PERMISSION = 52] = \"NO_PERMISSION\", e[e.OPERATION_UNSUPPORTED = 53] = \"OPERATION_UNSUPPORTED\", e[e.OPERATION_NOT_ALLOWED = 54] = \"OPERATION_NOT_ALLOWED\", e[e.WEBIM_UPLOADFILE_BROWSER_ERROR = 100] = \"WEBIM_UPLOADFILE_BROWSER_ERROR\", e[e.WEBIM_UPLOADFILE_ERROR = 101] = \"WEBIM_UPLOADFILE_ERROR\", e[e.WEBIM_UPLOADFILE_NO_LOGIN = 102] = \"WEBIM_UPLOADFILE_NO_LOGIN\", e[e.WEBIM_UPLOADFILE_NO_FILE = 103] = \"WEBIM_UPLOADFILE_NO_FILE\", e[e.WEBIM_DOWNLOADFILE_ERROR = 200] = \"WEBIM_DOWNLOADFILE_ERROR\", e[e.WEBIM_DOWNLOADFILE_NO_LOGIN = 201] = \"WEBIM_DOWNLOADFILE_NO_LOGIN\", e[e.WEBIM_DOWNLOADFILE_BROWSER_ERROR = 202] = \"WEBIM_DOWNLOADFILE_BROWSER_ERROR\", e[e.USER_NOT_FOUND = 204] = \"USER_NOT_FOUND\", e[e.MESSAGE_PARAMETER_ERROR = 205] = \"MESSAGE_PARAMETER_ERROR\", e[e.WEBIM_CONNCTION_USER_LOGIN_ANOTHER_DEVICE = 206] = \"WEBIM_CONNCTION_USER_LOGIN_ANOTHER_DEVICE\", e[e.WEBIM_CONNCTION_USER_REMOVED = 207] = \"WEBIM_CONNCTION_USER_REMOVED\", e[e.WEBIM_CONNCTION_USER_KICKED_BY_CHANGE_PASSWORD = 216] = \"WEBIM_CONNCTION_USER_KICKED_BY_CHANGE_PASSWORD\", e[e.WEBIM_CONNCTION_USER_KICKED_BY_OTHER_DEVICE = 217] = \"WEBIM_CONNCTION_USER_KICKED_BY_OTHER_DEVICE\", e[e.USER_MUTED_BY_ADMIN = 219] = \"USER_MUTED_BY_ADMIN\", e[e.USER_NOT_FRIEND = 221] = \"USER_NOT_FRIEND\", e[e.WEBIM_MESSAGE_REC_TEXT = 300] = \"WEBIM_MESSAGE_REC_TEXT\", e[e.WEBIM_MESSAGE_REC_TEXT_ERROR = 301] = \"WEBIM_MESSAGE_REC_TEXT_ERROR\", e[e.WEBIM_MESSAGE_REC_EMOTION = 302] = \"WEBIM_MESSAGE_REC_EMOTION\", e[e.WEBIM_MESSAGE_REC_PHOTO = 303] = \"WEBIM_MESSAGE_REC_PHOTO\", e[e.WEBIM_MESSAGE_REC_AUDIO = 304] = \"WEBIM_MESSAGE_REC_AUDIO\", e[e.WEBIM_MESSAGE_REC_AUDIO_FILE = 305] = \"WEBIM_MESSAGE_REC_AUDIO_FILE\", e[e.WEBIM_MESSAGE_REC_VEDIO = 306] = \"WEBIM_MESSAGE_REC_VEDIO\", e[e.WEBIM_MESSAGE_REC_VEDIO_FILE = 307] = \"WEBIM_MESSAGE_REC_VEDIO_FILE\", e[e.WEBIM_MESSAGE_REC_FILE = 308] = \"WEBIM_MESSAGE_REC_FILE\", e[e.WEBIM_MESSAGE_SED_TEXT = 309] = \"WEBIM_MESSAGE_SED_TEXT\", e[e.WEBIM_MESSAGE_SED_EMOTION = 310] = \"WEBIM_MESSAGE_SED_EMOTION\", e[e.WEBIM_MESSAGE_SED_PHOTO = 311] = \"WEBIM_MESSAGE_SED_PHOTO\", e[e.WEBIM_MESSAGE_SED_AUDIO = 312] = \"WEBIM_MESSAGE_SED_AUDIO\", e[e.WEBIM_MESSAGE_SED_AUDIO_FILE = 313] = \"WEBIM_MESSAGE_SED_AUDIO_FILE\", e[e.WEBIM_MESSAGE_SED_VEDIO = 314] = \"WEBIM_MESSAGE_SED_VEDIO\", e[e.WEBIM_MESSAGE_SED_VEDIO_FILE = 315] = \"WEBIM_MESSAGE_SED_VEDIO_FILE\", e[e.WEBIM_MESSAGE_SED_FILE = 316] = \"WEBIM_MESSAGE_SED_FILE\", e[e.WEBIM_MESSAGE_SED_ERROR = 317] = \"WEBIM_MESSAGE_SED_ERROR\", e[e.STATUS_INIT = 400] = \"STATUS_INIT\", e[e.STATUS_DOLOGIN_USERGRID = 401] = \"STATUS_DOLOGIN_USERGRID\", e[e.STATUS_DOLOGIN_IM = 402] = \"STATUS_DOLOGIN_IM\", e[e.STATUS_OPENED = 403] = \"STATUS_OPENED\", e[e.STATUS_CLOSING = 404] = \"STATUS_CLOSING\", e[e.STATUS_CLOSED = 405] = \"STATUS_CLOSED\", e[e.STATUS_ERROR = 406] = \"STATUS_ERROR\", e[e.SERVER_BUSY = 500] = \"SERVER_BUSY\", e[e.MESSAGE_INCLUDE_ILLEGAL_CONTENT = 501] = \"MESSAGE_INCLUDE_ILLEGAL_CONTENT\", e[e.MESSAGE_EXTERNAL_LOGIC_BLOCKED = 502] = \"MESSAGE_EXTERNAL_LOGIC_BLOCKED\", e[e.SERVER_UNKNOWN_ERROR = 503] = \"SERVER_UNKNOWN_ERROR\", e[e.MESSAGE_RECALL_TIME_LIMIT = 504] = \"MESSAGE_RECALL_TIME_LIMIT\", e[e.SERVICE_NOT_ENABLED = 505] = \"SERVICE_NOT_ENABLED\", e[e.SERVICE_NOT_ALLOW_MESSAGING = 506] = \"SERVICE_NOT_ALLOW_MESSAGING\", e[e.SERVICE_NOT_ALLOW_MESSAGING_MUTE = 507] = \"SERVICE_NOT_ALLOW_MESSAGING_MUTE\", e[e.MESSAGE_MODERATION_BLOCKED = 508] = \"MESSAGE_MODERATION_BLOCKED\", e[e.MESSAGE_CURRENT_LIMITING = 509] = \"MESSAGE_CURRENT_LIMITING\", e[e.MESSAGE_WEBSOCKET_DISCONNECTED = 510] = \"MESSAGE_WEBSOCKET_DISCONNECTED\", e[e.MESSAGE_SIZE_LIMIT = 511] = \"MESSAGE_SIZE_LIMIT\", e[e.GROUP_NOT_EXIST = 605] = \"GROUP_NOT_EXIST\", e[e.GROUP_NOT_JOINED = 602] = \"GROUP_NOT_JOINED\", e[e.GROUP_MEMBERS_FULL = 606] = \"GROUP_MEMBERS_FULL\", e[e.PERMISSION_DENIED = 603] = \"PERMISSION_DENIED\", e[e.WEBIM_LOAD_MSG_ERROR = 604] = \"WEBIM_LOAD_MSG_ERROR\", e[e.GROUP_ALREADY_JOINED = 601] = \"GROUP_ALREADY_JOINED\", e[e.GROUP_MEMBERS_LIMIT = 607] = \"GROUP_MEMBERS_LIMIT\", e[e.GROUP_IS_DISABLED = 608] = \"GROUP_IS_DISABLED\", e[e.GROUP_MEMBER_ATTRIBUTES_SET_FAILED = 609] = \"GROUP_MEMBER_ATTRIBUTES_SET_FAILED\", e[e.REST_PARAMS_STATUS = 700] = \"REST_PARAMS_STATUS\", e[e.CHATROOM_NOT_JOINED = 702] = \"CHATROOM_NOT_JOINED\", e[e.CHATROOM_MEMBERS_FULL = 704] = \"CHATROOM_MEMBERS_FULL\", e[e.CHATROOM_NOT_EXIST = 705] = \"CHATROOM_NOT_EXIST\", e[e.SDK_RUNTIME_ERROR = 999] = \"SDK_RUNTIME_ERROR\", e[e.PRESENCE_PARAM_EXCEED = 1100] = \"PRESENCE_PARAM_EXCEED\", e[e.REACTION_ALREADY_ADDED = 1101] = \"REACTION_ALREADY_ADDED\", e[e.REACTION_CREATING = 1102] = \"REACTION_CREATING\", e[e.REACTION_OPERATION_IS_ILLEGAL = 1103] = \"REACTION_OPERATION_IS_ILLEGAL\", e[e.TRANSLATION_NOT_VALID = 1200] = \"TRANSLATION_NOT_VALID\", e[e.TRANSLATION_TEXT_TOO_LONG = 1201] = \"TRANSLATION_TEXT_TOO_LONG\", e[e.TRANSLATION_FAILED = 1204] = \"TRANSLATION_FAILED\", e[e.THREAD_NOT_EXIST = 1300] = \"THREAD_NOT_EXIST\", e[e.THREAD_ALREADY_EXIST = 1301] = \"THREAD_ALREADY_EXIST\", e[e.CONVERSATION_NOT_EXIST = 1400] = \"CONVERSATION_NOT_EXIST\";\n      }(p || (p = {}));\n      var g,\n        E,\n        y,\n        T,\n        v,\n        _,\n        _O = function O() {\n          return _O = Object.assign || function (e) {\n            for (var t, r = 1, o = arguments.length; r < o; r++) {\n              for (var n in t = arguments[r]) {\n                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n              }\n            }\n            return e;\n          }, _O.apply(this, arguments);\n        },\n        R = function R(e, t, r, o) {\n          var n,\n            i,\n            a,\n            s,\n            c,\n            u,\n            l,\n            d,\n            h,\n            f,\n            m,\n            g,\n            E,\n            y,\n            T,\n            v,\n            _,\n            R,\n            I,\n            S,\n            C = e.response;\n          C && \"string\" == typeof C && (C = JSON.parse(C));\n          var N = e.status,\n            A = {\n              elapse: o,\n              httpCode: N,\n              errDesc: null == C ? void 0 : C.error_description\n            };\n          if (400 === N) {\n            if (40002 === C.error_code) return void t({\n              type: p.THREAD_ALREADY_EXIST,\n              message: null == C ? void 0 : C.error_description,\n              extraInfo: A\n            });\n            if (40009 === C.error_code) return void t({\n              type: p.OPERATION_UNSUPPORTED,\n              message: null == C ? void 0 : C.error_description,\n              extraInfo: A\n            });\n            if (60005 === C.error_code) return void t({\n              type: p.GROUP_MEMBER_ATTRIBUTES_SET_FAILED,\n              message: (null == C ? void 0 : C.desc) || (null == C ? void 0 : C.error_description),\n              extraInfo: A\n            });\n            if (60010 === C.error_code) return void ((null == C ? void 0 : C.error_description.includes(\"exceeds chatgroup user metadata single value limit\")) ? t({\n              type: p.MAX_LIMIT,\n              message: (null == C ? void 0 : C.desc) || C.error_description,\n              extraInfo: A\n            }) : t({\n              type: p.NO_PERMISSION,\n              message: (null == C ? void 0 : C.desc) || C.error_description,\n              extraInfo: A\n            }));\n            if (60011 === C.error_code) return void t({\n              type: p.CHATROOM_NOT_JOINED,\n              message: null == C ? void 0 : C.desc,\n              extraInfo: A\n            });\n            if (60006 === C.error_code || 60007 === C.error_code || 60009 === C.error_code || 60012 === C.error_code) return void t({\n              type: p.MAX_LIMIT,\n              message: (null == C ? void 0 : C.desc) || (null == C ? void 0 : C.error_description),\n              extraInfo: A\n            });\n            if (null === (n = C.error_description) || void 0 === n ? void 0 : n.includes(\"are not members of this group\")) return (null === (i = e.responseURL) || void 0 === i ? void 0 : i.includes(\"chatgroups\")) ? t({\n              type: p.GROUP_NOT_JOINED,\n              data: e.response || e.responseText,\n              message: C.error_description,\n              extraInfo: A\n            }) : t({\n              type: p.CHATROOM_NOT_JOINED,\n              data: e.response || e.responseText,\n              message: C.error_description,\n              extraInfo: A\n            }), void r({\n              type: p.WEBIM_CONNCTION_AJAX_ERROR,\n              message: null == C ? void 0 : C.error_description,\n              data: e.responseText,\n              extraInfo: A\n            });\n            if (\"the app not open presence\" === (null == C ? void 0 : C.result)) return void t({\n              type: p.SERVICE_NOT_ENABLED,\n              message: null == C ? void 0 : C.result,\n              extraInfo: A\n            });\n            switch (null == C ? void 0 : C.error_description) {\n              case \"the user is already operation this message\":\n                t({\n                  type: p.REACTION_ALREADY_ADDED,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"The quantity has exceeded the limit!\":\n                t({\n                  type: p.MAX_LIMIT,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"The user not in this group!\":\n                t({\n                  type: p.GROUP_NOT_JOINED,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"the user operation is illegal!\":\n                t({\n                  type: p.REACTION_OPERATION_IS_ILLEGAL,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"this appKey is not open reaction service!\":\n              case \"this appKey not open message roaming\":\n                t({\n                  type: p.SERVICE_NOT_ENABLED,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"this message is creating reaction, please try again.\":\n                t({\n                  type: p.REACTION_CREATING,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"groupId can not be null!\":\n                t({\n                  type: p.GROUP_NOT_EXIST,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"The input text is too long.\":\n                t({\n                  type: p.TRANSLATION_TEXT_TOO_LONG,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"The target language is not valid.\":\n                t({\n                  type: p.TRANSLATION_NOT_VALID,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"report failed, get message by id failed\":\n                t({\n                  type: p.MESSAGE_NOT_FOUND,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"ext is too big \":\n                t({\n                  type: p.PRESENCE_PARAM_EXCEED,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              case \"Request body not readable.Please check content type is correct!\":\n                t({\n                  type: p.REQUEST_PARAMETER_ERROR,\n                  message: null == C ? void 0 : C.error_description,\n                  extraInfo: A\n                });\n                break;\n              default:\n                t({\n                  type: p.WEBIM_CONNCTION_AJAX_ERROR,\n                  message: null == C ? void 0 : C.error_description,\n                  data: e.responseText,\n                  extraInfo: A\n                }), r({\n                  type: p.WEBIM_CONNCTION_AJAX_ERROR,\n                  message: null == C ? void 0 : C.error_description,\n                  data: e.responseText,\n                  extraInfo: A\n                });\n            }\n          } else if (401 === N) 40001 === C.error_code || 60001 === C.error_code || \"Unable to authenticate (OAuth)\" === C.error_description ? t({\n            type: p.NO_PERMISSION,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          }) : (r({\n            type: p.WEBIM_CONNCTION_AJAX_ERROR,\n            data: e.responseText,\n            message: e.responseText,\n            extraInfo: A\n          }), t({\n            type: p.WEBIM_CONNCTION_AJAX_ERROR,\n            data: e.responseText,\n            message: e.responseText,\n            extraInfo: A\n          }));else if (403 === N) 4e4 === C.error_code || 60004 === C.error_code || 15002 === C.error_code ? t({\n            type: p.SERVICE_NOT_ENABLED,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          }) : 40003 === C.error_code || 40004 === C.error_code ? t({\n            type: p.THREAD_ALREADY_EXIST,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          }) : 40005 === C.error_code || 40007 === C.error_code || 91002 === C.error_code ? t({\n            type: p.MAX_LIMIT,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          }) : 60002 === C.error_code && t({\n            type: p.PERMISSION_DENIED,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          }), \"group member list is full!\" === C.error_description ? (null === (a = e.responseURL) || void 0 === a ? void 0 : a.includes(\"chatgroups\")) ? t({\n            type: p.GROUP_MEMBERS_FULL,\n            data: e.response || e.responseText,\n            message: C.error_description,\n            extraInfo: A\n          }) : t({\n            type: p.CHATROOM_MEMBERS_FULL,\n            data: e.response || e.responseText,\n            message: C.error_description,\n            extraInfo: A\n          }) : (null === (s = C.error_description) || void 0 === s ? void 0 : s.includes(C.error_description.includes(\"already in group\"))) ? (null === (c = e.responseURL) || void 0 === c ? void 0 : c.includes(\"chatgroups\")) && t({\n            type: p.GROUP_ALREADY_JOINED,\n            data: e.response || e.responseText,\n            message: C.error_description,\n            extraInfo: A\n          }) : (null === (u = C.error_description) || void 0 === u ? void 0 : u.includes(\"are not members of this group\")) ? (null === (l = e.responseURL) || void 0 === l ? void 0 : l.includes(\"chatgroups\")) ? t({\n            type: p.GROUP_NOT_JOINED,\n            data: e.response || e.responseText,\n            message: C.error_description,\n            extraInfo: A\n          }) : t({\n            type: p.CHATROOM_NOT_JOINED,\n            data: e.response || e.responseText,\n            message: C.error_description,\n            extraInfo: A\n          }) : (null === (d = C.error_description) || void 0 === d ? void 0 : d.includes(\"service not open!\")) || (null === (h = C.error_description) || void 0 === h ? void 0 : h.includes(\"message report not open\")) || (null === (f = C.error_description) || void 0 === f ? void 0 : f.includes(\"messageroaming function not open\")) ? t({\n            type: p.SERVICE_NOT_ENABLED,\n            data: e.response || e.responseText,\n            message: C.error_description,\n            extraInfo: A\n          }) : (null === (m = C.error_description) || void 0 === m ? void 0 : m.includes(\"members size is greater than max user size !\")) ? t({\n            type: p.GROUP_MEMBERS_LIMIT,\n            data: e.response || e.responseText,\n            message: C.error_description,\n            extraInfo: A\n          }) : (null === (g = C.error_description) || void 0 === g ? void 0 : g.includes(\"can not operate this group, reason: group is disabled\")) ? t({\n            type: p.GROUP_IS_DISABLED,\n            data: e.response || e.responseText,\n            message: C.error_description,\n            extraInfo: A\n          }) : t({\n            type: p.PERMISSION_DENIED,\n            data: e.response || e.responseText,\n            message: \"permission denied\",\n            extraInfo: _O(_O({}, A), {\n              errDesc: \"permission denied\"\n            })\n          }), r({\n            type: p.WEBIM_CONNCTION_AJAX_ERROR,\n            data: e.responseText,\n            message: e.responseText,\n            extraInfo: A\n          });else if (404 === N) 40011 === C.error_code ? t({\n            type: p.THREAD_NOT_EXIST,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          }) : 40012 === C.error_code ? t({\n            type: p.NO_PERMISSION,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          }) : 60003 === C.error_code || 20004 === C.error_code ? t({\n            type: p.GROUP_NOT_JOINED,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          }) : 91001 === C.error_code && t({\n            type: p.CONVERSATION_NOT_EXIST,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          }), (null === (E = C.error_description) || void 0 === E ? void 0 : E.includes(\"do not find this group\")) || (null === (y = C.error_description) || void 0 === y ? void 0 : y.includes(\"does not exist\")) ? (null === (T = e.responseURL) || void 0 === T ? void 0 : T.includes(\"chatgroups\")) ? t({\n            type: p.GROUP_NOT_EXIST,\n            data: e.response || e.responseText,\n            message: \"The chat room dose not exist.\",\n            extraInfo: _O(_O({}, A), {\n              errDesc: \"The chat room dose not exist.\"\n            })\n          }) : t({\n            type: p.CHATROOM_NOT_EXIST,\n            data: e.response || e.responseText,\n            message: \"The chat room dose not exist.\",\n            extraInfo: _O(_O({}, A), {\n              errDesc: \"The chat room dose not exist.\"\n            })\n          }) : (null === (v = C.error_description) || void 0 === v ? void 0 : v.includes(\"username\")) && (null === (_ = C.error_description) || void 0 === _ ? void 0 : _.includes(\"doesn't exist!'\")) || (null === (R = C.error_description) || void 0 === R ? void 0 : R.includes(\"user not found\")) ? t({\n            type: p.USER_NOT_FOUND,\n            data: e.response || e.responseText,\n            message: C.error_description,\n            extraInfo: A\n          }) : t({\n            type: p.WEBIM_CONNCTION_AJAX_ERROR,\n            data: e.response || e.responseText,\n            message: e.responseText,\n            extraInfo: A\n          }), r({\n            type: p.WEBIM_CONNCTION_AJAX_ERROR,\n            data: e.response || e.responseText,\n            message: e.responseText,\n            extraInfo: A\n          });else if (406 === N) 90004 === C.error_code && t({\n            type: p.OPERATION_NOT_ALLOWED,\n            message: null == C ? void 0 : C.error_description,\n            extraInfo: A\n          });else if (429 === N || 503 === N) {\n            if (null === (I = C.error_description) || void 0 === I ? void 0 : I.includes(\"The request has reached the maximum limit\")) return void t({\n              type: p.MAX_LIMIT,\n              message: e.responseText,\n              extraInfo: A\n            });\n            t({\n              type: p.SERVER_BUSY,\n              data: e.response || e.responseText,\n              message: \"Server is busy.\",\n              extraInfo: _O(_O({}, A), {\n                errDesc: \"Server is busy.\"\n              })\n            }), r({\n              type: p.WEBIM_CONNCTION_AJAX_ERROR,\n              data: e.responseText,\n              message: \"Server is busy.\",\n              extraInfo: _O(_O({}, A), {\n                errDesc: \"Server is busy.\"\n              })\n            });\n          } else if (500 === N) {\n            if (40006 === C.error_code || 40008 === C.error_code || 40010 === C.error_code) return void t({\n              type: p.SERVER_UNKNOWN_ERROR,\n              message: null == C ? void 0 : C.error_description,\n              extraInfo: A\n            });\n            if (90005 === C.error_code || 99999 === C.error_code) return void t({\n              type: p.REQUEST_UNKNOWN,\n              message: null == C ? void 0 : C.error_description,\n              extraInfo: A\n            });\n            if (null === (S = C.error_description) || void 0 === S ? void 0 : S.includes(\"translte failed!\")) return void t({\n              type: p.TRANSLATION_FAILED,\n              message: e.responseText,\n              extraInfo: A\n            });\n            t({\n              type: p.WEBIM_CONNCTION_AJAX_ERROR,\n              data: e.responseText,\n              message: \"\",\n              extraInfo: A\n            }), r({\n              type: p.WEBIM_CONNCTION_AJAX_ERROR,\n              data: e.responseText,\n              message: \"\",\n              extraInfo: A\n            });\n          } else t({\n            type: p.WEBIM_CONNCTION_AJAX_ERROR,\n            data: e.responseText,\n            message: e.responseText,\n            extraInfo: _O(_O({}, A), {\n              errDesc: \"ajax error\"\n            })\n          }), r({\n            type: p.WEBIM_CONNCTION_AJAX_ERROR,\n            data: e.responseText,\n            message: e.responseText,\n            extraInfo: _O(_O({}, A), {\n              errDesc: \"ajax error\"\n            })\n          });\n        };\n      !function (e) {\n        e[e.UNKNOWOPERATION = -1] = \"UNKNOWOPERATION\", e[e.REST_GET_SESSION_LIST = 1] = \"REST_GET_SESSION_LIST\", e[e.REST_DEL_SESSION = 2] = \"REST_DEL_SESSION\", e[e.REST_GET_HISTORY_MESSAGE = 3] = \"REST_GET_HISTORY_MESSAGE\", e[e.REST_PIN_CONVERSATION = 4] = \"REST_PIN_CONVERSATION\", e[e.REST_OPERATE = 10] = \"REST_OPERATE\", e[e.MSYNC_SENDMESSAGE = 11] = \"MSYNC_SENDMESSAGE\", e[e.MSYNC_RECALLMESSAGE = 12] = \"MSYNC_RECALLMESSAGE\", e[e.MSYNC_OPERATE = 20] = \"MSYNC_OPERATE\", e[e.ROSTER_ADD = 21] = \"ROSTER_ADD\", e[e.ROSTER_REMOVE = 22] = \"ROSTER_REMOVE\", e[e.ROSTER_ACCEPT = 23] = \"ROSTER_ACCEPT\", e[e.ROSTER_DECLINE = 24] = \"ROSTER_DECLINE\", e[e.ROSTER_BAN = 25] = \"ROSTER_BAN\", e[e.ROSTER_ALLOW = 26] = \"ROSTER_ALLOW\", e[e.ROSTER_BLACKLIST = 27] = \"ROSTER_BLACKLIST\", e[e.ROSTER_CONTACTS = 28] = \"ROSTER_CONTACTS\", e[e.ROSTER_OPERATE = 30] = \"ROSTER_OPERATE\", e[e.USER_LOGIN = 31] = \"USER_LOGIN\", e[e.USER_CREATE = 32] = \"USER_CREATE\", e[e.USER_UPDATE_USERINFO = 33] = \"USER_UPDATE_USERINFO\", e[e.USER_FETCH_USERINFO = 34] = \"USER_FETCH_USERINFO\", e[e.USER_UPDATE_NICK = 35] = \"USER_UPDATE_NICK\", e[e.USER_UPLOAD_PUSH_TOKEN = 36] = \"USER_UPLOAD_PUSH_TOKEN\", e[e.USER_OPERATE = 40] = \"USER_OPERATE\", e[e.GROUP_CREATEGROUP = 41] = \"GROUP_CREATEGROUP\", e[e.GROUP_BLOCK_MESSAGE = 42] = \"GROUP_BLOCK_MESSAGE\", e[e.GROUP_FETCH_PUBLICGROUPS_WITHCURSOR = 43] = \"GROUP_FETCH_PUBLICGROUPS_WITHCURSOR\", e[e.GROUP_FETCH_USERS_GROUP = 44] = \"GROUP_FETCH_USERS_GROUP\", e[e.GROUP_CHANGE_OWNER = 45] = \"GROUP_CHANGE_OWNER\", e[e.GROUP_FETCH_SPECIFICATION = 46] = \"GROUP_FETCH_SPECIFICATION\", e[e.GROUP_CHANGE_GROUPATTRIBUTE = 47] = \"GROUP_CHANGE_GROUPATTRIBUTE\", e[e.GROUP_FETCH_MEMEBERS = 48] = \"GROUP_FETCH_MEMEBERS\", e[e.GROUP_GET_ADMIN = 49] = \"GROUP_GET_ADMIN\", e[e.GROUP_SET_ADMIN = 50] = \"GROUP_SET_ADMIN\", e[e.GROUP_REMOVE_ADMIN = 51] = \"GROUP_REMOVE_ADMIN\", e[e.GROUP_DESTOTYGROUP = 52] = \"GROUP_DESTOTYGROUP\", e[e.GROUP_LEAVEGROUP = 53] = \"GROUP_LEAVEGROUP\", e[e.GROUP_INVITE_TO_GROUP = 54] = \"GROUP_INVITE_TO_GROUP\", e[e.GROUP_JOIN_PUBLICGROUP = 55] = \"GROUP_JOIN_PUBLICGROUP\", e[e.GROUP_ACCEPT_JOINPUBLICGROUPAPPL = 56] = \"GROUP_ACCEPT_JOINPUBLICGROUPAPPL\", e[e.GROUP_DECLINE_JOINPUBLICGROUPAPPL = 57] = \"GROUP_DECLINE_JOINPUBLICGROUPAPPL\", e[e.GROUP_ACCEPT_INVITATION = 58] = \"GROUP_ACCEPT_INVITATION\", e[e.GROUP_DECLINE_INVITATION = 59] = \"GROUP_DECLINE_INVITATION\", e[e.GROUP_REMOVE_MEMBER = 60] = \"GROUP_REMOVE_MEMBER\", e[e.GROUP_REMOVE_MEMBERS = 61] = \"GROUP_REMOVE_MEMBERS\", e[e.GROUP_MUTE_MEMBERS = 62] = \"GROUP_MUTE_MEMBERS\", e[e.GROUP_UNMUTE_MEMBERS = 63] = \"GROUP_UNMUTE_MEMBERS\", e[e.GROUP_FETCH_MUTES = 64] = \"GROUP_FETCH_MUTES\", e[e.GROUP_BLOCK_MEMBER = 65] = \"GROUP_BLOCK_MEMBER\", e[e.GROUP_BLOCK_MEMBERS = 66] = \"GROUP_BLOCK_MEMBERS\", e[e.GROUP_UNBLOCK_MEMBER = 67] = \"GROUP_UNBLOCK_MEMBER\", e[e.GROUP_UNBLOCK_MEMBERS = 68] = \"GROUP_UNBLOCK_MEMBERS\", e[e.GROUP_GET_BLOCK_LIST = 69] = \"GROUP_GET_BLOCK_LIST\", e[e.GROUP_MUTE_ALLMEMBERS = 70] = \"GROUP_MUTE_ALLMEMBERS\", e[e.GROUP_UNMUTE_ALLMEMBERS = 71] = \"GROUP_UNMUTE_ALLMEMBERS\", e[e.GROUP_ADD_WHITELIST = 72] = \"GROUP_ADD_WHITELIST\", e[e.GROUP_REMOVE_WHITELIST = 73] = \"GROUP_REMOVE_WHITELIST\", e[e.GROUP_FETCH_WHITELIST = 74] = \"GROUP_FETCH_WHITELIST\", e[e.GROUP_IS_IN_WHITELIST = 75] = \"GROUP_IS_IN_WHITELIST\", e[e.GROUP_GET_READ_USERS = 76] = \"GROUP_GET_READ_USERS\", e[e.GROUP_FETCH_ANNOUNCEMENT = 77] = \"GROUP_FETCH_ANNOUNCEMENT\", e[e.GROUP_UPDATE_ANNOUNCEMENT = 78] = \"GROUP_UPDATE_ANNOUNCEMENT\", e[e.GROUP_UPLOAD_SHAREDFILE = 79] = \"GROUP_UPLOAD_SHAREDFILE\", e[e.GROUP_DELETE_SHAREDFILE = 80] = \"GROUP_DELETE_SHAREDFILE\", e[e.GROUP_FETCH_SHAREDFILE = 81] = \"GROUP_FETCH_SHAREDFILE\", e[e.GROUP_DOWNLOAD_SHAREDFILE = 82] = \"GROUP_DOWNLOAD_SHAREDFILE\", e[e.GROUP_MEMBER_SET_META_DATA = 83] = \"GROUP_MEMBER_SET_META_DATA\", e[e.GROUP_MEMBER_FETCH_META_DATA = 84] = \"GROUP_MEMBER_FETCH_META_DATA\", e[e.GROUP_OPERATE = 100] = \"GROUP_OPERATE\", e[e.CHATROOM_FETCH_CHATROOMSWITHPAGE = 101] = \"CHATROOM_FETCH_CHATROOMSWITHPAGE\", e[e.CHATROOM_CREATECHATROOM = 102] = \"CHATROOM_CREATECHATROOM\", e[e.CHATROOM_DESTORYCHATROOM = 103] = \"CHATROOM_DESTORYCHATROOM\", e[e.CHATROOM_FETCH_SPECIFICATION = 104] = \"CHATROOM_FETCH_SPECIFICATION\", e[e.CHATROOM_CHANGE_ATTRIBUTE = 105] = \"CHATROOM_CHANGE_ATTRIBUTE\", e[e.CHATROOM_REMOVE_MEMBER = 106] = \"CHATROOM_REMOVE_MEMBER\", e[e.CHATROOM_REMOVE_MEMBERS = 107] = \"CHATROOM_REMOVE_MEMBERS\", e[e.CHATROOM_ADD_MEMBERS = 108] = \"CHATROOM_ADD_MEMBERS\", e[e.CHATROOM_JOINCAHTROOM = 109] = \"CHATROOM_JOINCAHTROOM\", e[e.CHATROOM_LEAVECAHTROOM = 110] = \"CHATROOM_LEAVECAHTROOM\", e[e.CHATROOM_FETCH_MEMBERS = 111] = \"CHATROOM_FETCH_MEMBERS\", e[e.CHATROOM_GET_ADMIN = 112] = \"CHATROOM_GET_ADMIN\", e[e.CHATROOM_SET_ADMIN = 113] = \"CHATROOM_SET_ADMIN\", e[e.CHATROOM_REMOVE_ADMIN = 114] = \"CHATROOM_REMOVE_ADMIN\", e[e.CHATROOM_MUTE_USER = 115] = \"CHATROOM_MUTE_USER\", e[e.CHATROOM_UNMUTE_USER = 116] = \"CHATROOM_UNMUTE_USER\", e[e.CHATROOM_FETCH_MUTES = 117] = \"CHATROOM_FETCH_MUTES\", e[e.CHATROOM_BLOCK_USER = 118] = \"CHATROOM_BLOCK_USER\", e[e.CHATROOM_BLOCK_USERS = 119] = \"CHATROOM_BLOCK_USERS\", e[e.CHATROOM_UNBLOCK_USER = 120] = \"CHATROOM_UNBLOCK_USER\", e[e.CHATROOM_UNBLOCK_USERS = 121] = \"CHATROOM_UNBLOCK_USERS\", e[e.CHATROOM_FETCH_BANS = 122] = \"CHATROOM_FETCH_BANS\", e[e.CHATROOM_MUTE_ALLMEMEBERS = 123] = \"CHATROOM_MUTE_ALLMEMEBERS\", e[e.CHATROOM_UNMUTE_ALLMEMEBERS = 124] = \"CHATROOM_UNMUTE_ALLMEMEBERS\", e[e.CHATROOM_ADD_WHITELIST = 125] = \"CHATROOM_ADD_WHITELIST\", e[e.CHATROOM_REMOVE_WHITELIST = 126] = \"CHATROOM_REMOVE_WHITELIST\", e[e.CHATROOM_FETCH_WHITELIST = 127] = \"CHATROOM_FETCH_WHITELIST\", e[e.CHATROOM_FETCH_MEMBERIN_WHITELIST = 128] = \"CHATROOM_FETCH_MEMBERIN_WHITELIST\", e[e.CHATROOM_FETCH_ANNOUNCEMENT = 129] = \"CHATROOM_FETCH_ANNOUNCEMENT\", e[e.CHATROOM_UPDATE_ANNOUNCEMENT = 130] = \"CHATROOM_UPDATE_ANNOUNCEMENT\", e[e.CHATROOM_REMOVE_SHARE_FILE = 131] = \"CHATROOM_REMOVE_SHARE_FILE\", e[e.CHATROOM_GET_SHARE_FILE_LIST = 132] = \"CHATROOM_GET_SHARE_FILE_LIST\", e[e.CHATROOM_UPLOAD_FILE = 133] = \"CHATROOM_UPLOAD_FILE\", e[e.CHATROOM_SET_META_DATA = 134] = \"CHATROOM_SET_META_DATA\", e[e.CHATROOM_DELETE_META_DATA = 135] = \"CHATROOM_DELETE_META_DATA\", e[e.CHATROOM_FETCH_META_DATA = 136] = \"CHATROOM_FETCH_META_DATA\", e[e.CHATROOM_OPERATE = 150] = \"CHATROOM_OPERATE\";\n      }(g || (g = {})), function (e) {\n        e.SDK_INTERNAL = \"SDK_INTERNAL\", e.LOGIN = \"USER_LOGIN\", e.REGISTER = \"USER_CREATE\", e.GET_CHATROOM_LIST = \"CHATROOM_FETCH_CHATROOMSWITHPAGE\", e.CREATE_CHATROOM = \"CHATROOM_CREATECHATROOM\", e.DESTROY_CHATROOM = \"CHATROOM_DESTORYCHATROOM\", e.GET_CHATROOM_DETAIL = \"CHATROOM_FETCH_SPECIFICATION\", e.MODIFY_CHATROOM = \"CHATROOM_CHANGE_ATTRIBUTE\", e.REMOVE_CHATROOM_MEMBER = \"CHATROOM_REMOVE_MEMBER\", e.MULTI_REMOVE_CHATROOM_MEMBER = \"CHATROOM_REMOVE_MEMBERS\", e.ADD_USERS_TO_CHATROOM = \"CHATROOM_ADD_MEMBERS\", e.JOIN_CHATROOM = \"CHATROOM_JOINCAHTROOM\", e.QUIT_CHATROOM = \"CHATROOM_LEAVECAHTROOM\", e.LIST_CHATROOM_MEMBERS = \"CHATROOM_FETCH_MEMBERS\", e.GET_CHATROOM_ADMIN = \"CHATROOM_GET_ADMIN\", e.SET_CHATROOM_ADMIN = \"CHATROOM_SET_ADMIN\", e.REMOVE_CHATROOM_ADMIN = \"CHATROOM_REMOVE_ADMIN\", e.MUTE_CHATROOM_MEMBER = \"CHATROOM_MUTE_USER\", e.REMOVE_MUTE_CHATROOM_MEMBER = \"CHATROOM_UNMUTE_USER\", e.GET_MUTE_CHATROOM_MEMBERS = \"CHATROOM_FETCH_MUTES\", e.SET_CHATROOM_MEMBER_TO_BLACK = \"CHATROOM_BLOCK_USER\", e.MULTI_SET_CHATROOM_MEMBER_TO_BLACK = \"CHATROOM_BLOCK_USERS\", e.REMOVE_CHATROOM_MEMBER_BLACK = \"CHATROOM_UNBLOCK_USER\", e.MULTI_REMOVE_CHATROOM_MEMBER_BLACK = \"CHATROOM_UNBLOCK_USERS\", e.GET_CHATROOM_BLOCK_MEMBERS = \"CHATROOM_FETCH_BANS\", e.DISABLED_CHATROOM_SEND_MSG = \"CHATROOM_MUTE_ALLMEMEBERS\", e.ENABLE_CHATROOM_SEND_MSG = \"CHATROOM_UNMUTE_ALLMEMEBERS\", e.ADD_CHATROOM_WHITE_USERS = \"CHATROOM_ADD_WHITELIST\", e.REMOVE_CHATROOM_WHITE_USERS = \"CHATROOM_REMOVE_WHITELIST\", e.GET_CHATROOM_WHITE_USERS = \"CHATROOM_FETCH_WHITELIST\", e.CHECK_CHATROOM_WHITE_USER = \"CHATROOM_FETCH_MEMBERIN_WHITELIST\", e.GET_CHATROOM_ANN = \"CHATROOM_FETCH_ANNOUNCEMENT\", e.UPDATE_CHATROOM_ANN = \"CHATROOM_UPDATE_ANNOUNCEMENT\", e.DELETE_CHATROOM_FILE = \"CHATROOM_REMOVE_SHARE_FILE\", e.GET_CHATROOM_FILES = \"CHATROOM_GET_SHARE_FILE_LIST\", e.UPLOAD_CHATROOM_FILE = \"CHATROOM_UPLOAD_FILE\", e.SET_CHATROOM_ATTR = \"CHATROOM_SET_META_DATA\", e.DELETE_CHATROOM_ATTR = \"CHATROOM_DELETE_META_DATA\", e.GET_CHATROOM_ATTR = \"CHATROOM_FETCH_META_DATA\", e.CREATE_GROUP = \"GROUP_CREATEGROUP\", e.BLOCK_GROUP = \"GROUP_BLOCK_MESSAGE\", e.LIST_GROUP = \"GROUP_FETCH_PUBLICGROUPS_WITHCURSOR\", e.GET_USER_GROUP = \"GROUP_FETCH_USERS_GROUP\", e.CHANGE_OWNER = \"GROUP_CHANGE_OWNER\", e.GET_GROUP_INFO = \"GROUP_FETCH_SPECIFICATION\", e.MODIFY_GROUP = \"GROUP_CHANGE_GROUPATTRIBUTE\", e.LIST_GROUP_MEMBER = \"GROUP_FETCH_MEMEBERS\", e.GET_GROUP_ADMIN = \"GROUP_GET_ADMIN\", e.SET_GROUP_ADMIN = \"GROUP_SET_ADMIN\", e.REMOVE_GROUP_ADMIN = \"GROUP_REMOVE_ADMIN\", e.DISSOLVE_GROUP = \"GROUP_DESTOTYGROUP\", e.QUIT_GROUP = \"GROUP_LEAVEGROUP\", e.INVITE_TO_GROUP = \"GROUP_INVITE_TO_GROUP\", e.JOIN_GROUP = \"GROUP_JOIN_PUBLICGROUP\", e.AGREE_JOIN_GROUP = \"GROUP_ACCEPT_JOINPUBLICGROUPAPPL\", e.REJECT_JOIN_GROUP = \"GROUP_DECLINE_JOINPUBLICGROUPAPPL\", e.AGREE_INVITE_GROUP = \"GROUP_ACCEPT_INVITATION\", e.REJECT_INVITE_GROUP = \"GROUP_DECLINE_INVITATION\", e.REMOVE_GROUP_MEMBER = \"GROUP_REMOVE_MEMBER\", e.MULTI_REMOVE_GROUP_MEMBER = \"GROUP_REMOVE_MEMBERS\", e.MUTE_GROUP_MEMBER = \"GROUP_MUTE_MEMBERS\", e.UNMUTE_GROUP_MEMBER = \"GROUP_UNMUTE_MEMBERS\", e.GET_GROUP_MUTE_LIST = \"GROUP_FETCH_MUTES\", e.BLOCK_GROUP_MEMBER = \"GROUP_BLOCK_MEMBER\", e.BLOCK_GROUP_MEMBERS = \"GROUP_BLOCK_MEMBERS\", e.UNBLOCK_GROUP_MEMBER = \"GROUP_UNBLOCK_MEMBER\", e.UNBLOCK_GROUP_MEMBERS = \"GROUP_UNBLOCK_MEMBERS\", e.GET_GROUP_BLACK_LIST = \"GROUP_GET_BLOCK_LIST\", e.DISABLED_SEND_GROUP_MSG = \"GROUP_MUTE_ALLMEMBERS\", e.ENABLE_SEND_GROUP_MSG = \"GROUP_UNMUTE_ALLMEMBERS\", e.ADD_USERS_TO_GROUP_WHITE = \"GROUP_ADD_WHITELIST\", e.REMOVE_GROUP_WHITE_MEMBER = \"GROUP_REMOVE_WHITELIST\", e.GET_GROUP_WHITE_LIST = \"GROUP_FETCH_WHITELIST\", e.IS_IN_GROUP_WHITE_LIST = \"GROUP_IS_IN_WHITELIST\", e.GET_GROUP_MSG_READ_USER = \"GROUP_GET_READ_USERS\", e.GET_GROUP_ANN = \"GROUP_FETCH_ANNOUNCEMENT\", e.UPDATE_GROUP_ANN = \"GROUP_UPDATE_ANNOUNCEMENT\", e.UPLOAD_GROUP_FILE = \"GROUP_UPLOAD_SHAREDFILE\", e.DELETE_GROUP_FILE = \"GROUP_DELETE_SHAREDFILE\", e.GET_GROUP_FILE_LIST = \"GROUP_FETCH_SHAREDFILE\", e.DOWN_GROUP_FILE = \"GROUP_DOWNLOAD_SHAREDFILE\", e.SET_GROUP_MEMBER_ATTRS = \"GROUP_MEMBER_SET_META_DATA\", e.GET_GROUP_MEMBER_ATTR = \"GROUP_MEMBER_FETCH_META_DATA\", e.GET_SESSION_LIST = \"REST_GET_SESSION_LIST\", e.DELETE_SESSION = \"REST_DEL_SESSION\", e.GET_HISTORY_MSG = \"REST_GET_HISTORY_MESSAGE\", e.PIN_CONVERSATION = \"REST_PIN_CONVERSATION\", e.UPDATE_USER_INFO = \"USER_UPDATE_USERINFO\", e.GET_USER_INFO = \"USER_FETCH_USERINFO\", e.UPDATE_USER_NICK = \"USER_UPDATE_NICK\", e.UPLOAD_PUSH_TOKEN = \"USER_UPLOAD_PUSH_TOKEN\", e.GET_BLACK_LIST = \"ROSTER_BLACKLIST\", e.GET_CONTACTS = \"ROSTER_CONTACTS\", e.add = \"ROSTER_ADD\", e.remove = \"ROSTER_REMOVE\", e.accept = \"ROSTER_ACCEPT\", e.decline = \"ROSTER_DECLINE\", e.ban = \"ROSTER_BAN\", e.allow = \"ROSTER_ALLOW\", e.SEND_MSG = \"MSYNC_SENDMESSAGE\", e.UPLOAD_MSG_ATTACH = \"UPLOAD_MSG_ATTACH\", e.SEND_RECALL_MSG = \"MSYNC_RECALLMESSAGE\";\n      }(E || (E = {})), function (e) {\n        e.GET_DNS = \"REST_DNSLIST\", e.LOGIN_BY_AGORA_TOKEN = \"LOGIN_BY_AGORA_TOKEN\", e.LOGIN_BY_PWD = \"LOGIN_BY_PWD\", e.RESISTER = \"REGISTER\";\n      }(y || (y = {})), function (e) {\n        e[e[\"5G\"] = 7] = \"5G\", e[e[\"4G\"] = 7] = \"4G\", e[e[\"3G\"] = 7] = \"3G\", e[e[\"2G\"] = 7] = \"2G\", e[e[\"SLOW-2G\"] = 7] = \"SLOW-2G\", e[e.WIFI = 2] = \"WIFI\", e[e.LAN = 1] = \"LAN\", e[e.DISCONNECTED = 0] = \"DISCONNECTED\", e[e.NONE = 0] = \"NONE\", e[e.UNKNOWN = -1] = \"UNKNOWN\", e[e[\"WEBIM UNABLE TO GET\"] = -2] = \"WEBIM UNABLE TO GET\";\n      }(T || (T = {})), function (e) {\n        e[e.success = 200] = \"success\", e[e.failed = 500] = \"failed\";\n      }(v || (v = {})), function (e) {\n        e[e.web = 0] = \"web\", e[e.native = 1] = \"native\";\n      }(_ || (_ = {}));\n      var I = new Map(),\n        S = new Map(),\n        C = 1e3,\n        N = 9675,\n        A = -1;\n      function M() {\n        console.log && (console.log.apply ? console.log.apply(console, Array.prototype.slice.call(arguments)) : Function.prototype.apply.apply(console.log, [console, arguments])), console.trace && console.trace();\n      }\n      var b = \"undefined\" != typeof window && void 0 !== window.navigator && /Trident\\/|MSIE /.test(window.navigator.userAgent),\n        U = r.g.plus,\n        w = \"im-log\",\n        k = \"app-log\",\n        P = \"log\",\n        L = \"_doc/\".concat(k, \"/\").concat(w, \"/\").concat(P);\n      function D(e, t) {\n        if (void 0 === t && (t = \"*\"), \"string\" != typeof e) throw new Error(\"Invalid input parameter. The argument should be a string.\");\n        var r = e.indexOf(\"#\");\n        return -1 === r || r < 3 ? e : e.slice(0, r).slice(0, r - 3) + t.repeat(3) + e.slice(r);\n      }\n      var G,\n        x = function x(e, t) {\n          if (void 0 === t && (t = \"*\"), \"string\" != typeof e) throw new Error(\"Invalid input parameter. The argument should be a string.\");\n          var r = Array.from(e.matchAll(/(\\.)([^.]*)(?=\\.|$)/g));\n          if (r.length < 2) return e;\n          for (var o = \"\", n = 0, i = 0; i < r.length - 1; i++) {\n            var a = r[i],\n              s = t.repeat(a[2].length);\n            o += e.slice(n, a.index) + a[1] + s, n = a.index + a[0].length;\n          }\n          return o + e.slice(n);\n        },\n        B = function B() {\n          var e = new Date().getFullYear(),\n            t = new Date().getMonth() + 1,\n            r = new Date().getDate(),\n            o = new Date().getHours(),\n            n = new Date().getMinutes() < 10 ? \"0\" + new Date().getMinutes() : new Date().getMinutes(),\n            i = new Date().getSeconds() < 10 ? \"0\" + new Date().getSeconds() : new Date().getSeconds();\n          return \"\".concat(e, \"/\").concat(t, \"/\").concat(r, \" \").concat(o, \":\").concat(n, \":\").concat(i);\n        },\n        H = function () {\n          function e(t) {\n            var r,\n              o,\n              n = t.conn;\n            this.env = ue.getEnvInfo(), this.conn = n, this.logTextData = \"\", this.writeLogTimer = void 0, e.instance = this;\n            var i = (null === (o = null === (r = this.env.global) || void 0 === r ? void 0 : r.getDeviceInfo) || void 0 === o ? void 0 : o.call(r)) || {},\n              a = i.deviceModel,\n              s = i.deviceBrand,\n              c = i.system,\n              u = i.platform;\n            this.deviceInfo = {\n              deviceBrand: s,\n              deviceModel: a,\n              platform: u,\n              system: c\n            }, J.debug(\"deviceInfo\", this.deviceInfo);\n          }\n          return e.getInstance = function () {\n            return e.instance;\n          }, e.prototype.writeLog = function (e) {\n            var t = this,\n              o = e.log,\n              n = e.args;\n            if (r.g && r.g.plus && r.g.plus.io) {\n              var i = \"\".concat(o, \" \").concat(JSON.stringify(n));\n              this.logTextData += \"\\r\\n \" + i, this.writeLogTimer && clearTimeout(this.writeLogTimer), this.writeLogTimer = setTimeout(function () {\n                t.writeLogTxt();\n              }, 3e3);\n            }\n          }, e.prototype.writeLogTxt = function () {\n            var e = this;\n            U.io.requestFileSystem(U.io.PRIVATE_DOC, function (t) {\n              t.root.getDirectory(k, {\n                create: !0,\n                exclusive: !1\n              }, function (t) {\n                t.getDirectory(w, {\n                  create: !0,\n                  exclusive: !1\n                }, function (t) {\n                  __f__(\"log\", \"Directory Entry Name: \" + t.fullPath + P, \" at SDK/4.1.7-uniapp-log.js:1\"), t.getFile(P, {\n                    create: !0\n                  }, function (t) {\n                    t.file(function (r) {\n                      t.createWriter(function (t) {\n                        r.size <= 2e6 ? t.seek(t.length) : t.seek(0), t.write(e.logTextData), e.logTextData = \"\";\n                      }, function (e) {});\n                    });\n                  });\n                }, function (e) {});\n              }, function (e) {});\n            }, function (e) {});\n          }, e.prototype.getLogFile = function () {\n            return new Promise(function (e, t) {\n              U.io.resolveLocalFileSystemURL(L, function () {\n                e(L);\n              }, function (e) {\n                t(e);\n              });\n            });\n          }, e.prototype.zipCompress = function (e) {\n            return new Promise(function (t, r) {\n              var o = \"_doc/\".concat(k, \"/\").concat(w, \"/\").concat(new Date().getTime(), \".zip\");\n              U.zip.compress(e, o, function () {\n                t(o);\n              }, function (e) {\n                r(e);\n              });\n            });\n          }, e.prototype.removeFile = function (e) {\n            U.io.resolveLocalFileSystemURL(e, function (e) {\n              e.remove(function () {}, function (e) {});\n            });\n          }, e.prototype.uploadLogFile = function () {\n            return e = this, t = void 0, o = function o() {\n              var e,\n                t,\n                r,\n                o,\n                n,\n                i = this;\n              return function (e, t) {\n                var r,\n                  o,\n                  n,\n                  i,\n                  a = {\n                    label: 0,\n                    sent: function sent() {\n                      if (1 & n[0]) throw n[1];\n                      return n[1];\n                    },\n                    trys: [],\n                    ops: []\n                  };\n                return i = {\n                  next: s(0),\n                  throw: s(1),\n                  return: s(2)\n                }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n                  return this;\n                }), i;\n                function s(i) {\n                  return function (s) {\n                    return function (i) {\n                      if (r) throw new TypeError(\"Generator is already executing.\");\n                      for (; a;) {\n                        try {\n                          if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;\n                          switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {\n                            case 0:\n                            case 1:\n                              n = i;\n                              break;\n                            case 4:\n                              return a.label++, {\n                                value: i[1],\n                                done: !1\n                              };\n                            case 5:\n                              a.label++, o = i[1], i = [0];\n                              continue;\n                            case 7:\n                              i = a.ops.pop(), a.trys.pop();\n                              continue;\n                            default:\n                              if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                                a = 0;\n                                continue;\n                              }\n                              if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {\n                                a.label = i[1];\n                                break;\n                              }\n                              if (6 === i[0] && a.label < n[1]) {\n                                a.label = n[1], n = i;\n                                break;\n                              }\n                              if (n && a.label < n[2]) {\n                                a.label = n[2], a.ops.push(i);\n                                break;\n                              }\n                              n[2] && a.ops.pop(), a.trys.pop();\n                              continue;\n                          }\n                          i = t.call(e, a);\n                        } catch (e) {\n                          i = [6, e], o = 0;\n                        } finally {\n                          r = n = 0;\n                        }\n                      }\n                      if (5 & i[0]) throw i[1];\n                      return {\n                        value: i[0] ? i[1] : void 0,\n                        done: !0\n                      };\n                    }([i, s]);\n                  };\n                }\n              }(this, function (a) {\n                switch (a.label) {\n                  case 0:\n                    return a.trys.push([0, 3,, 4]), [4, this.getLogFile()];\n                  case 1:\n                    return e = a.sent(), [4, this.zipCompress(e)];\n                  case 2:\n                    return t = a.sent(), r = this.conn.apiUrl, o = this.conn.context.accessToken, n = \"\".concat(r, \"/easemob/logger/chatfiles\"), this.env.global.uploadFile({\n                      url: n,\n                      filePath: t,\n                      name: \"file\",\n                      header: {\n                        Authorization: \"Bearer \".concat(o)\n                      },\n                      success: function success(e) {\n                        i.uploadLogUUID(JSON.parse(e.data).entities[0].uuid);\n                      },\n                      complete: function complete() {\n                        i.removeFile(t);\n                      }\n                    }), [3, 4];\n                  case 3:\n                    return a.sent(), [3, 4];\n                  case 4:\n                    return [2];\n                }\n              });\n            }, new ((r = void 0) || (r = Promise))(function (n, i) {\n              function a(e) {\n                try {\n                  c(o.next(e));\n                } catch (e) {\n                  i(e);\n                }\n              }\n              function s(e) {\n                try {\n                  c(o.throw(e));\n                } catch (e) {\n                  i(e);\n                }\n              }\n              function c(e) {\n                var t;\n                e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {\n                  e(t);\n                })).then(a, s);\n              }\n              c((o = o.apply(e, t || [])).next());\n            });\n            var e, t, r, o;\n          }, e.prototype.uploadLogUUID = function (e) {\n            var t = this.conn,\n              r = t.apiUrl,\n              o = t.version,\n              n = t.user,\n              i = this.conn.context,\n              a = i.accessToken,\n              s = i.appKey,\n              c = \"\".concat(r, \"/easemob/logger/devicelogs\"),\n              u = {\n                model: 16,\n                logfile_uuid: e,\n                sdk_version: o,\n                os_version: \"UNIAPP \".concat(this.deviceInfo.system),\n                login_username: n,\n                appkey: s,\n                uploadDate: B()\n              };\n            this.env.global.request({\n              url: c,\n              data: u,\n              method: \"POST\",\n              header: {\n                Authorization: \"Bearer \".concat(a)\n              },\n              success: function success(e) {}\n            });\n          }, e;\n        }(),\n        j = H,\n        F = function F() {},\n        W = {};\n      !function (e) {\n        e[e.TRACE = 0] = \"TRACE\", e[e.DEBUG = 1] = \"DEBUG\", e[e.INFO = 2] = \"INFO\", e[e.WARN = 3] = \"WARN\", e[e.ERROR = 4] = \"ERROR\", e[e.SILENT = 5] = \"SILENT\";\n      }(G || (G = {}));\n      var q = function () {\n        function e(e, t, r) {\n          this.name = e || \"defaultLogger\", this.currentLevel = 0, this.useCookiePersist = !1, this.storageLogLevelKey = \"loglevel\", this.levels = G, this.logMethods = [\"trace\", \"debug\", \"info\", \"warn\", \"error\"], this.methodFactory = r || this.defaultMethodFactory;\n          var o = this._getPersistedLevel();\n          null == o && (o = null === t ? \"WARN\" : t), this.logs = [], this.config = {\n            useCache: !1,\n            maxCache: 3145728,\n            color: \"\",\n            background: \"\"\n          }, this.logBytes = 0, this.setLevel(o, !1, \"\");\n        }\n        return e.prototype.setConfig = function (e) {\n          this.config = e;\n        }, e.prototype.getLevel = function () {\n          return this.currentLevel;\n        }, e.prototype.setLevel = function (e, t, r) {\n          if (\"string\" == typeof e && (e = G[e]), void 0 === e && (e = 0), !(\"number\" == typeof e && e >= 0 && e <= this.levels.SILENT)) throw Error(\"log.setLevel() called with invalid level: \" + e);\n          if (this.currentLevel = e, !1 !== t && this._persistLevel(e), this.replaceLoggingMethods(e, r), \"undefined\" == typeof console && e < G.SILENT) throw Error(\"No console available for logging\");\n        }, e.prototype.setDefaultLevel = function (e) {\n          this._getPersistedLevel() || this.setLevel(e, !1, \"\");\n        }, e.prototype.enableAll = function (e) {\n          this.setLevel(this.levels.TRACE, !0, \"\");\n        }, e.prototype.disableAll = function (e) {\n          this.setLevel(this.levels.SILENT, !0, \"\");\n        }, e.prototype.getLogs = function () {\n          return this.logs;\n        }, e.prototype.download = function () {\n          if (\"undefined\" != typeof window && \"undefined\" != typeof document) {\n            var e = this.getLogs().join(\"\\n\"),\n              t = new Blob([e], {\n                type: \"text/plain;charset=UTF-8\"\n              }),\n              r = window.URL.createObjectURL(t),\n              o = document.createElement(\"a\");\n            o.style.display = \"none\", o.href = r, o.setAttribute(\"download\", \"sdklog\"), document.body.appendChild(o), o.click();\n          }\n        }, e.prototype._bindMethod = function (e, t, r) {\n          var o = this,\n            n = e[t],\n            i = this.getTime(),\n            a = new Date(),\n            s = a.getFullYear() + \"-\" + (a.getMonth() + 1) + \"-\" + a.getDate();\n          if (r) return this._cacheLog;\n          if (\"function\" == typeof n.bind) return function () {\n            for (var r, i = [], a = 0; a < arguments.length; a++) {\n              i[a] = arguments[a];\n            }\n            var c = o.getTime();\n            n.call.apply(n, function (e, t, r) {\n              if (r || 2 === arguments.length) for (var o, n = 0, i = t.length; n < i; n++) {\n                !o && n in t || (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);\n              }\n              return e.concat(o || Array.prototype.slice.call(t));\n            }([e, \"\".concat(c, \" IM SDK [\").concat(\"log\" === t ? \"debug\" : t, \"]: \")], i, !1)), o.onLog && o.onLog({\n              time: c,\n              level: \"log\" === t ? \"debug\" : t,\n              logs: i\n            }), null === (r = null == j ? void 0 : j.getInstance()) || void 0 === r || r.writeLog({\n              log: \"\".concat(s, \" \").concat(c, \" IM SDK [\").concat(\"log\" === t ? \"debug\" : t, \"]: \"),\n              args: i\n            });\n          };\n          try {\n            return Function.prototype.bind.call(n, e, \"\".concat(i, \" IM SDK [\").concat(\"log\" === t ? \"debug\" : t, \"]: \"));\n          } catch (t) {\n            return function () {\n              return Function.prototype.apply.apply(n, [e, arguments]);\n            };\n          }\n        }, e.prototype.getTime = function () {\n          var e = new Date();\n          return e.toTimeString().split(\" \")[0] + \":\" + e.getMilliseconds();\n        }, e.prototype._cacheLog = function () {\n          for (var e = [], t = 0; t < arguments.length; t++) {\n            e[t] = arguments[t];\n          }\n          var r = new Date().toLocaleString() + \": \",\n            o = \"\";\n          e.forEach(function (e) {\n            o += \"object\" == _typeof(e) ? JSON.stringify(e) + \" \" : e + \" \";\n          }), this._cacheLogCall(r + o);\n        }, e.prototype._cacheLogCall = function (e) {\n          var t = K(e),\n            r = this.logBytes + t,\n            o = this.config.maxCache;\n          if (!(t >= o)) {\n            if (r < o) this.logBytes += t;else for (var n = r - o, i = 0; i < n;) {\n              var a = this.logs.shift();\n              void 0 !== a && (i += K(a));\n            }\n            this.logs.push(e);\n          }\n        }, e.prototype._getPersistedLevel = function () {\n          var e;\n          if (\"undefined\" == typeof window) return 5;\n          if (\"undefined\" === (e = window && window.localStorage && window.localStorage[this.storageLogLevelKey])) {\n            var t = window.document.cookie,\n              r = t.indexOf(encodeURIComponent(this.storageLogLevelKey));\n            -1 !== r && (e = /^([^;]+)/.exec(t.slice(r))[1]);\n          }\n          return e || 5;\n        }, e.prototype._persistLevel = function (e) {\n          var t = this.logMethods[e] || \"SILENT\";\n          \"undefined\" != typeof window && (window.localStorage && (window.localStorage[this.storageLogLevelKey] = t), this.useCookiePersist && (window.document.cookie = encodeURIComponent(this.storageLogLevelKey) + \"=\" + t + \";\"));\n        }, e.prototype.replaceLoggingMethods = function (e, t) {\n          for (var r = 0; r < this.logMethods.length; r++) {\n            var o = this.logMethods[r];\n            this[o] = r < e ? F : this.methodFactory(o, e, t);\n          }\n          this.log = this.debug;\n        }, e.prototype.defaultMethodFactory = function (e, t, r) {\n          return this.realMethod(e) || this.enableLoggingWhenConsoleArrives.apply(this, [e, t, r]);\n        }, e.prototype.realMethod = function (e) {\n          return \"debug\" === e && (e = \"log\"), \"undefined\" != typeof console && (\"trace\" === e && b ? M : void 0 !== console[e] ? this._bindMethod(console, e, this.config.useCache) : void 0 !== console.log ? this._bindMethod(console, \"log\", this.config.useCache) : F);\n        }, e.prototype.enableLoggingWhenConsoleArrives = function (e, t, r) {\n          return function () {\n            \"undefined\" != typeof console && (this.replaceLoggingMethods.call(this, t, r), this[e].apply(this, arguments));\n          }.bind(this);\n        }, e;\n      }();\n      function K(e) {\n        for (var t = e.length, r = 0; r < e.length; r++) {\n          e.charCodeAt(r) > 255 && t++;\n        }\n        return t;\n      }\n      var z = new q();\n      z.getLogger = function (e) {\n        if (\"string\" != typeof e || \"\" === e) throw new TypeError(\"You must supply a name when creating a logger.\");\n        return this;\n      };\n      var V = \"undefined\" != typeof window ? window.log : void 0;\n      z.noConflict = function () {\n        return \"undefined\" != typeof window && window.log === z && (window.log = V), z;\n      }, z.getLoggers = function () {\n        return W;\n      };\n      var J = z,\n        _X = function X() {\n          return _X = Object.assign || function (e) {\n            for (var t, r = 1, o = arguments.length; r < o; r++) {\n              for (var n in t = arguments[r]) {\n                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n              }\n            }\n            return e;\n          }, _X.apply(this, arguments);\n        },\n        Y = function Y() {};\n      function Q(e, t) {\n        var r,\n          o = this;\n        return ne().platform === re.WEB ? new Promise(function (t, o) {\n          var n = e.dataType || \"text\",\n            i = e.success || Y,\n            a = e.error || Y,\n            s = new XMLHttpRequest();\n          s.ontimeout = function () {\n            o({\n              type: p.REQUEST_TIMEOUT,\n              message: \"Request Timeout\",\n              errorType: \"timeout_error\",\n              xhr: s\n            });\n          }, s.onerror = function () {\n            o({\n              type: p.REQUEST_UNKNOWN,\n              message: \"Request Unknow Error\",\n              errorType: \"onerror\",\n              xhr: s\n            });\n          }, s.onabort = function () {\n            o({\n              type: p.REQUEST_ABORT,\n              message: \"Request Abort\",\n              errorType: \"onabort\",\n              xhr: s\n            });\n          }, s.onreadystatechange = function () {\n            if (4 === s.readyState) {\n              var e = new Date().getTime() - r,\n                c = s.status || 0,\n                u = {\n                  elapse: e,\n                  httpCode: c\n                };\n              if (200 === c) {\n                ue.ajaxUnconventionalErrorTimes = 0;\n                try {\n                  switch (n) {\n                    case \"text\":\n                      return i(s.responseText), void t(s.responseText);\n                    case \"json\":\n                      var l = JSON.parse(s.responseText);\n                      return l.extraInfo = u, i(l), void t(l);\n                    case \"xml\":\n                      return s.responseXML && s.responseXML.documentElement ? (i(s.responseXML.documentElement), void t(s.responseXML.documentElement)) : (a({\n                        type: p.WEBIM_CONNCTION_AJAX_ERROR,\n                        data: s.responseText,\n                        message: \"XHR.responseXML is null or XHR.responseXML.documentElement is null\"\n                      }), void o({\n                        type: p.WEBIM_CONNCTION_AJAX_ERROR,\n                        data: s.responseText,\n                        message: \"XHR.responseXML is null or XHR.responseXML.documentElement is null\"\n                      }));\n                    default:\n                      a({\n                        type: p.WEBIM_CONNCTION_AJAX_ERROR,\n                        data: s.responseText,\n                        message: \"Invalid dataType\"\n                      }), o({\n                        type: p.WEBIM_CONNCTION_AJAX_ERROR,\n                        data: s.responseText,\n                        message: \"Invalid dataType\"\n                      });\n                  }\n                  return t(s.response || s.responseText), void i(s.response || s.responseText, s);\n                } catch (e) {\n                  o(e);\n                }\n                return;\n              }\n              [400, 401, 403, 404, 429, 500, 503].includes(c) || (J.debug(\"rest api request fail status:\", c), ue.ajaxUnconventionalErrorTimes++), R(s, o, a, e);\n            }\n            0 === s.readyState && (a({\n              type: p.WEBIM_CONNCTION_AJAX_ERROR,\n              data: s.responseText,\n              message: \"Request not initialized\"\n            }), o({\n              type: p.WEBIM_CONNCTION_AJAX_ERROR,\n              data: s.responseText,\n              message: \"Request not initialized\"\n            }));\n          }, e.responseType && s.responseType && (s.responseType = e.responseType), e.mimeType && s.overrideMimeType(e.mimeType);\n          var c = e.type || \"POST\",\n            u = e.data || null,\n            l = \"\";\n          if (\"get\" === c.toLowerCase() && u) {\n            for (var d in u) {\n              u.hasOwnProperty(d) && (l += d + \"=\" + u[d] + \"&\");\n            }\n            l = l ? l.slice(0, -1) : l, e.url += (e.url.indexOf(\"?\") > 0 ? \"&\" : \"?\") + (l ? l + \"&\" : l) + \"_v=\" + new Date().getTime(), u = null, l = \"\";\n          }\n          r = new Date().getTime(), s.open(c, e.url);\n          var h = e.headers || {};\n          for (var f in h[\"Content-Type\"] || (h[\"Content-Type\"] = \"application/json\"), h) {\n            h.hasOwnProperty(f) && s.setRequestHeader(f, h[f]);\n          }\n          s.send(u);\n        }).then(function (r) {\n          return o.dataReport && t && t !== E.SDK_INTERNAL && o.dataReport.geOperateFun({\n            operationName: t\n          })({\n            isEndApi: !0,\n            data: _X({\n              isSuccess: 1,\n              requestUrl: e.url,\n              requestName: t,\n              requestMethod: e.type\n            }, ce(r.extraInfo))\n          }), t !== E.SDK_INTERNAL && delete r.extraInfo, \"Object\" === $(r) ? _X(_X({}, r), {\n            type: p.REQUEST_SUCCESS\n          }) : {\n            data: r,\n            type: p.REQUEST_SUCCESS\n          };\n        }).catch(function (r) {\n          throw o.dataReport && t && t !== E.SDK_INTERNAL && o.dataReport.geOperateFun({\n            operationName: t\n          })({\n            isEndApi: !0,\n            data: _X({\n              isSuccess: 0,\n              requestUrl: e.url,\n              requestName: t,\n              requestMethod: e.type\n            }, ce(r.extraInfo))\n          }), t !== E.SDK_INTERNAL && delete r.extraInfo, r;\n        }) : Z.call(this, e, t);\n      }\n      function $(e) {\n        return Object.prototype.toString.call(e).slice(8, -1);\n      }\n      function Z(e, t) {\n        var r = this;\n        return new Promise(function (t, r) {\n          var o = e.success || Y,\n            n = e.error || Y,\n            i = e.type || \"POST\",\n            a = e.data || null,\n            s = \"\",\n            c = new Date().getTime(),\n            u = ue.getEnvInfo();\n          if (\"get\" === i.toLowerCase() && a) {\n            for (var l in a) {\n              a.hasOwnProperty(l) && (s += l + \"=\" + a[l] + \"&\");\n            }\n            s = s ? s.slice(0, -1) : s, e.url += (e.url.indexOf(\"?\") > 0 ? \"&\" : \"?\") + (s ? s + \"&\" : s) + \"_v=\" + new Date().getTime(), a = null, s = \"\";\n          }\n          var p = {\n            url: e.url,\n            data: e.data,\n            method: i,\n            headers: {},\n            success: function success(e) {\n              var i,\n                a,\n                s,\n                u,\n                l,\n                p = {\n                  elapse: new Date().getTime() - c,\n                  httpCode: Number((null === (i = e.statusCode) || void 0 === i ? void 0 : i.toString()) || (null === (a = e.status) || void 0 === a ? void 0 : a.toString())),\n                  errDesc: (null === (s = null == e ? void 0 : e.data) || void 0 === s ? void 0 : s.error_description) || \"\"\n                };\n              if (\"200\" === (null === (u = e.statusCode) || void 0 === u ? void 0 : u.toString()) || \"200\" === (null === (l = e.status) || void 0 === l ? void 0 : l.toString())) {\n                e.data.extraInfo = p;\n                var d = e.data;\n                o(d), t(d);\n              } else e.extraInfo = p, n(d = e), r(d);\n            },\n            complete: function complete() {},\n            fail: function fail(e) {\n              var t = {\n                elapse: new Date().getTime() - c,\n                httpCode: A,\n                errDesc: \"request:fail\"\n              };\n              e.extraInfo = t, e.data = {\n                error: \"request:fail\",\n                error_description: \"request:fail\"\n              }, n(e), r(e);\n            }\n          };\n          if (\"zfb\" === u.platform || \"dd\" === u.platform ? p.headers = e.headers : p.header = e.headers, \"dd\" === u.platform) return dd.httpRequest(p);\n          u.global.request(p);\n        }).then(function (o) {\n          return r.dataReport && t && t !== E.SDK_INTERNAL && r.dataReport.geOperateFun({\n            operationName: t\n          })({\n            isEndApi: !0,\n            data: _X({\n              isSuccess: 1,\n              requestUrl: e.url,\n              requestName: t,\n              requestMethod: e.type\n            }, ce(o.extraInfo))\n          }), t !== E.SDK_INTERNAL && delete o.extraInfo, \"Object\" === $(o) ? _X(_X({}, o), {\n            type: p.REQUEST_SUCCESS\n          }) : {\n            data: o,\n            type: p.REQUEST_SUCCESS\n          };\n        }).catch(function (o) {\n          throw r.dataReport && t && t !== E.SDK_INTERNAL && r.dataReport.geOperateFun({\n            operationName: t\n          })({\n            isEndApi: !0,\n            data: _X({\n              isSuccess: 0,\n              requestUrl: e.url,\n              requestName: t,\n              requestMethod: e.type\n            }, ce(o.extraInfo))\n          }), t !== E.SDK_INTERNAL && delete o.extraInfo, o;\n        });\n      }\n      var ee,\n        te,\n        re,\n        oe = (ee = function ee(e, t) {\n          var r = ne();\n          if (r.platform !== re.WEB) {\n            var o = r.global,\n              n = function n(r) {\n                r.isConnected ? e() : t(), J.debug(\"offNetworkStatusChange:networkType\", null == r ? void 0 : r.networkType);\n              };\n            o.offNetworkStatusChange && o.offNetworkStatusChange(n), o.onNetworkStatusChange && o.onNetworkStatusChange(n);\n          } else \"undefined\" != typeof addEventListener && (window.addEventListener(\"online\", e), window.addEventListener(\"offline\", t));\n        }, function () {\n          for (var e = [], t = 0; t < arguments.length; t++) {\n            e[t] = arguments[t];\n          }\n          if (!ee) return te;\n          te = ee.apply(void 0, e), ee = null;\n        });\n      function ne() {\n        return \"undefined\" != typeof swan && ie(swan) ? {\n          platform: re.BAIDU,\n          global: swan\n        } : \"undefined\" != typeof tt && ie(tt) ? {\n          platform: re.TT,\n          global: tt\n        } : \"undefined\" != typeof dd && ie(dd) ? {\n          platform: re.DD,\n          global: dd\n        } : \"undefined\" != typeof my && ie(my) ? {\n          platform: re.ZFB,\n          global: my\n        } : \"undefined\" != typeof wx && ie(wx) ? {\n          platform: re.WX,\n          global: wx\n        } : \"undefined\" != typeof uni && ie(uni) ? {\n          platform: re.UNI,\n          global: uni\n        } : \"undefined\" != typeof window && window.WebSocket ? {\n          platform: re.WEB,\n          global: window\n        } : {\n          platform: re.NODE,\n          global: r.g || {}\n        };\n      }\n      function ie(e) {\n        for (var t = [\"canIUse\", \"getSystemInfo\"], r = 0, o = t.length; r < o; r++) {\n          if (!e[t[r]]) return !1;\n        }\n        return !0;\n      }\n      function ae(e, t) {\n        var r,\n          o,\n          n = this,\n          i = new Date().getTime(),\n          a = e.accessToken;\n        if (a) {\n          var s = e.appKey,\n            c = [],\n            u = \"\",\n            l = \"\";\n          if (s && (u = (c = s.split(\"#\"))[0], l = c[1]), u || l) {\n            var d = e.apiUrl,\n              h = e.uploadUrl || d + \"/\" + u + \"/\" + l + \"/chatfiles\";\n            if ((null === (o = null === (r = null == e ? void 0 : e.file) || void 0 === r ? void 0 : r.data) || void 0 === o ? void 0 : o.size) <= 0) e.onFileUploadError && e.onFileUploadError({\n              type: p.WEBIM_UPLOADFILE_ERROR,\n              message: \"fileSize must be greater than 0\"\n            });else {\n              var f = new XMLHttpRequest();\n              f.upload && f.upload.addEventListener(\"progress\", e.onFileUploadProgress || Y, !1), f.addEventListener(\"abort\", e.onFileUploadCanceled || Y, !1), f.addEventListener(\"error\", function (e) {\n                g({\n                  type: p.WEBIM_UPLOADFILE_ERROR,\n                  data: f\n                });\n              }, !1), f.addEventListener(\"load\", function (r) {\n                try {\n                  var o = JSON.parse(f.responseText);\n                  if (400 === f.status) return g({\n                    type: p.WEBIM_UPLOADFILE_ERROR,\n                    data: o\n                  }), !1;\n                  try {\n                    !function (r) {\n                      var o = new Date().getTime() - i;\n                      n.dataReport && t && [E.UPLOAD_MSG_ATTACH, E.UPLOAD_CHATROOM_FILE, E.UPLOAD_GROUP_FILE].includes(t) && n.dataReport.geOperateFun({\n                        operationName: t\n                      })({\n                        isEndApi: !0,\n                        data: {\n                          isSuccess: (null == r ? void 0 : r.error) ? 0 : 1,\n                          requestMethod: \"POST\",\n                          requestName: t,\n                          requestElapse: o,\n                          requestUrl: h,\n                          code: f.status,\n                          codeDesc: (null == r ? void 0 : r.error_description) || \"\"\n                        }\n                      }), e.onFileUploadComplete && e.onFileUploadComplete(r);\n                    }(o);\n                  } catch (r) {\n                    g({\n                      type: p.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,\n                      data: r\n                    });\n                  }\n                } catch (r) {\n                  g({\n                    type: p.WEBIM_UPLOADFILE_ERROR,\n                    data: f.responseText\n                  });\n                }\n              }, !1), f.open(\"POST\", h), f.setRequestHeader(\"restrict-access\", \"true\"), f.setRequestHeader(\"Accept\", \"*/*\"), f.setRequestHeader(\"Authorization\", \"Bearer \" + a);\n              var m = new FormData();\n              m.append(\"file\", e.file.data), e.thumbnailWidth && m.append(\"thumbnail-width\", e.thumbnailWidth + \"\"), e.thumbnailHeight && m.append(\"thumbnail-height\", e.thumbnailHeight + \"\"), f.send(m);\n            }\n          } else e.onFileUploadError && e.onFileUploadError({\n            type: p.WEBIM_UPLOADFILE_ERROR,\n            message: \"AppKey illegal\"\n          });\n        } else e.onFileUploadError && e.onFileUploadError({\n          type: p.WEBIM_UPLOADFILE_NO_LOGIN,\n          message: \"AccessToken cannot be empty\"\n        });\n        function g(r) {\n          var o = new Date().getTime() - i;\n          n.dataReport && t && [E.UPLOAD_MSG_ATTACH, E.UPLOAD_CHATROOM_FILE, E.UPLOAD_GROUP_FILE].includes(t) && n.dataReport.geOperateFun({\n            operationName: t\n          })({\n            isEndApi: !0,\n            data: {\n              isSuccess: 0,\n              requestMethod: \"POST\",\n              requestName: t,\n              requestElapse: o,\n              requestUrl: h,\n              code: (null == f ? void 0 : f.status) || 0,\n              codeDesc: \"upload file error\"\n            }\n          }), e.onFileUploadError && e.onFileUploadError(r);\n        }\n      }\n      function se(e, t) {\n        e.onFileDownloadComplete = e.onFileDownloadComplete || Y, e.onFileDownloadError = e.onFileDownloadError || Y;\n        var r = new Date().getTime(),\n          o = new XMLHttpRequest(),\n          n = this;\n        o.addEventListener(\"load\", function (i) {\n          var a = new Date().getTime() - r;\n          n.dataReport && t && t === E.DOWN_GROUP_FILE && n.dataReport.geOperateFun({\n            operationName: t\n          })({\n            isEndApi: !0,\n            data: {\n              isSuccess: 200 === o.status ? 1 : 0,\n              requestMethod: \"POST\",\n              requestName: t,\n              requestElapse: a,\n              requestUrl: null == e ? void 0 : e.url,\n              code: o.status,\n              codeDesc: 200 === o.status ? \"\" : \"download file error\"\n            }\n          }), e.onFileDownloadComplete && e.onFileDownloadComplete(o.response);\n        }, !1), o.addEventListener(\"error\", function (i) {\n          var a = new Date().getTime() - r;\n          n.dataReport && t && t === E.DOWN_GROUP_FILE && n.dataReport.geOperateFun({\n            operationName: t\n          })({\n            isEndApi: !0,\n            data: {\n              isSuccess: 0,\n              requestMethod: \"POST\",\n              requestName: t,\n              requestElapse: a,\n              requestUrl: null == e ? void 0 : e.url,\n              code: (null == o ? void 0 : o.status) || 0,\n              codeDesc: \"download file error\"\n            }\n          }), e.onFileDownloadError && e.onFileDownloadError({\n            type: p.WEBIM_DOWNLOADFILE_ERROR,\n            id: e.id,\n            xhr: o\n          });\n        }, !1);\n        var i = e.method || \"GET\",\n          a = e.responseType || \"blob\",\n          s = e.mimeType || \"text/plain; charset=x-user-defined\";\n        o.open(i, e.url), \"undefined\" != typeof Blob ? o.responseType = a : o.overrideMimeType(s);\n        var c = {\n            \"X-Requested-With\": \"XMLHttpRequest\",\n            Accept: \"application/octet-stream\",\n            \"share-secret\": e.secret,\n            Authorization: \"Bearer \" + this.context.accessToken\n          },\n          u = e.headers || {};\n        for (var l in u) {\n          c[l] = u[l];\n        }\n        for (var l in c) {\n          c[l] && o.setRequestHeader(l, c[l]);\n        }\n        o.send(null);\n      }\n      function ce(e) {\n        void 0 === e && (e = {});\n        var t = e.elapse,\n          r = void 0 === t ? 0 : t,\n          o = e.httpCode,\n          n = void 0 === o ? 0 : o,\n          i = e.errDesc;\n        return {\n          requestElapse: r,\n          code: n,\n          codeDesc: void 0 === i ? \"\" : i\n        };\n      }\n      !function (e) {\n        e.WEB = \"web\", e.WX = \"wx\", e.ZFB = \"zfb\", e.DD = \"dd\", e.TT = \"tt\", e.BAIDU = \"baidu\", e.QUICK_APP = \"quick_app\", e.UNI = \"uni\", e.NODE = \"node\";\n      }(re || (re = {}));\n      var ue = {\n          autoIncrement: 0,\n          ajaxUnconventionalErrorTimes: 0,\n          ajax: Q,\n          getUniqueId: function getUniqueId() {\n            this.autoIncrement ? this.autoIncrement++ : this.autoIncrement = 1;\n            var e = new Date(),\n              t = new Date(2010, 1, 1);\n            return (e.getTime() - t.getTime() + this.autoIncrement).toString();\n          },\n          getFileUrl: function getFileUrl(e) {\n            var t = {\n                url: \"\",\n                filename: \"\",\n                filetype: \"\",\n                data: {}\n              },\n              r = \"string\" == typeof e ? document.getElementById(e) : e;\n            if (window.URL.createObjectURL) {\n              if (!r.files) throw Error(\"this is not HTMLInputElement\");\n              var o = r.files;\n              if (o.length > 0) {\n                var n = o.item(0);\n                t.data = n, t.url = window.URL.createObjectURL(n), t.filename = (null == n ? void 0 : n.name) || \"\";\n              }\n            } else {\n              if (\"string\" != typeof e) throw Error(\"in IE fileInputId must be string\");\n              n = document.getElementById(e).value, t.url = n;\n              var i = n.lastIndexOf(\"/\"),\n                a = n.lastIndexOf(\"\\\\\"),\n                s = Math.max(i, a);\n              t.filename = s < 0 ? n : n.substring(s + 1);\n            }\n            var c = t.filename.lastIndexOf(\".\");\n            return -1 !== c && (t.filetype = t.filename.substring(c + 1).toLowerCase()), t;\n          },\n          uploadFile: ae,\n          flow: function flow(e) {\n            for (var t = e.length, r = t; r--;) {\n              if (\"function\" != typeof e[r]) throw new TypeError(\"Expected a function\");\n            }\n            return function () {\n              for (var r = [], o = 0; o < arguments.length; o++) {\n                r[o] = arguments[o];\n              }\n              for (var n = 0, i = t ? e[n].apply(this, r) : r[0]; ++n < t;) {\n                i = e[n].call(this, i);\n              }\n              return i;\n            };\n          },\n          listenNetwork: oe,\n          getEnvInfo: ne,\n          wxRequest: Z,\n          parseDownloadResponse: function parseDownloadResponse(e) {\n            if (!window || !window.URL) throw Error(\"parseDownloadResponse can be used in broswer only\");\n            return e && e.type && \"application/json\" === e.type || 0 > Object.prototype.toString.call(e).indexOf(\"Blob\") ? this.url + \"?token=\" : window.URL.createObjectURL(e);\n          },\n          download: se,\n          parseNotify: function parseNotify(e) {\n            for (var t = \"\", r = 0; r < e.length; r++) {\n              t += \"%\" + e[r].toString(16);\n            }\n            return JSON.parse(decodeURIComponent(t));\n          },\n          getExtraData: ce\n        },\n        le = r(188),\n        pe = r.n(le),\n        _de = function de() {\n          return _de = Object.assign || function (e) {\n            for (var t, r = 1, o = arguments.length; r < o; r++) {\n              for (var n in t = arguments[r]) {\n                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n              }\n            }\n            return e;\n          }, _de.apply(this, arguments);\n        };\n      function he(e) {\n        var t,\n          r,\n          o = e.id,\n          n = e.payload,\n          i = e.timestamp,\n          a = e.to,\n          s = n.bodies && n.bodies.length > 0 ? n.bodies[0] : {},\n          c = {},\n          u = {},\n          l = n.type ? n.type : a.indexOf(\"@conference.easemob.com\") > -1 ? \"groupChat\" : \"singleChat\";\n        switch (l = \"chat\" === l ? \"singleChat\" : l, s.type) {\n          case \"txt\":\n            c = {\n              id: o,\n              type: \"txt\",\n              chatType: l,\n              msg: s.msg || \"\",\n              to: n.to || \"\",\n              from: n.from,\n              time: i,\n              ext: n.ext\n            };\n            break;\n          case \"img\":\n            c = {\n              id: o,\n              type: \"img\",\n              chatType: l,\n              to: n.to,\n              from: n.from,\n              time: i,\n              ext: n.ext,\n              width: (null === (t = s.size) || void 0 === t ? void 0 : t.width) || 0,\n              height: (null === (r = s.size) || void 0 === r ? void 0 : r.height) || 0,\n              secret: s.secret || \"\",\n              url: (null == s ? void 0 : s.url) || \"\",\n              file_length: s.file_length || 0,\n              file: {}\n            };\n            break;\n          case \"video\":\n            c = {\n              id: o,\n              type: \"video\",\n              chatType: l,\n              from: n.from,\n              to: n.to,\n              url: (null == s ? void 0 : s.url) || \"\",\n              secret: s.secret || \"\",\n              filename: s.filename,\n              length: s.length || 0,\n              file: {},\n              file_length: s.file_length || 0,\n              filetype: n.ext.file_type || \"\",\n              ext: n.ext,\n              time: i\n            };\n            break;\n          case \"loc\":\n            c = {\n              id: o,\n              type: \"loc\",\n              chatType: l,\n              from: n.from,\n              to: n.to,\n              buildingName: s.buildingName || \"\",\n              addr: s.addr,\n              lat: s.lat,\n              lng: s.lng,\n              ext: n.ext,\n              time: i\n            };\n            break;\n          case \"audio\":\n            c = {\n              id: o,\n              type: \"audio\",\n              chatType: l,\n              from: n.from,\n              to: n.to,\n              secret: s.secret || \"\",\n              ext: n.ext,\n              time: i,\n              url: (null == s ? void 0 : s.url) || \"\",\n              file: {},\n              filename: s.filename,\n              length: s.length || 0,\n              file_length: s.file_length || 0,\n              filetype: n.ext.file_type || \"\"\n            };\n            break;\n          case \"file\":\n            c = {\n              id: o,\n              type: \"file\",\n              chatType: l,\n              from: n.from,\n              to: n.to,\n              ext: n.ext,\n              time: i,\n              url: (null == s ? void 0 : s.url) || \"\",\n              secret: s.secret || \"\",\n              file: {},\n              filename: s.filename || \"\",\n              file_length: s.file_length || 0,\n              filetype: n.ext.file_type || \"\"\n            };\n            break;\n          case \"cmd\":\n            c = {\n              id: o,\n              type: \"cmd\",\n              chatType: l,\n              from: n.from,\n              to: n.to,\n              ext: n.ext,\n              time: i,\n              action: s.action || \"\"\n            };\n            break;\n          case \"custom\":\n            c = {\n              id: o,\n              type: \"custom\",\n              chatType: l,\n              from: n.from,\n              to: n.to,\n              ext: n.ext,\n              time: i,\n              customEvent: s.customEvent || \"\",\n              customExts: s.customExts || \"\"\n            };\n            break;\n          default:\n            J.error(\"unexpected message: \".concat(e));\n        }\n        if (n.msgConfig && (u.msgConfig = n.msgConfig), null == n ? void 0 : n.meta) {\n          var p = n.meta;\n          p.thread && (u.chatThread = {\n            messageId: p.thread.msg_parent_id,\n            parentId: p.thread.muc_parent_id,\n            chatThreadName: p.thread.thread_name\n          }), p.reactions && (u.reactions = p.reactions), p.translations && (u.translations = p.translations);\n        }\n        return _de(_de({}, c), u);\n      }\n      var fe = function () {\n          function e(e) {\n            var t = e.id;\n            this.id = t, this.type = e.type;\n          }\n          return e.prototype.set = function (e) {\n            this.body = {\n              id: this.id,\n              ackId: e.id,\n              type: \"read\",\n              to: e.to,\n              from: e.from || \"\",\n              chatType: e.chatType\n            };\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              chatType: e.chatType,\n              ackId: e.id,\n              type: \"read\",\n              to: e.to,\n              from: e.from || \"\",\n              ackContent: e.ackContent,\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly\n            };\n          }, e;\n        }(),\n        me = function () {\n          function e(e) {\n            this.id = e.id, this.type = e.type;\n          }\n          return e.prototype.set = function (e) {\n            this.body = {\n              id: this.id,\n              ackId: e.ackId,\n              type: \"delivery\",\n              to: e.to,\n              from: e.from || \"\"\n            };\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              ackId: e.ackId,\n              type: \"delivery\",\n              to: e.to,\n              from: e.from || \"\",\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly\n            };\n          }, e;\n        }(),\n        ge = function () {\n          function e(e) {\n            var t = e.type,\n              r = e.id;\n            this.id = r, this.type = t;\n          }\n          return e.prototype.set = function (e) {\n            this.body = {\n              id: this.id,\n              chatType: e.chatType || \"singleChat\",\n              type: \"channel\",\n              to: e.to,\n              from: e.from || \"\",\n              time: Date.now()\n            };\n          }, e.prototype.setChatType = function (e) {\n            return !!this.body && (this.body.chatType = e, !0);\n          }, e.prototype.setGroup = function (e) {\n            return !!this.body && (this.body.group = e, !0);\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              type: \"channel\",\n              chatType: e.chatType || \"singleChat\",\n              to: e.to,\n              from: e.from || \"\",\n              time: Date.now(),\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly\n            };\n          }, e;\n        }(),\n        Ee = function () {\n          function e(e) {\n            var t = e.type,\n              r = e.id || ue.getUniqueId();\n            this.id = r, this.type = t, this.value = \"\";\n          }\n          return e.prototype.set = function (e) {\n            this.body = {\n              id: this.id,\n              chatType: e.chatType || \"singleChat\",\n              type: \"txt\",\n              to: e.to,\n              msg: e.msg,\n              from: e.from,\n              roomType: e.roomType,\n              success: e.success,\n              fail: e.fail,\n              ext: e.ext,\n              time: Date.now(),\n              isChatThread: e.isChatThread\n            }, this.value = e.msg;\n          }, e.prototype.setChatType = function (e) {\n            return !!this.body && (this.body.chatType = e, !0);\n          }, e.prototype.setGroup = function (e) {\n            return !!this.body && (this.body.group = e, !0);\n          }, e.create = function (e) {\n            var t, r;\n            return (null === (t = e.msgConfig) || void 0 === t ? void 0 : t.languages) && Array.isArray(null === (r = e.msgConfig) || void 0 === r ? void 0 : r.languages), {\n              type: \"txt\",\n              id: ue.getUniqueId(),\n              msg: e.msg,\n              to: e.to,\n              from: e.from || \"\",\n              chatType: e.chatType,\n              ext: e.ext,\n              time: Date.now(),\n              msgConfig: e.msgConfig,\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly,\n              receiverList: e.receiverList\n            };\n          }, e;\n        }(),\n        ye = function () {\n          function e(e) {\n            var t = e.type,\n              r = e.id;\n            this.id = r || ue.getUniqueId(), this.type = t;\n          }\n          return e.prototype.set = function (e) {\n            this.body = {\n              id: this.id,\n              chatType: e.chatType || \"singleChat\",\n              type: \"cmd\",\n              to: e.to,\n              action: e.action,\n              from: e.from,\n              roomType: e.roomType,\n              success: e.success,\n              fail: e.fail,\n              ext: e.ext,\n              time: Date.now()\n            };\n          }, e.prototype.setChatType = function (e) {\n            return !!this.body && (this.body.chatType = e, !0);\n          }, e.prototype.setGroup = function (e) {\n            return !!this.body && (this.body.group = e, !0);\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              type: \"cmd\",\n              to: e.to,\n              from: e.from || \"\",\n              chatType: e.chatType || \"singleChat\",\n              action: e.action,\n              time: Date.now(),\n              ext: e.ext,\n              msgConfig: e.msgConfig,\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly,\n              receiverList: e.receiverList\n            };\n          }, e;\n        }(),\n        Te = function () {\n          function e(e) {\n            var t = e.type,\n              r = e.id || ue.getUniqueId();\n            this.id = r, this.type = t;\n          }\n          return e.prototype.set = function (e) {\n            this.body = {\n              id: this.id,\n              chatType: e.chatType || \"singleChat\",\n              type: \"custom\",\n              to: e.to,\n              customEvent: e.customEvent,\n              customExts: e.customExts,\n              from: e.from,\n              roomType: e.roomType,\n              success: e.success,\n              fail: e.fail,\n              ext: e.ext,\n              time: Date.now()\n            };\n          }, e.prototype.setChatType = function (e) {\n            return !!this.body && (this.body.chatType = e, !0);\n          }, e.prototype.setGroup = function (e) {\n            return !!this.body && (this.body.group = e, !0);\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              chatType: e.chatType || \"singleChat\",\n              type: \"custom\",\n              to: e.to,\n              customEvent: e.customEvent,\n              customExts: e.customExts,\n              from: e.from || \"\",\n              ext: e.ext,\n              time: Date.now(),\n              msgConfig: e.msgConfig,\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly,\n              receiverList: e.receiverList\n            };\n          }, e;\n        }(),\n        ve = function () {\n          function e(e) {\n            var t = e.type,\n              r = e.id;\n            this.id = r || ue.getUniqueId(), this.type = t;\n          }\n          return e.prototype.set = function (e) {\n            this.body = {\n              id: this.id,\n              chatType: e.chatType || \"singleChat\",\n              type: \"loc\",\n              to: e.to,\n              addr: e.addr,\n              buildingName: e.buildingName,\n              lat: e.lat,\n              lng: e.lng,\n              from: e.from,\n              roomType: e.roomType,\n              success: e.success,\n              fail: e.fail,\n              ext: e.ext,\n              time: Date.now()\n            };\n          }, e.prototype.setChatType = function (e) {\n            return !!this.body && (this.body.chatType = e, !0);\n          }, e.prototype.setGroup = function (e) {\n            return !!this.body && (this.body.group = e, !0);\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              chatType: e.chatType || \"singleChat\",\n              type: \"loc\",\n              to: e.to,\n              addr: e.addr,\n              buildingName: e.buildingName,\n              lat: e.lat,\n              lng: e.lng,\n              from: e.from || \"\",\n              ext: e.ext,\n              time: Date.now(),\n              msgConfig: e.msgConfig,\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly,\n              receiverList: e.receiverList\n            };\n          }, e;\n        }(),\n        _e = function () {\n          function e(e) {\n            var t = e.type,\n              r = e.id || ue.getUniqueId();\n            this.id = r, this.type = t;\n          }\n          return e.prototype.set = function (e) {\n            e.file = e.file || e.fileInputId && ue.getFileUrl(e.fileInputId), this.body = {\n              id: this.id,\n              chatType: e.chatType || \"singleChat\",\n              type: \"img\",\n              file: e.file,\n              width: e.width,\n              height: e.height,\n              to: e.to,\n              from: e.from || \"\",\n              roomType: e.roomType,\n              success: e.success,\n              fail: e.fail,\n              ext: e.ext,\n              time: Date.now(),\n              onFileUploadError: e.onFileUploadError,\n              onFileUploadComplete: e.onFileUploadComplete,\n              onFileUploadProgress: e.onFileUploadProgress,\n              body: e.body,\n              isChatThread: e.isChatThread\n            };\n          }, e.prototype.setChatType = function (e) {\n            return !!this.body && (this.body.chatType = e, !0);\n          }, e.prototype.setGroup = function (e) {\n            return !!this.body && (this.body.group = e, !0);\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              chatType: e.chatType,\n              type: \"img\",\n              url: e.url,\n              width: e.width,\n              height: e.height,\n              file: e.file,\n              to: e.to,\n              from: e.from || \"\",\n              ext: e.ext,\n              time: Date.now(),\n              msgConfig: e.msgConfig,\n              file_length: e.file_length,\n              onFileUploadError: e.onFileUploadError,\n              onFileUploadComplete: e.onFileUploadComplete,\n              onFileUploadProgress: e.onFileUploadProgress,\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly,\n              receiverList: e.receiverList,\n              thumbnailWidth: e.thumbnailWidth,\n              thumbnailHeight: e.thumbnailHeight\n            };\n          }, e;\n        }(),\n        Oe = function () {\n          function e(e) {\n            var t = e.type,\n              r = e.id || ue.getUniqueId();\n            this.id = r, this.type = t;\n          }\n          return e.prototype.set = function (e) {\n            e.file = e.file || e.fileInputId && ue.getFileUrl(e.fileInputId), this.body = {\n              id: this.id,\n              chatType: e.chatType || \"singleChat\",\n              type: \"audio\",\n              file: e.file,\n              filename: e.filename,\n              length: e.length,\n              file_length: e.file_length,\n              fileInputId: e.fileInputId,\n              to: e.to,\n              from: e.from,\n              roomType: e.roomType,\n              success: e.success,\n              fail: e.fail,\n              ext: e.ext,\n              time: Date.now(),\n              onFileUploadError: e.onFileUploadError,\n              onFileUploadComplete: e.onFileUploadComplete,\n              onFileUploadProgress: e.onFileUploadProgress,\n              body: e.body,\n              isChatThread: e.isChatThread\n            };\n          }, e.prototype.setChatType = function (e) {\n            return !!this.body && (this.body.chatType = e, !0);\n          }, e.prototype.setGroup = function (e) {\n            return !!this.body && (this.body.group = e, !0);\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              chatType: e.chatType,\n              type: \"audio\",\n              filename: e.filename,\n              length: e.length,\n              file: e.file,\n              to: e.to,\n              from: e.from || \"\",\n              ext: e.ext,\n              time: Date.now(),\n              onFileUploadError: e.onFileUploadError,\n              onFileUploadComplete: e.onFileUploadComplete,\n              onFileUploadProgress: e.onFileUploadProgress,\n              body: e.body,\n              file_length: e.file_length,\n              msgConfig: e.msgConfig,\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly,\n              receiverList: e.receiverList\n            };\n          }, e;\n        }(),\n        Re = function () {\n          function e(e) {\n            var t = e.type,\n              r = e.id;\n            this.id = r, this.type = t;\n          }\n          return e.prototype.set = function (e) {\n            e.file = e.file || e.fileInputId && ue.getFileUrl(e.fileInputId), this.body = {\n              id: this.id,\n              chatType: e.chatType || \"singleChat\",\n              type: \"video\",\n              file: e.file,\n              filename: e.filename,\n              length: e.length,\n              file_length: e.file_length,\n              fileInputId: e.fileInputId,\n              to: e.to,\n              from: e.from,\n              roomType: e.roomType,\n              success: e.success,\n              fail: e.fail,\n              ext: e.ext,\n              time: Date.now(),\n              apiUrl: e.apiUrl,\n              onFileUploadError: e.onFileUploadError,\n              onFileUploadComplete: e.onFileUploadComplete,\n              onFileUploadProgress: e.onFileUploadProgress,\n              body: e.body,\n              isChatThread: e.isChatThread\n            };\n          }, e.prototype.setChatType = function (e) {\n            return !!this.body && (this.body.chatType = e, !0);\n          }, e.prototype.setGroup = function (e) {\n            return !!this.body && (this.body.group = e, !0);\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              chatType: e.chatType || \"singleChat\",\n              type: \"video\",\n              file: e.file,\n              filename: e.filename,\n              length: e.length,\n              file_length: e.file_length,\n              fileInputId: e.fileInputId,\n              to: e.to,\n              from: e.from || \"\",\n              ext: e.ext,\n              time: Date.now(),\n              onFileUploadError: e.onFileUploadError,\n              onFileUploadComplete: e.onFileUploadComplete,\n              onFileUploadProgress: e.onFileUploadProgress,\n              body: e.body,\n              msgConfig: e.msgConfig,\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly,\n              receiverList: e.receiverList\n            };\n          }, e;\n        }(),\n        Ie = function () {\n          function e(e) {\n            var t = e.type,\n              r = e.id;\n            this.id = r, this.type = t;\n          }\n          return e.prototype.set = function (e) {\n            e.file = e.file || e.fileInputId && ue.getFileUrl(e.fileInputId), this.body = {\n              id: this.id,\n              chatType: e.chatType || \"singleChat\",\n              type: \"file\",\n              file: e.file,\n              filename: e.filename,\n              fileInputId: e.fileInputId,\n              to: e.to,\n              from: e.from,\n              roomType: e.roomType,\n              success: e.success,\n              fail: e.fail,\n              ext: e.ext,\n              time: Date.now(),\n              onFileUploadError: e.onFileUploadError,\n              onFileUploadComplete: e.onFileUploadComplete,\n              onFileUploadProgress: e.onFileUploadProgress,\n              body: e.body,\n              isChatThread: e.isChatThread\n            };\n          }, e.prototype.setChatType = function (e) {\n            return !!this.body && (this.body.chatType = e, !0);\n          }, e.prototype.setGroup = function (e) {\n            return !!this.body && (this.body.group = e, !0);\n          }, e.create = function (e) {\n            return {\n              id: ue.getUniqueId(),\n              chatType: e.chatType || \"singleChat\",\n              type: \"file\",\n              file: e.file,\n              filename: e.filename,\n              fileInputId: e.fileInputId,\n              file_length: e.file_length,\n              to: e.to,\n              from: e.from || \"\",\n              ext: e.ext,\n              onFileUploadError: e.onFileUploadError,\n              onFileUploadComplete: e.onFileUploadComplete,\n              onFileUploadProgress: e.onFileUploadProgress,\n              body: e.body,\n              time: Date.now(),\n              msgConfig: e.msgConfig,\n              isChatThread: e.isChatThread,\n              priority: e.priority,\n              deliverOnlineOnly: e.deliverOnlineOnly,\n              receiverList: e.receiverList\n            };\n          }, e;\n        }(),\n        Se = function () {\n          function e(t, r) {\n            return this.type = t, this.id = r || ue.getUniqueId(), e.createOldMsg({\n              type: t,\n              id: this.id\n            });\n          }\n          return e.createOldMsg = function (e) {\n            switch (e.type) {\n              case \"read\":\n                return new fe({\n                  type: \"read\",\n                  id: e.id\n                });\n              case \"delivery\":\n                return new me({\n                  type: \"delivery\",\n                  id: e.id\n                });\n              case \"channel\":\n                return new ge({\n                  type: \"channel\",\n                  id: e.id\n                });\n              case \"txt\":\n                return new Ee({\n                  type: \"txt\",\n                  id: e.id\n                });\n              case \"cmd\":\n                return new ye({\n                  type: \"cmd\",\n                  id: e.id\n                });\n              case \"custom\":\n                return new Te({\n                  type: \"custom\",\n                  id: e.id\n                });\n              case \"loc\":\n                return new ve({\n                  type: \"loc\",\n                  id: e.id\n                });\n              case \"img\":\n                return new _e({\n                  type: \"img\",\n                  id: e.id\n                });\n              case \"audio\":\n                return new Oe({\n                  type: \"audio\",\n                  id: e.id\n                });\n              case \"video\":\n                return new Re({\n                  type: \"video\",\n                  id: e.id\n                });\n              case \"file\":\n                return new Ie({\n                  type: \"file\",\n                  id: e.id\n                });\n            }\n          }, e.create = function (e) {\n            return \"txt\" !== (t = e).type || \"version\" in t ? function (e) {\n              return \"img\" === e.type && !(\"version\" in e);\n            }(e) ? _e.create(e) : function (e) {\n              return \"cmd\" === e.type && !(\"version\" in e);\n            }(e) ? ye.create(e) : function (e) {\n              return \"file\" === e.type && !(\"version\" in e);\n            }(e) ? Ie.create(e) : function (e) {\n              return \"audio\" === e.type && !(\"version\" in e);\n            }(e) ? Oe.create(e) : function (e) {\n              return \"video\" === e.type && !(\"version\" in e);\n            }(e) ? Re.create(e) : function (e) {\n              return \"custom\" === e.type && !(\"version\" in e);\n            }(e) ? Te.create(e) : function (e) {\n              return \"loc\" === e.type && !(\"version\" in e);\n            }(e) ? ve.create(e) : function (e) {\n              return \"channel\" === e.type && !(\"version\" in e);\n            }(e) ? ge.create(e) : function (e) {\n              return \"delivery\" === e.type && !(\"version\" in e);\n            }(e) ? me.create(e) : function (e) {\n              return \"read\" === e.type && !(\"version\" in e);\n            }(e) ? fe.create(e) : {} : Ee.create(e);\n            var t;\n          }, e.prototype.set = function (e) {}, e;\n        }(),\n        Ce = {\n          0: \"TEXT\",\n          1: \"IMAGE\",\n          2: \"VIDEO\",\n          3: \"LOCATION\",\n          4: \"VOICE\",\n          5: \"FILE\",\n          6: \"COMMAND\",\n          7: \"CUSTOM\"\n        };\n      function Ne(e) {\n        for (var t = {}, r = 0; r < e.length; r++) {\n          if (8 === e[r].type) t[e[r].key] = JSON.parse(e[r].stringValue);else if (7 === e[r].type) t[e[r].key] = e[r].stringValue;else if (6 === e[r].type) t[e[r].key] = e[r].doubleValue;else if (5 === e[r].type) t[e[r].key] = e[r].floatValue;else if (1 === e[r].type) {\n            var o = e[r].varintValue,\n              n = new (f())(o.low, o.high, o.unsigned).toString();\n            t[e[r].key] = 0 !== Number(n);\n          } else 2 !== e[r].type && 3 !== e[r].type && 4 !== e[r].type || (o = e[r].varintValue, n = new (f())(o.low, o.high, o.unsigned).toString(), t[e[r].key] = Number(n));\n        }\n        return t;\n      }\n      function Ae(e, t, r) {\n        if (this.delivery && e !== t) {\n          var o = this.getUniqueId(),\n            n = new Se(\"delivery\", o);\n          n.set({\n            ackId: r,\n            to: e\n          }), J.debug(\"send delivery ack\"), this.send(n.body);\n        }\n      }\n      var Me = function Me(e, t, r, o) {\n          var n,\n            i,\n            a,\n            s,\n            c,\n            u,\n            l,\n            p,\n            d = new (f())(e.timestamp.low, e.timestamp.high, e.timestamp.unsigned).toString(),\n            h = this.root.lookup(\"easemob.pb.MessageBody\").decode(e.payload),\n            m = 1;\n          if (e.meta && e.meta.length) switch (ue.parseNotify(e.meta).is_online) {\n            case 0:\n              m = 0;\n              break;\n            case 1:\n              m = 1;\n              break;\n            default:\n              m = 2;\n          } else m = 3;\n          var g = new (f())(e.id.low, e.id.high, e.id.unsigned).toString(),\n            E = h.ackMessageId ? new (f())(h.ackMessageId.low, h.ackMessageId.high, h.ackMessageId.unsigned).toString() : \"\",\n            y = \"\",\n            T = h.from && h.from.name,\n            v = h.to && h.to.name;\n          switch (J.debug(\"thirdMessage:\", h), h.type) {\n            case 1:\n              y = \"chat\", \"agoraToken\" === this.grantType && (y = \"singleChat\"), this.delivery && Ae.call(this, T, v, g);\n              break;\n            case 2:\n              y = \"groupchat\", \"agoraToken\" === this.grantType && (y = \"groupChat\");\n              break;\n            case 3:\n              y = \"chatroom\", \"agoraToken\" === this.grantType && (y = \"chatRoom\"), m = 1;\n              break;\n            case 4:\n              y = \"read_ack\";\n              var _ = void 0;\n              return h.ext[0] && JSON.parse(h.ext[0].stringValue) ? (_ = {\n                id: g,\n                type: \"read\",\n                from: T,\n                to: v,\n                mid: E,\n                groupReadCount: h.ext[0] && JSON.parse(h.ext[0].stringValue),\n                ackContent: h.ackContent,\n                onlineState: m\n              }, this.onReadMessage && this.onReadMessage(_), void (null === (n = this.eventHandler) || void 0 === n || n.dispatch(\"onReadMessage\", _))) : (_ = {\n                id: g,\n                type: \"read\",\n                from: T,\n                to: v,\n                mid: E,\n                onlineState: m\n              }, this.onReadMessage && this.onReadMessage(_), void (null === (i = this.eventHandler) || void 0 === i || i.dispatch(\"onReadMessage\", _)));\n            case 5:\n              y = \"deliver_ack\", this.onDeliveredMessage && this.onDeliveredMessage({\n                id: g,\n                type: \"delivery\",\n                from: T,\n                to: v,\n                mid: E,\n                onlineState: m\n              });\n              var O = {\n                id: g,\n                type: \"delivery\",\n                from: T,\n                to: v,\n                mid: E,\n                onlineState: m\n              };\n              return void (null === (a = this.eventHandler) || void 0 === a || a.dispatch(\"onDeliveredMessage\", O));\n            case 6:\n              y = \"recall\";\n              var R = {\n                id: g,\n                from: T || \"admin\",\n                to: v,\n                mid: E,\n                onlineState: m\n              };\n              return this.onRecallMessage && this.onRecallMessage(R), void (null === (s = this.eventHandler) || void 0 === s || s.dispatch(\"onRecallMessage\", R));\n            case 7:\n              this.onChannelMessage && this.onChannelMessage({\n                id: g,\n                type: \"channel\",\n                chatType: \"singleChat\",\n                from: T,\n                to: v,\n                time: Number(d),\n                onlineState: m\n              });\n              var I = {\n                id: g,\n                type: \"channel\",\n                chatType: \"singleChat\",\n                from: T,\n                to: v,\n                time: Number(d),\n                onlineState: m\n              };\n              return void (null === (c = this.eventHandler) || void 0 === c || c.dispatch(\"onChannelMessage\", I));\n            default:\n              return void J.error(\"unexpected message type: \".concat(h.type));\n          }\n          var S,\n            C = \"normal\";\n          if (\"chat\" === y.toLowerCase() || \"singleChat\" === y) S = \"singleChat\";else if (\"groupchat\" === y.toLowerCase() || \"groupChat\" === y) S = \"groupChat\";else if (S = \"chatRoom\", m = 1, e.ext) {\n            var N = Ne([e.ext]);\n            C = 0 === N.chatroom_msg_tag ? \"high\" : 2 === N.chatroom_msg_tag ? \"low\" : \"normal\";\n          }\n          for (var A = 0; A < h.contents.length; A++) {\n            var M = {},\n              b = {},\n              U = t.errorCode > 0,\n              w = t.errorCode,\n              k = t.reason,\n              P = h.contents[A],\n              L = {},\n              D = [],\n              G = [],\n              x = null,\n              B = null,\n              H = void 0;\n            if (h.ext && (L = Ne(h.ext)), h.meta && \"string\" == typeof h.meta) {\n              var F = JSON.parse(h.meta);\n              F.reaction && (D = F.reaction).forEach(function (e) {\n                e.isAddedBySelf = e.state, delete e.state;\n              }), F.translations && (G = F.translations), F.thread && \"{}\" !== JSON.stringify(F.thread) && (x = {\n                messageId: F.thread.msg_parent_id,\n                parentId: F.thread.muc_parent_id,\n                chatThreadName: F.thread.thread_name\n              }), F.thread_overview && \"{}\" !== JSON.stringify(F.thread_overview) && (B = {\n                id: F.thread_overview.id,\n                parentId: F.thread_overview.muc_parent_id,\n                name: F.thread_overview.name,\n                lastMessage: F.thread_overview.last_message ? he(F.thread_overview.last_message) : null,\n                createTimestamp: F.thread_overview.create_timestamp,\n                updateTimestamp: F.thread_overview.update_timestamp,\n                messageCount: F.thread_overview.message_count || 0\n              });\n            }\n            switch (P.type) {\n              case 0:\n                !(M = {\n                  id: g,\n                  type: y,\n                  contentsType: Ce[P.type],\n                  from: T,\n                  to: v,\n                  data: P.text,\n                  ext: L,\n                  sourceMsg: P.text,\n                  time: d,\n                  msgConfig: h.msgConfig,\n                  onlineState: m\n                }).msgConfig && delete h.msgConfig, M.error = U, M.errorText = k, M.errorCode = w, !r && this.onTextMessage && this.onTextMessage(M);\n                var W = {\n                  id: g,\n                  type: \"txt\",\n                  chatType: S,\n                  msg: P.text,\n                  to: v,\n                  from: T,\n                  ext: L,\n                  time: Number(d),\n                  onlineState: m\n                };\n                M.msgConfig && (W.msgConfig = M.msgConfig), D.length > 0 && (W.reactions = D), x && (W.chatThread = x), B && (W.chatThreadOverview = B), G.length > 0 && (W.translations = G), \"chatRoom\" === S && (W.priority = C), b = W, !r && this.eventHandler && this.eventHandler.dispatch(\"onTextMessage\", W);\n                break;\n              case 1:\n                var q = (null === (u = null == P ? void 0 : P.size) || void 0 === u ? void 0 : u.width) || 0,\n                  K = (null === (l = null == P ? void 0 : P.size) || void 0 === l ? void 0 : l.height) || 0;\n                H = this.useOwnUploadFun ? P.remotePath : (P.remotePath && this.apiUrl + P.remotePath.substr(P.remotePath.indexOf(\"/\", 9))) + \"?em-redirect=true\", P.secretKey && !this.useOwnUploadFun && (H = \"\".concat(H, \"&share-secret=\").concat(P.secretKey)), !(M = {\n                  id: g,\n                  type: y,\n                  contentsType: Ce[P.type],\n                  from: T,\n                  to: v,\n                  url: H,\n                  secret: P.secretKey,\n                  filename: P.displayName,\n                  thumb: this.useOwnUploadFun ? \"\" : \"\".concat(H, \"&thumbnail=true\"),\n                  thumb_secret: P.secretKey,\n                  file_length: P.fileLength || \"\",\n                  width: q,\n                  height: K,\n                  filetype: P.filetype || \"\",\n                  accessToken: this.token,\n                  ext: L,\n                  time: d,\n                  msgConfig: h.msgConfig,\n                  onlineState: m\n                }).delay && delete M.delay, !M.msgConfig && delete h.msgConfig, M.error = U, M.errorText = k, M.errorCode = w, !r && this.onPictureMessage && this.onPictureMessage(M);\n                var z = {\n                  id: g,\n                  type: \"img\",\n                  chatType: S,\n                  from: T,\n                  to: v,\n                  url: H || \"\",\n                  file: {},\n                  width: q,\n                  height: K,\n                  secret: P.secretKey || \"\",\n                  thumb: this.useOwnUploadFun ? \"\" : \"\".concat(H, \"&thumbnail=true\"),\n                  thumb_secret: P.secretKey,\n                  file_length: P.fileLength || 0,\n                  ext: L,\n                  time: Number(d),\n                  onlineState: m\n                };\n                M.msgConfig && (z.msgConfig = M.msgConfig), D.length > 0 && (z.reactions = D), x && (z.chatThread = x), B && (z.chatThreadOverview = B), \"chatRoom\" === S && (z.priority = C), b = z, !r && this.eventHandler && this.eventHandler.dispatch(\"onImageMessage\", z);\n                break;\n              case 2:\n                H = this.useOwnUploadFun ? P.remotePath : (P.remotePath && this.apiUrl + P.remotePath.substr(P.remotePath.indexOf(\"/\", 9))) + \"?em-redirect=true\", P.secretKey && !this.useOwnUploadFun && (H = \"\".concat(H, \"&share-secret=\").concat(P.secretKey)), !(M = {\n                  id: g,\n                  type: y,\n                  contentsType: Ce[P.type],\n                  from: T,\n                  to: v,\n                  url: H,\n                  secret: P.secretKey,\n                  filename: P.displayName,\n                  length: P.duration || \"\",\n                  file_length: P.fileLength || \"\",\n                  filetype: P.filetype || \"\",\n                  accessToken: this.token || \"\",\n                  ext: L,\n                  time: d,\n                  msgConfig: h.msgConfig,\n                  onlineState: m\n                }).delay && delete M.delay, !M.msgConfig && delete h.msgConfig, M.error = U, M.errorText = k, M.errorCode = w, !r && this.onVideoMessage && this.onVideoMessage(M);\n                var V = {\n                  id: g,\n                  type: \"video\",\n                  chatType: S,\n                  from: T,\n                  to: v,\n                  url: H,\n                  secret: P.secretKey,\n                  filename: P.displayName,\n                  length: P.duration || 0,\n                  file: {},\n                  file_length: P.fileLength || 0,\n                  filetype: P.filetype || \"\",\n                  accessToken: this.token || \"\",\n                  ext: L,\n                  time: Number(d),\n                  onlineState: m\n                };\n                M.msgConfig && (V.msgConfig = M.msgConfig), D.length > 0 && (V.reactions = D), x && (V.chatThread = x), B && (V.chatThreadOverview = B), \"chatRoom\" === S && (V.priority = C), b = V, !r && this.eventHandler && this.eventHandler.dispatch(\"onVideoMessage\", V);\n                break;\n              case 3:\n                !(M = {\n                  id: g,\n                  type: y,\n                  contentsType: Ce[P.type],\n                  from: T,\n                  to: v,\n                  addr: P.address,\n                  buildingName: P.buildingName,\n                  lat: P.latitude,\n                  lng: P.longitude,\n                  ext: L,\n                  time: d,\n                  msgConfig: h.msgConfig,\n                  onlineState: m\n                }).delay && delete M.delay, !M.msgConfig && delete h.msgConfig, M.error = U, M.errorText = k, M.errorCode = w, !r && this.onLocationMessage && this.onLocationMessage(M);\n                var X = {\n                  id: g,\n                  type: \"loc\",\n                  chatType: S,\n                  from: T,\n                  to: v,\n                  buildingName: P.buildingName,\n                  addr: P.address,\n                  lat: P.latitude,\n                  lng: P.longitude,\n                  ext: L,\n                  time: Number(d),\n                  onlineState: m\n                };\n                M.msgConfig && (X.msgConfig = M.msgConfig), D.length > 0 && (X.reactions = D), x && (X.chatThread = x), B && (X.chatThreadOverview = B), \"chatRoom\" === S && (X.priority = C), b = X, !r && this.eventHandler && this.eventHandler.dispatch(\"onLocationMessage\", X);\n                break;\n              case 4:\n                H = this.useOwnUploadFun ? P.remotePath : (P.remotePath && this.apiUrl + P.remotePath.substr(P.remotePath.indexOf(\"/\", 9))) + \"?em-redirect=true\", P.secretKey && !this.useOwnUploadFun && (H = \"\".concat(H, \"&share-secret=\").concat(P.secretKey)), !(M = {\n                  id: g,\n                  type: y,\n                  contentsType: Ce[P.type],\n                  from: T,\n                  to: v,\n                  url: H,\n                  secret: P.secretKey,\n                  filename: P.displayName,\n                  file_length: P.fileLength || \"\",\n                  accessToken: this.token || \"\",\n                  ext: L,\n                  length: P.duration,\n                  time: d,\n                  msgConfig: h.msgConfig,\n                  onlineState: m\n                }).delay && delete M.delay, !M.msgConfig && delete h.msgConfig, M.error = U, M.errorText = k, M.errorCode = w, !r && this.onAudioMessage && this.onAudioMessage(M);\n                var Y = {\n                  id: g,\n                  type: \"audio\",\n                  chatType: S,\n                  from: T,\n                  to: v,\n                  url: H,\n                  secret: P.secretKey,\n                  file: {},\n                  filename: P.displayName,\n                  length: P.duration || 0,\n                  file_length: P.fileLength || 0,\n                  filetype: P.filetype || \"\",\n                  accessToken: this.token || \"\",\n                  ext: L,\n                  time: Number(d),\n                  onlineState: m\n                };\n                M.msgConfig && (Y.msgConfig = M.msgConfig), D.length > 0 && (Y.reactions = D), x && (Y.chatThread = x), B && (Y.chatThreadOverview = B), \"chatRoom\" === S && (Y.priority = C), b = Y, !r && this.eventHandler && this.eventHandler.dispatch(\"onAudioMessage\", Y);\n                break;\n              case 5:\n                H = this.useOwnUploadFun ? P.remotePath : (P.remotePath && this.apiUrl + P.remotePath.substr(P.remotePath.indexOf(\"/\", 9))) + \"?em-redirect=true\", P.secretKey && !this.useOwnUploadFun && (H = \"\".concat(H, \"&share-secret=\").concat(P.secretKey)), !(M = {\n                  id: g,\n                  type: y,\n                  contentsType: Ce[P.type],\n                  from: T,\n                  to: v,\n                  url: H,\n                  secret: P.secretKey,\n                  filename: P.displayName,\n                  file_length: P.fileLength,\n                  accessToken: this.token || \"\",\n                  ext: L,\n                  time: d,\n                  msgConfig: h.msgConfig,\n                  onlineState: m\n                }).delay && delete M.delay, !M.msgConfig && delete h.msgConfig, M.error = U, M.errorText = k, M.errorCode = w, !r && this.onFileMessage && this.onFileMessage(M);\n                var Q = {\n                  id: g,\n                  type: \"file\",\n                  chatType: S,\n                  from: T,\n                  to: v,\n                  url: H,\n                  secret: P.secretKey,\n                  file: {},\n                  filename: P.displayName,\n                  length: P.duration || 0,\n                  file_length: P.fileLength || 0,\n                  filetype: P.filetype || \"\",\n                  accessToken: this.token || \"\",\n                  ext: L,\n                  time: Number(d),\n                  onlineState: m\n                };\n                M.msgConfig && (Q.msgConfig = M.msgConfig), D.length > 0 && (Q.reactions = D), x && (Q.chatThread = x), B && (Q.chatThreadOverview = B), \"chatRoom\" === S && (Q.priority = C), b = Q, !r && this.eventHandler && this.eventHandler.dispatch(\"onFileMessage\", Q);\n                break;\n              case 6:\n                if (!(M = {\n                  id: g,\n                  type: y,\n                  contentsType: Ce[P.type],\n                  from: T,\n                  to: v,\n                  action: P.action,\n                  ext: L,\n                  time: d,\n                  msgConfig: h.msgConfig,\n                  onlineState: m\n                }).msgConfig && delete h.msgConfig, M.error = U, M.errorText = k, M.errorCode = w, \"em_upload_log\" === P.action) return void (null === (p = null == j ? void 0 : j.getInstance()) || void 0 === p || p.uploadLogFile());\n                !r && this.onCmdMessage && this.onCmdMessage(M);\n                var $ = {\n                  id: g,\n                  type: \"cmd\",\n                  chatType: S,\n                  from: T,\n                  to: v,\n                  action: P.action,\n                  ext: L,\n                  time: Number(d),\n                  onlineState: m\n                };\n                M.msgConfig && ($.msgConfig = M.msgConfig), D.length > 0 && ($.reactions = D), x && ($.chatThread = x), B && ($.chatThreadOverview = B), \"chatRoom\" === S && ($.priority = C), b = $, !r && this.eventHandler && this.eventHandler.dispatch(\"onCmdMessage\", $);\n                break;\n              case 7:\n                var Z = {},\n                  ee = {};\n                h.contents[0].customExts && (Z = Ne(h.contents[0].customExts)), h.contents[0].params && (ee = Ne(h.contents[0].params)), M = {\n                  id: g,\n                  type: y,\n                  contentsType: Ce[P.type],\n                  from: T,\n                  to: v,\n                  customEvent: P.customEvent,\n                  params: ee,\n                  customExts: Z,\n                  ext: L,\n                  time: d,\n                  onlineState: m\n                }, !r && this.onCustomMessage && this.onCustomMessage(M);\n                var te = {\n                  id: g,\n                  type: \"custom\",\n                  chatType: S,\n                  from: T,\n                  to: v,\n                  customEvent: P.customEvent,\n                  params: ee,\n                  customExts: Z,\n                  ext: L,\n                  time: Number(d),\n                  onlineState: m\n                };\n                M.msgConfig && (te.msgConfig = M.msgConfig), D.length > 0 && (te.reactions = D), x && (te.chatThread = x), B && (te.chatThreadOverview = B), \"chatRoom\" === S && (te.priority = C), b = te, !r && this.eventHandler && this.eventHandler.dispatch(\"onCustomMessage\", te);\n                break;\n              default:\n                J.error(\"Unknow message type, message:\", P);\n            }\n            return o ? b : M;\n          }\n        },\n        be = [\"public\", \"members_only\", \"allow_user_invites\", \"invite_need_confirm\"],\n        Ue = {\n          name: \"name\",\n          title: \"name\",\n          description: \"description\",\n          public: \"public\",\n          members_only: \"approval\",\n          allow_user_invites: \"allowInvites\",\n          max_users: \"maxUsers\",\n          invite_need_confirm: \"inviteNeedConfirm\",\n          custom: \"ext\",\n          last_modified: \"lastModified\"\n        };\n      function we(e, t) {\n        var r,\n          o,\n          n,\n          i,\n          a,\n          s,\n          c = this,\n          u = this.context,\n          l = u.userId,\n          p = u.jid,\n          d = t.from.name === l && p.clientResource !== t.from.clientResource;\n        return t.isThread ? (n = {\n          id: t.mucId.name,\n          name: t.mucName,\n          operation: \"\",\n          parentId: t.mucParentId.name,\n          operator: t.from.name,\n          userName: t.to.length ? t.to[0].name : \"\"\n        }, i = {\n          chatThreadId: t.mucId.name,\n          chatThreadName: t.mucName,\n          operation: \"\",\n          parentId: t.mucParentId.name\n        }) : (o = {\n          type: \"\",\n          owner: t.from.name,\n          gid: t.mucId.name,\n          from: t.from.name,\n          fromJid: t.from,\n          to: t.to.length ? t.to[0].name : \"\",\n          toJid: t.to,\n          chatroom: t.isChatroom,\n          status: t.status\n        }, a = {\n          operation: \"\",\n          id: t.mucId.name,\n          from: t.from.name\n        }, t.isChatroom && (null === (r = null == t ? void 0 : t.eventInfo) || void 0 === r ? void 0 : r.ext) && (s = JSON.parse(t.eventInfo.ext))), ({\n          45: function _() {\n            var e, r, o;\n            a.operation = \"memberAttributesUpdate\";\n            var n = JSON.parse(null === (e = null == t ? void 0 : t.eventInfo) || void 0 === e ? void 0 : e.ext) || {};\n            a.attributes = n.properties || {}, a.userId = n.username || \"\", d ? null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onMultiDeviceEvent\", a) : null === (o = c.eventHandler) || void 0 === o || o.dispatch(\"onGroupEvent\", a);\n          },\n          44: function _() {\n            var e;\n            a.operation = \"removeChatRoomAttributes\", a.attributes = s.result.successKeys, s.result.successKeys.length > 0 && (null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomEvent\", a));\n          },\n          43: function _() {\n            var e;\n            a.operation = \"updateChatRoomAttributes\";\n            var t = {};\n            s.result.successKeys.forEach(function (e) {\n              t[e] = s.properties[e];\n            }), a.attributes = t, s.result.successKeys.length > 0 && (null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomEvent\", a));\n          },\n          42: function _() {},\n          41: function _() {},\n          40: function _() {},\n          39: function _() {},\n          38: function _() {\n            var e;\n            i.operation = \"chatThreadNameUpdate\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);\n          },\n          37: function _() {\n            var e;\n            n.operation = \"userRemove\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatThreadChange\", n);\n          },\n          36: function _() {\n            var e;\n            i.operation = \"chatThreadLeave\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);\n          },\n          35: function _() {\n            var e;\n            i.operation = \"chatThreadJoin\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);\n          },\n          34: function _() {\n            var e;\n            i.operation = \"chatThreadDestroy\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);\n          },\n          33: function _() {\n            var e;\n            i.operation = \"chatThreadCreate\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);\n          },\n          32: function _() {\n            var e, r, n, i;\n            o.type = t.isChatroom ? \"rmChatRoomMute\" : \"rmGroupMute\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"unmuteAllMembers\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          31: function _() {\n            var e, r, n, i;\n            o.type = t.isChatroom ? \"muteChatRoom\" : \"muteGroup\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"muteAllMembers\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          30: function _() {\n            var e, r, n, i;\n            o.type = t.isChatroom ? \"rmUserFromChatRoomWhiteList\" : \"rmUserFromGroupWhiteList\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"removeAllowlistMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          29: function _() {\n            var e, r, n, i;\n            o.type = t.isChatroom ? \"addUserToChatRoomWhiteList\" : \"addUserToGroupWhiteList\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"addUserToAllowlist\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          28: function _() {\n            var e, r, n, i;\n            o.type = \"deleteFile\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"deleteFile\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          27: function _() {\n            var e, r, n, i;\n            o.type = \"uploadFile\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"uploadFile\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          26: function _() {\n            var e, r, n, i;\n            o.type = \"deleteAnnouncement\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"deleteAnnouncement\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          25: function _() {\n            var e, r, n, i;\n            o.type = \"updateAnnouncement\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"updateAnnouncement\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          24: function _() {\n            var e, r, n, i;\n            o.type = \"removeMute\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"unmuteMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          23: function _() {\n            var e, r, n, i;\n            o.type = \"addMute\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"muteMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          22: function _() {\n            var e, r, n, i;\n            o.type = \"removeAdmin\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"removeAdmin\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          21: function _() {\n            var e, r, n, i;\n            o.type = \"addAdmin\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"setAdmin\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          20: function _() {\n            var e, r, n, i;\n            o.type = \"changeOwner\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"changeOwner\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          19: function _() {\n            var e, r, n, i;\n            o.type = \"direct_joined\", o.groupName = t.mucName, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"directJoined\", a.name = t.mucName, t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          18: function _() {\n            var e, r, n, i;\n            o.type = t.isChatroom ? \"leaveChatRoom\" : \"leaveGroup\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"memberAbsence\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          17: function _() {\n            var e, r, n, i;\n            o.type = t.isChatroom ? \"memberJoinChatRoomSuccess\" : \"memberJoinPublicGroupSuccess\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"memberPresence\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          16: function _() {\n            var e, r;\n            o.type = \"unblock\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);\n          },\n          15: function _() {\n            var e, r;\n            o.type = \"block\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);\n          },\n          14: function _() {\n            var e,\n              r,\n              n,\n              i,\n              s,\n              u = t.isChatroom;\n            if (!u) {\n              var l = JSON.parse((null === (e = null == t ? void 0 : t.eventInfo) || void 0 === e ? void 0 : e.ext) || \"{}\", function (e, t) {\n                return \"last_modified\" === e ? Number(t) : be.includes(e) ? \"true\" === t || !0 === t : t;\n              });\n              a.detail = o.detail = {}, Object.keys(l).forEach(function (e) {\n                var t = Ue[e];\n                if (t) {\n                  var r = l[e];\n                  a.detail && (a.detail[t] = r), o.detail && (o.detail[t] = r);\n                }\n              });\n            }\n            o.type = \"update\", c.onPresence && c.onPresence(o), u ? null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onChatroomChange\", o) : null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onGroupChange\", o), a.operation = \"updateInfo\", u ? null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onChatroomEvent\", a) : null === (s = c.eventHandler) || void 0 === s || s.dispatch(\"onGroupEvent\", a);\n          },\n          13: function _() {\n            var e, r, n, i;\n            o.type = \"allow\", o.reason = t.reason, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"unblockMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          12: function _() {\n            var e, r;\n            o.type = \"ban\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);\n          },\n          11: function _() {\n            var e, r;\n            o.type = \"getBlackList\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);\n          },\n          10: function _() {\n            var e, r, n, i;\n            o.type = \"removedFromGroup\", o.kicked = o.to, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"removeMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          9: function _() {\n            var e, r, n, i;\n            o.type = \"invite_decline\", o.kicked = o.to, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"rejectInvite\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          8: function _() {\n            var e, r, n, i;\n            o.type = \"invite_accept\", o.kicked = o.to, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"acceptInvite\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          7: function _() {\n            var e, r, n, i;\n            o.type = \"invite\", o.kicked = o.to, o.groupName = t.mucName, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"inviteToJoin\", a.name = t.mucName, t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          6: function _() {\n            var e, r, n, i;\n            o.type = \"joinPublicGroupDeclined\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"joinPublicGroupDeclined\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          5: function _() {\n            var e, r, n, i;\n            o.type = \"joinPublicGroupSuccess\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"acceptRequest\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          4: function _() {\n            var e, r, n, i;\n            o.type = \"joinGroupNotifications\", o.reason = t.reason, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"requestToJoin\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          3: function _() {\n            var e, r;\n            o.type = \"leave\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);\n          },\n          2: function _() {\n            var e, r;\n            o.type = \"join\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);\n          },\n          1: function _() {\n            var e, r, n, i;\n            o.type = \"deleteGroupChat\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"destroy\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);\n          },\n          0: function _() {\n            var e, r;\n            a.operation = \"create\", t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomEvent\", a) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupEvent\", a);\n          }\n        }[e] || function () {\n          __f__(\"error\", \"No match operation \".concat(e), \" at SDK/4.1.7-uniapp-log.js:1\");\n        })();\n      }\n      var ke,\n        Pe = function Pe(e) {\n          var t = this.root.lookup(\"easemob.pb.MUCBody\").decode(e.payload),\n            r = t.operation;\n          J.debug(\"onMucMessage\", t), we.call(this, r, t);\n        };\n      !function (e) {\n        e[e.Add = 2] = \"Add\", e[e.Remove = 3] = \"Remove\", e[e.Accept = 4] = \"Accept\", e[e.Decline = 5] = \"Decline\", e[e.Ban = 6] = \"Ban\", e[e.Allow = 7] = \"Allow\";\n      }(ke || (ke = {}));\n      var Le = {\n          operatRoster: function operatRoster(e, t, r, o) {\n            var n = [],\n              i = this.root.lookup(\"easemob.pb.RosterBody\"),\n              a = i.decode(n);\n            switch (t) {\n              case \"add\":\n                a.operation = ke.Add;\n                break;\n              case \"remove\":\n                a.operation = ke.Remove;\n                break;\n              case \"accept\":\n                a.operation = ke.Accept;\n                break;\n              case \"decline\":\n                a.operation = ke.Decline;\n                break;\n              case \"ban\":\n                a.operation = ke.Ban;\n                break;\n              case \"allow\":\n                a.operation = ke.Allow;\n                break;\n              default:\n                J.error(\"operatRoster:\", t);\n            }\n            a.from = this.context.jid;\n            var s = [];\n            if (\"string\" == typeof e.to) s.push({\n              appKey: this.appKey || this.context.appKey,\n              name: e.to,\n              domain: \"easemob.com\"\n            });else if (e.to instanceof Array) for (var c = 0; c < e.to.length; c++) {\n              s.push({\n                appKey: this.appKey,\n                name: e.to[c],\n                domain: \"easemob.com\"\n              });\n            }\n            a.to = s, a.reason = e.message || \"\", a = i.encode(a).finish();\n            var u = this.root.lookup(\"easemob.pb.Meta\").decode(n);\n            u.id = e.id || this.getUniqueId();\n            var l = this.dataReport.geOperateFun({\n              operationName: E[t]\n            });\n            I.size <= C && I.set(u.id, {\n              rpt: l,\n              requestName: E[t],\n              resolve: r,\n              reject: o\n            }), u.from = this.context.jid, u.to = {\n              domain: \"@easemob.com\"\n            }, u.ns = 3, u.payload = a;\n            var p = this.root.lookup(\"easemob.pb.CommSyncUL\"),\n              d = p.decode(n);\n            d.meta = u, d = p.encode(d).finish();\n            var h = this.root.lookup(\"easemob.pb.MSync\"),\n              f = h.decode(n);\n            if (f.version = this.version, f.encryptType = [0], f.command = 0, f.guid = this.jid, f.payload = d, f = h.encode(f).finish(), \"miniCore\" === this.name) this.sock.send(f);else {\n              var m = this.mSync.base64transform(f);\n              this.sock.send(m);\n            }\n          },\n          handleRosterMsg: function handleRosterMsg(e) {\n            var t,\n              r,\n              o,\n              n,\n              i,\n              a,\n              s = this.root.lookup(\"easemob.pb.RosterBody\").decode(e.payload),\n              c = {\n                type: \"\",\n                to: s.to[0].name,\n                from: s.from.name,\n                status: s.reason\n              };\n            switch (s.operation) {\n              case 2:\n                c.type = \"subscribe\", this.onContactInvited && this.onContactInvited(c), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onContactInvited\", c);\n                break;\n              case 3:\n                c.type = \"unsubscribed\", this.onContactDeleted && this.onContactDeleted(c), null === (r = this.eventHandler) || void 0 === r || r.dispatch(\"onContactDeleted\", c);\n                break;\n              case 4:\n                c.type = \"subscribed\", this.onContactAdded && this.onContactAdded(c), null === (o = this.eventHandler) || void 0 === o || o.dispatch(\"onContactAdded\", c);\n                break;\n              case 5:\n                c.type = \"unsubscribed\", this.onContactRefuse && this.onContactRefuse(c), null === (n = this.eventHandler) || void 0 === n || n.dispatch(\"onContactRefuse\", c);\n                break;\n              case 6:\n              case 7:\n                break;\n              case 8:\n                c.type = \"subscribed\", this.onContactAgreed && this.onContactAgreed(c), null === (i = this.eventHandler) || void 0 === i || i.dispatch(\"onContactAgreed\", c);\n                break;\n              case 9:\n                c.type = \"unsubscribed\", this.onContactRefuse && this.onContactRefuse(c), null === (a = this.eventHandler) || void 0 === a || a.dispatch(\"onContactRefuse\", c);\n                break;\n              default:\n                J.error(\"handleRosterMsg:\", s);\n            }\n            this.onPresence && c.type && this.onPresence(c);\n          }\n        },\n        De = function De(e) {\n          var t,\n            r,\n            o,\n            n,\n            i,\n            a,\n            s = this.root.lookup(\"easemob.pb.StatisticsBody\").decode(e.payload);\n          switch (s.operation) {\n            case 0:\n              this.onStatisticMessage && this.onStatisticMessage(s), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onStatisticMessage\", s);\n              break;\n            case 1:\n              a = m.create({\n                type: p.WEBIM_CONNCTION_USER_REMOVED,\n                message: \"user has been removed\"\n              }), this.logOut = !0, this.onError && this.onError(a), null === (r = this.eventHandler) || void 0 === r || r.dispatch(\"onError\", a);\n              break;\n            case 2:\n              a = m.create({\n                type: p.WEBIM_CONNCTION_USER_LOGIN_ANOTHER_DEVICE,\n                message: \"the user is already logged on another device\"\n              }), this.logOut = !0, this.onError && this.onError(a), null === (o = this.eventHandler) || void 0 === o || o.dispatch(\"onError\", a);\n              break;\n            case 3:\n              a = m.create({\n                type: p.WEBIM_CONNCTION_USER_KICKED_BY_CHANGE_PASSWORD,\n                message: \"the user was kicked by changing password\"\n              }), this.logOut = !0, this.onError && this.onError(a), null === (n = this.eventHandler) || void 0 === n || n.dispatch(\"onError\", a);\n              break;\n            case 4:\n              a = m.create({\n                type: p.WEBIM_CONNCTION_USER_KICKED_BY_OTHER_DEVICE,\n                message: \"the user was kicked by other device\"\n              }), this.logOut = !0, this.onError && this.onError(a), null === (i = this.eventHandler) || void 0 === i || i.dispatch(\"onError\", a);\n              break;\n            default:\n              J.error(\"handleStatisticsMsg:\", s);\n          }\n        };\n      function Ge(e) {\n        var t,\n          r = [],\n          o = [],\n          n = e.data;\n        n && n.values && n.values.forEach(function (e) {\n          Object.entries(e.status).forEach(function (e) {\n            o.push({\n              device: e[0],\n              status: Number(e[1])\n            });\n          }), r.push({\n            userId: e.uid,\n            lastTime: Number(e.last_time),\n            expire: Number(e.expiry),\n            ext: e.ext,\n            statusDetails: o\n          });\n        }), this.onPresenceStatusChange && this.onPresenceStatusChange(r), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onPresenceStatusChange\", r);\n      }\n      function xe(e) {\n        var t = this;\n        e.data.forEach(function (e) {\n          var r,\n            o = {\n              from: e.from,\n              to: e.to,\n              chatType: \"chat\" === e.channel_type ? \"singleChat\" : \"groupChat\",\n              messageId: e.messageId,\n              reactions: e.reactions,\n              ts: e.ts\n            };\n          null === (r = t.eventHandler) || void 0 === r || r.dispatch(\"onReactionChange\", o);\n        });\n      }\n      function Be(e) {\n        var t, r, o, n;\n        if (e.data) {\n          var i = e.data,\n            a = {\n              id: i.id || \"\",\n              name: i.name || \"\",\n              parentId: i.muc_parent_id || \"\",\n              messageId: i.msg_parent_id || \"\",\n              timestamp: i.timestamp || 0,\n              operator: i.from || \"\",\n              operation: \"\"\n            };\n          switch (i.operation) {\n            case \"create\":\n              a.operation = \"create\", a.createTimestamp = a.timestamp, a.messageCount = 0, null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onChatThreadChange\", a);\n              break;\n            case \"update_msg\":\n              a.operation = \"update\", a.messageCount = i.message_count, i.last_message && \"{}\" !== JSON.stringify(i.last_message) ? a.lastMessage = he(i.last_message) : \"{}\" === JSON.stringify(i.last_message) && (a.lastMessage = {}), null === (r = this.eventHandler) || void 0 === r || r.dispatch(\"onChatThreadChange\", a);\n              break;\n            case \"update\":\n              a.operation = \"update\", a.messageCount = i.message_count, null === (o = this.eventHandler) || void 0 === o || o.dispatch(\"onChatThreadChange\", a);\n              break;\n            case \"delete\":\n              a.operation = \"destroy\", null === (n = this.eventHandler) || void 0 === n || n.dispatch(\"onChatThreadChange\", a);\n          }\n        }\n      }\n      function He(e) {\n        var t,\n          r = e.data;\n        if (r.resource !== this.clientResource) {\n          var o = {\n            operation: \"deleteRoaming\",\n            conversationId: r.to,\n            chatType: \"chat\" === r.chatType ? \"singleChat\" : \"groupChat\",\n            resource: r.resource\n          };\n          null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onMultiDeviceEvent\", o);\n        }\n      }\n      function je(e) {\n        var t,\n          r = e.data,\n          o = {\n            operation: \"del\" === r.op ? \"deleteConversation\" : \"top\" === r.op ? \"pinnedConversation\" : \"unpinnedConversation\",\n            conversationId: r.id,\n            conversationType: \"chat\" === r.type ? \"singleChat\" : \"groupChat\",\n            timestamp: r.ts\n          };\n        this.clientResource !== r.res && (null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onMultiDeviceEvent\", o));\n      }\n      var Fe = function Fe(e) {\n          var t = ue.parseNotify(e.payload);\n          switch (t.type) {\n            case \"presence\":\n              Ge.call(this, t);\n              break;\n            case \"reaction\":\n              xe.call(this, t);\n              break;\n            case \"thread\":\n              Be.call(this, t);\n              break;\n            case \"roaming_delete\":\n              He.call(this, t);\n              break;\n            case \"conv\":\n              je.call(this, t);\n              break;\n            default:\n              J.error(\"unexpected notify type: \".concat(t.type));\n          }\n        },\n        _We = function We() {\n          return _We = Object.assign || function (e) {\n            for (var t, r = 1, o = arguments.length; r < o; r++) {\n              for (var n in t = arguments[r]) {\n                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n              }\n            }\n            return e;\n          }, _We.apply(this, arguments);\n        },\n        qe = ue.getEnvInfo();\n      function Ke() {\n        var e = \"webim\",\n          t = \"\",\n          r = \"\",\n          o = [],\n          n = new Date().valueOf();\n        \"webim\" === this.deviceId ? (r = \"random_\" + n.toString(), e = this.deviceId + \"_\" + r, t = this.deviceId) : e = t = r = \"webim_\" + this.deviceId, this.context.jid && (this.context.jid.clientResource = e);\n        var i = this.root.lookup(\"easemob.pb.Provision\"),\n          a = i.decode(o);\n        a.compressType = this.compressType, a.encryptType = this.encryptType, a.osType = this.osType, a.version = this.version, a.deviceName = t, a.resource = e, a.deviceUuid = r, a.auth = \"$t$\" + this.token, a.actionVersion = \"v2.0\", a = i.encode(a).finish();\n        var s = this.root.lookup(\"easemob.pb.MSync\"),\n          c = s.decode(o);\n        return c.version = this.version, c.guid = this.context.jid, c.auth = \"$t$\" + this.token, c.command = 3, c.deviceId = t, c.serviceId = this.dataReport.getServiceId(), c.encryptType = this.encryptType, c.payload = a, s.encode(c).finish();\n      }\n      function ze(e, t) {\n        var r = this,\n          o = ue.getEnvInfo();\n        if (\"web\" === o.platform || \"zfb\" === o.platform || \"dd\" === o.platform) {\n          for (var n = \"\", i = 0; i < e.length; i++) {\n            n += String.fromCharCode(e[i]);\n          }\n          return n = pe().btoa(n), \"web\" === o.platform ? n : {\n            data: n,\n            isBuffer: !1,\n            complete: function complete() {},\n            fail: function fail(e) {\n              \"sendSocketMessage:fail taskID not exist\" !== e.errMsg && \"SocketTast.send:fail SocketTask.readyState is not OPEN\" !== e.errMsg || (J.debug(\"send message fail and reconnect\"), r.reconnecting || r.reconnect()), t && r._msgHash && r._msgHash[t] && r._msgHash[t].fail({\n                id: t\n              });\n            }\n          };\n        }\n        var a = e;\n        return {\n          data: a.buffer.slice(a.byteOffset, a.byteOffset + a.byteLength),\n          fail: function fail(e) {\n            \"sendSocketMessage:fail taskID not exist\" !== e.errMsg && \"SocketTast.send:fail SocketTask.readyState is not OPEN\" !== e.errMsg || r.reconnecting || r.reconnect(), t && r._msgHash && r._msgHash[t] && r._msgHash[t].fail({\n              id: t\n            });\n          }\n        };\n      }\n      function Ve(e, t) {\n        switch (e.ns) {\n          case 0:\n            De.call(this, e);\n            break;\n          case 1:\n            Me.call(this, e, t);\n            break;\n          case 2:\n            Pe.call(this, e);\n            break;\n          case 3:\n            Le.handleRosterMsg.call(this, e);\n            break;\n          case 4:\n            this.registerConfrIQHandler && this.registerConfrIQHandler(e, t, this);\n            break;\n          case 5:\n            Fe.call(this, e);\n            break;\n          default:\n            J.error(\"distributeMeta\", e);\n        }\n      }\n      function Je(e, t) {\n        for (var r = function r(_r2) {\n            var n = new (f())(e[_r2].id.low, e[_r2].id.high, e[_r2].id.unsigned).toString();\n            if (o._load_msg_cache.some(function (e) {\n              return e.msgId === n;\n            })) return \"continue\";\n            var i = e[_r2].from.name,\n              a = e[_r2].to ? e[_r2].to.name : \"\",\n              s = !!e[_r2].to && -1 !== e[_r2].to.domain.indexOf(\"conference\");\n            o._load_msg_cache.length <= o.max_cache_length || o._load_msg_cache.shift(), o._load_msg_cache.push({\n              msgId: n,\n              from: i,\n              to: a,\n              isGroup: s\n            }), Ve.call(o, e[_r2], t);\n          }, o = this, n = 0; n < e.length; n++) {\n          r(n);\n        }\n      }\n      function Xe(e) {\n        var t = this.root.lookup(\"easemob.pb.CommUnreadDL\");\n        if (t = t.decode(e.payload), \"agoraToken\" === this.grantType) {\n          var r = new (f())(t.timestamp.low, t.timestamp.high, t.timestamp.unsigned).toString();\n          this.compareTokenExpireTime(Number(r), this.expirationTime);\n        }\n        if (0 === t.unread.length) nt.call(this);else for (var o = 0; o < t.unread.length; o++) {\n          $e.call(this, t.unread[o].queue);\n        }\n      }\n      function Ye() {\n        var e = [],\n          t = this.root.lookup(\"easemob.pb.StatisticsBody\"),\n          r = t.decode(e);\n        r.operation = 0, r = t.encode(r).finish();\n        var o = this.root.lookup(\"easemob.pb.Meta\").decode(e);\n        o.id = new Date().valueOf(), o.ns = 0, o.payload = r;\n        var n = this.root.lookup(\"easemob.pb.CommSyncUL\"),\n          i = n.decode(e);\n        i.meta = o, i = n.encode(i).finish();\n        var a = this.root.lookup(\"easemob.pb.MSync\"),\n          s = a.decode(e);\n        return s.version = this.version, s.encryptType = [0], s.command = 0, s.payload = i, a.encode(s).finish();\n      }\n      function Qe(e) {\n        var t = [],\n          r = this.root.lookup(\"easemob.pb.CommSyncUL\"),\n          o = r.decode(t);\n        o.queue = e, o = r.encode(o).finish();\n        var n = this.root.lookup(\"easemob.pb.MSync\"),\n          i = n.decode(t);\n        return i.version = this.version, i.encryptType = this.encryptType, i.command = 0, i.payload = o, n.encode(i).finish();\n      }\n      function $e(e) {\n        J.debug(\"sendBackqueue\");\n        var t = Qe.call(this, e);\n        _t.call(this, t);\n      }\n      function Ze(e, t) {\n        var r = [],\n          o = this.root.lookup(\"easemob.pb.CommSyncUL\"),\n          n = o.decode(r);\n        n.queue = t, n.key = new (f())(e.low, e.high, e.unsigned).toString(), n = o.encode(n).finish();\n        var i = this.root.lookup(\"easemob.pb.MSync\"),\n          a = i.decode(r);\n        return a.version = this.version, a.encryptType = this.encryptType, a.command = 0, a.payload = n, i.encode(a).finish();\n      }\n      function et(e, t) {\n        J.debug(\"sendLastSession\");\n        var r = Ze.call(this, e, t);\n        _t.call(this, r);\n      }\n      function rt(e) {\n        var t,\n          r,\n          o,\n          n,\n          i,\n          a,\n          s = this.root.lookup(\"easemob.pb.Provision\").decode(e.payload);\n        if (this.context.jid && (this.context.jid.clientResource = s.resource), this.clientResource = s.resource, 0 === s.status.errorCode) {\n          if (this.reconnecting = !1, this.logOut = !1, \"zfb\" !== qe.platform && \"dd\" !== qe.platform || (this.sock.readyState = 1), this.onOpened && this.onOpened(), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onConnected\"), \"agoraToken\" === this.grantType) {\n            var c = Date.now();\n            this.expiresIn = this.expirationTime - c, this.tokenExpireTimeCountDown(this.expiresIn);\n          }\n          ot.call(this), at.call(this), it.call(this), nt.call(this);\n        } else {\n          var u = void 0,\n            l = s.status.reason;\n          switch (l) {\n            case \"Sorry, the app day live count limit\":\n              u = m.create({\n                type: p.MAX_LIMIT,\n                message: \"Sorry, the daily active user limit for this app has been reached\"\n              }), null === (r = this.eventHandler) || void 0 === r || r.dispatch(\"onError\", u);\n              break;\n            case \"Sorry, the app online count limit\":\n              u = m.create({\n                type: p.MAX_LIMIT,\n                message: \"Sorry, the maximum number limit of online users for this app has been reached\"\n              }), null === (o = this.eventHandler) || void 0 === o || o.dispatch(\"onError\", u);\n              break;\n            case \"Sorry, the app month live count limit\":\n              u = m.create({\n                type: p.MAX_LIMIT,\n                message: \"Sorry, the monthly active user limit for this app has been reached\"\n              }), null === (n = this.eventHandler) || void 0 === n || n.dispatch(\"onError\", u);\n              break;\n            case \"Sorry, who are you?\":\n              u = m.create({\n                type: p.WEBIM_CONNCTION_AUTH_ERROR,\n                message: \"Auth failed\"\n              }), null === (i = this.eventHandler) || void 0 === i || i.dispatch(\"onError\", u);\n              break;\n            default:\n              u = m.create({\n                type: p.SERVER_UNKNOWN_ERROR,\n                message: l\n              }), null === (a = this.eventHandler) || void 0 === a || a.dispatch(\"onError\", u);\n          }\n        }\n      }\n      function ot() {\n        var e, t;\n        if ((null === (e = this.unMSyncSendMsgMap) || void 0 === e ? void 0 : e.size) > 0) {\n          for (var r = Array.from(this.unMSyncSendMsgMap.keys()), o = 0; o < r.length; o++) {\n            var n = this.unMSyncSendMsgMap.get(r[o]);\n            _t.call(this, n, r[o]);\n          }\n          null === (t = this.unMSyncSendMsgMap) || void 0 === t || t.clear();\n        }\n      }\n      function nt() {\n        var e = Ye.call(this);\n        _t.call(this, e);\n      }\n      function it() {\n        var e = ct.call(this);\n        _t.call(this, e);\n      }\n      function at() {\n        var e = this;\n        st.call(this), this.heartBeatID = setInterval(function () {\n          it.call(e);\n        }, this.heartBeatWait);\n      }\n      function st() {\n        clearInterval(this.heartBeatID);\n      }\n      function ct() {\n        var e = this.root.lookup(\"easemob.pb.MSync\"),\n          t = e.decode([]);\n        return t.version = this.version, t.encryptType = this.encryptType, t.command = 1, e.encode(t).finish();\n      }\n      function ut(e, t) {\n        return e.some(function (e) {\n          return e.name === t.name;\n        });\n      }\n      function lt(e) {\n        var t = this,\n          r = this.root.lookup(\"easemob.pb.CommNotice\"),\n          o = r.decode(e.payload),\n          n = ut(this._queues, o.queue);\n        J.debug(\"receive notice\", r, this._queues), n || this.clientResource === o.queue.clientResource && o.queue.name === this.context.userId || (this.qTimer && clearTimeout(this.qTimer), this.qTimer = setTimeout(function () {\n          var e = o.queue;\n          ut(t._queues, e) && ($e.call(t, e), J.debug(\"⬇q:\", e));\n        }, 1e4), this._queues.push(o.queue), 1 === this._queues.length && $e.call(this, o.queue));\n      }\n      function pt(e) {\n        if (\"string\" == typeof e) {\n          var t = JSON.parse(e);\n          if (Array.isArray(t)) {\n            var r = t[0],\n              o = t[1];\n            this.closeInfo = {\n              code: r,\n              reason: o\n            };\n          }\n        }\n      }\n      function dt(e) {\n        return t = this, r = void 0, n = function n() {\n          var t, r, o, n, i, a, s, c;\n          return function (e, t) {\n            var r,\n              o,\n              n,\n              i,\n              a = {\n                label: 0,\n                sent: function sent() {\n                  if (1 & n[0]) throw n[1];\n                  return n[1];\n                },\n                trys: [],\n                ops: []\n              };\n            return i = {\n              next: s(0),\n              throw: s(1),\n              return: s(2)\n            }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n              return this;\n            }), i;\n            function s(i) {\n              return function (s) {\n                return function (i) {\n                  if (r) throw new TypeError(\"Generator is already executing.\");\n                  for (; a;) {\n                    try {\n                      if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;\n                      switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {\n                        case 0:\n                        case 1:\n                          n = i;\n                          break;\n                        case 4:\n                          return a.label++, {\n                            value: i[1],\n                            done: !1\n                          };\n                        case 5:\n                          a.label++, o = i[1], i = [0];\n                          continue;\n                        case 7:\n                          i = a.ops.pop(), a.trys.pop();\n                          continue;\n                        default:\n                          if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                            a = 0;\n                            continue;\n                          }\n                          if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {\n                            a.label = i[1];\n                            break;\n                          }\n                          if (6 === i[0] && a.label < n[1]) {\n                            a.label = n[1], n = i;\n                            break;\n                          }\n                          if (n && a.label < n[2]) {\n                            a.label = n[2], a.ops.push(i);\n                            break;\n                          }\n                          n[2] && a.ops.pop(), a.trys.pop();\n                          continue;\n                      }\n                      i = t.call(e, a);\n                    } catch (e) {\n                      i = [6, e], o = 0;\n                    } finally {\n                      r = n = 0;\n                    }\n                  }\n                  if (5 & i[0]) throw i[1];\n                  return {\n                    value: i[0] ? i[1] : void 0,\n                    done: !0\n                  };\n                }([i, s]);\n              };\n            }\n          }(this, function (u) {\n            if (t = ue.getEnvInfo(), r = this.root.lookup(\"easemob.pb.MSync\"), \"miniCore\" === this.name) {\n              try {\n                e.data instanceof ArrayBuffer || (J.debug(\"received message: \".concat(e.data)), pt.call(this, e.data)), n = new Uint8Array(e.data), o = r.decode(n);\n              } catch (e) {\n                throw new Error(\"decode message fail.\");\n              }\n              return [2, o];\n            }\n            if (\"web\" === t.platform || \"zfb\" === t.platform || \"dd\" === t.platform) {\n              for ('[401,\"normal closed\"]' === e.data && (J.debug(\"received message: \".concat(e.data)), pt.call(this, e.data)), i = pe().atob(e.data), a = [], s = 0, c = i.length; s < c; ++s) {\n                a.push(i.charCodeAt(s));\n              }\n              return [2, r.decode(a)];\n            }\n            try {\n              e.data instanceof ArrayBuffer || (J.debug(\"received message: \".concat(e.data)), pt.call(this, e.data)), o = r.decode(e.data);\n            } catch (e) {\n              throw new Error(\"decode message fail.\");\n            }\n            return [2, o];\n          });\n        }, new ((o = void 0) || (o = Promise))(function (e, i) {\n          function a(e) {\n            try {\n              c(n.next(e));\n            } catch (e) {\n              i(e);\n            }\n          }\n          function s(e) {\n            try {\n              c(n.throw(e));\n            } catch (e) {\n              i(e);\n            }\n          }\n          function c(t) {\n            var r;\n            t.done ? e(t.value) : (r = t.value, r instanceof o ? r : new o(function (e) {\n              e(r);\n            })).then(a, s);\n          }\n          c((n = n.apply(t, r || [])).next());\n        });\n        var t, r, o, n;\n      }\n      function ht(e) {\n        var t = this;\n        e.then(function (e) {\n          if (e) switch (e.command) {\n            case 0:\n              ft.call(t, e);\n              break;\n            case 1:\n              Xe.call(t, e);\n              break;\n            case 2:\n              lt.call(t, e);\n              break;\n            case 3:\n              rt.call(t, e);\n              break;\n            default:\n              J.error(\"unexpected msync command: \".concat(e.command));\n          } else J.error(\"unexpected msync result: \".concat(e));\n        });\n      }\n      function ft(e) {\n        var t,\n          r,\n          o,\n          n,\n          i,\n          a,\n          s,\n          c,\n          u,\n          l,\n          d,\n          h,\n          g,\n          E,\n          y,\n          T,\n          _,\n          O = this.root.lookup(\"easemob.pb.CommSyncDL\");\n        O = O.decode(e.payload);\n        var R = new (f())(O.serverId.low, O.serverId.high, O.serverId.unsigned).toString(),\n          C = new (f())(O.metaId.low, O.metaId.high, O.metaId.unsigned).toString();\n        if (0 !== O.metas.length) try {\n          Je.call(this, O.metas, O.status);\n        } catch (e) {\n          var N = m.create({\n            type: p.WEBIM_LOAD_MSG_ERROR,\n            message: \"decode message error\",\n            data: e\n          });\n          this.onError && this.onError(N), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onError\", N);\n        } finally {\n          if (O.isLast) {\n            var A = -1;\n            this._queues.some(function (e, t) {\n              return e.name === O.name && (A = t, !0);\n            }) && A > 0 && this._queues.splice(A, 1), this._queues.length > 0 && ($e.call(this, this._queues[0]), this.qTimer && clearTimeout(this.qTimer));\n          } else et.call(this, O.nextKey, O.queue);\n        } else if (O.isLast) {\n          var M = -1;\n          this._queues.some(function (e, t) {\n            return e.name === O.queue.name && (M = t, !0);\n          }) && this._queues.splice(M, 1), this._queues.length > 0 && ($e.call(this, this._queues[0]), this.qTimer && clearTimeout(this.qTimer));\n        } else if (O.status && 0 === O.status.errorCode) {\n          if (this._queues.some(function (e, t) {\n            var r;\n            return e.name === (null === (r = O.queue) || void 0 === r ? void 0 : r.name) && !0;\n          }), G = I.get(C)) {\n            var b = G.rpt,\n              U = G.requestName,\n              w = G.resolve;\n            b({\n              isEndApi: !0,\n              data: {\n                isSuccess: 1,\n                requestName: U,\n                requestMethod: \"WEBSOCKET\",\n                requestUrl: this.url,\n                code: v.success\n              }\n            }), w(), I.delete(C);\n          }\n          var k = this._msgHash[C];\n          if (null == k ? void 0 : k.isHandleChatroom) {\n            try {\n              var P = \"join\" === (null === (r = this._msgHash[C]) || void 0 === r ? void 0 : r.operation);\n              (null === (o = this._msgHash[C]) || void 0 === o ? void 0 : o.resolve) instanceof Function && P && this._msgHash[C].resolve({\n                type: 0,\n                data: {\n                  action: \"apply\",\n                  id: this._msgHash[C].roomId,\n                  result: !0,\n                  user: this.context.userId\n                }\n              }), (null === (n = this._msgHash[C]) || void 0 === n ? void 0 : n.success) instanceof Function && P && this._msgHash[C].success({\n                type: 0,\n                data: {\n                  action: \"apply\",\n                  id: this._msgHash[C].roomId,\n                  result: !0,\n                  user: this.context.userId\n                }\n              }), (null === (i = this._msgHash[C]) || void 0 === i ? void 0 : i.resolve) instanceof Function && !P && this._msgHash[C].resolve({\n                type: 0,\n                data: {\n                  result: !0\n                }\n              }), (null === (a = this._msgHash[C]) || void 0 === a ? void 0 : a.success) instanceof Function && !P && this._msgHash[C].success({\n                type: 0,\n                data: {\n                  result: !0\n                }\n              });\n            } catch (e) {\n              N = m.create({\n                type: p.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,\n                message: \"when executing success function error\",\n                data: e\n              }), this.onError && this.onError(N), null === (s = this.eventHandler) || void 0 === s || s.dispatch(\"onError\", N);\n            }\n            delete this._msgHash[C];\n          }\n          if (k && !k.isHandleChatroom) {\n            S.has(C) && (S.get(C).rpt({\n              isEndApi: !0,\n              data: {\n                isSuccess: 1,\n                requestMethod: \"WEBSOCKET\",\n                requestUrl: this.url,\n                code: v.success,\n                msgId: R\n              }\n            }), S.delete(C));\n            try {\n              (null === (c = this._msgHash[C]) || void 0 === c ? void 0 : c.resolve) instanceof Function && this._msgHash[C].resolve({\n                localMsgId: C,\n                serverMsgId: R\n              }), (null === (u = this._msgHash[C]) || void 0 === u ? void 0 : u.success) instanceof Function && this._msgHash[C].success(C, R);\n            } catch (e) {\n              N = m.create({\n                type: p.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,\n                message: \"when executing success function error\",\n                data: e\n              }), this.onError && this.onError(N), null === (l = this.eventHandler) || void 0 === l || l.dispatch(\"onError\", N);\n            }\n            this.onReceivedMessage && this.onReceivedMessage({\n              id: C,\n              mid: R,\n              to: this._msgHash[C].to,\n              time: 0\n            }), null === (d = this.eventHandler) || void 0 === d || d.dispatch(\"onReceivedMessage\", {\n              id: C,\n              mid: R,\n              to: this._msgHash[C].to\n            }), delete this._msgHash[C];\n          }\n        } else if (O.status && 15 === O.status.errorCode) (null === (h = this._msgHash[C]) || void 0 === h ? void 0 : h.fail) instanceof Function && this._msgHash[C].fail({\n          type: p.SERVICE_NOT_ALLOW_MESSAGING_MUTE,\n          reason: \"you were muted\"\n        }), this._msgHash[C].reject instanceof Function && this._msgHash[C].reject({\n          type: p.SERVICE_NOT_ALLOW_MESSAGING_MUTE,\n          reason: \"you were muted\"\n        });else if (O.status && 1 === O.status.errorCode) {\n          var L = void 0;\n          switch (O.status.reason) {\n            case \"blocked\":\n              L = p.PERMISSION_DENIED;\n              break;\n            case \"group not found\":\n              L = p.GROUP_NOT_EXIST;\n              break;\n            case \"not in group or chatroom\":\n              L = p.GROUP_NOT_JOINED;\n              break;\n            case \"exceed recall time limit\":\n              L = p.MESSAGE_RECALL_TIME_LIMIT;\n              break;\n            case \"message recall disabled\":\n              L = p.SERVICE_NOT_ENABLED;\n              break;\n            case \"not in group or chatroom white list\":\n              L = p.SERVICE_NOT_ALLOW_MESSAGING;\n              break;\n            case \"nonroster\":\n              L = p.USER_NOT_FRIEND, O.status.reason = \"not contact\";\n              break;\n            case \"group is disabled\":\n              L = p.GROUP_IS_DISABLED, O.status.reason = \"group is disabled\";\n              break;\n            case \"limit directed users\":\n              L = p.MAX_LIMIT;\n              break;\n            default:\n              O.status.reason.includes(\"grpID\") && O.status.reason.includes(\"does not exist!\") ? (L = p.CHATROOM_NOT_EXIST, O.status.reason = \"The chat room dose not exist.\") : O.status.reason.includes(\"username\") && O.status.reason.includes(\"doesn't exist!\") ? L = p.USER_NOT_FOUND : \"group member list is full!\" === O.status.reason ? L = p.CHATROOM_MEMBERS_FULL : O.status.reason.includes(\"can not join this group\") && O.status.reason.includes(\"is in the blacklist\") ? (L = p.PERMISSION_DENIED, O.status.reason = \"permission denied\") : L = \"can not operate this group, reason: group is disabled\" === O.status.reason ? p.GROUP_IS_DISABLED : O.status.reason.includes(\"moderation\") ? p.MESSAGE_MODERATION_BLOCKED : p.SERVER_UNKNOWN_ERROR;\n          }\n          if (this._msgHash[C]) {\n            if (null === (g = this._msgHash[C]) || void 0 === g ? void 0 : g.isHandleChatroom) {\n              var D = m.create({\n                type: L,\n                message: O.status.reason || \"\",\n                data: \"\"\n              });\n              this._msgHash[C].reject instanceof Function && this._msgHash[C].reject(D), this._msgHash[C].error instanceof Function && this._msgHash[C].error(D);\n            } else D = m.create({\n              type: L,\n              message: O.status.reason || \"\",\n              data: {\n                id: C,\n                mid: R\n              }\n            }), this._msgHash[C].reject instanceof Function && this._msgHash[C].reject(D), this._msgHash[C].fail instanceof Function && this._msgHash[C].fail({\n              type: L,\n              reason: O.status.reason ? O.status.reason : \"\",\n              data: {\n                id: C,\n                mid: R\n              }\n            });\n            delete this._msgHash[C];\n          }\n        } else if (O.status && 7 === O.status.errorCode) \"sensitive words\" === O.status.reason && this._msgHash[C] ? (D = m.create({\n          type: p.MESSAGE_INCLUDE_ILLEGAL_CONTENT,\n          message: \"sensitive words\",\n          data: {\n            id: C,\n            mid: R\n          }\n        }), this._msgHash[C].reject instanceof Function && this._msgHash[C].reject(D), this._msgHash[C].fail instanceof Function && this._msgHash[C].fail({\n          type: p.MESSAGE_INCLUDE_ILLEGAL_CONTENT,\n          data: {\n            id: C,\n            mid: R,\n            reason: \"sensitive words\"\n          }\n        })) : \"blocked by mod_antispam\" === O.status.reason && this._msgHash[C] ? (D = m.create({\n          type: p.MESSAGE_INCLUDE_ILLEGAL_CONTENT,\n          message: \"blocked by mod_antispam\",\n          data: {\n            id: C,\n            mid: R\n          }\n        }), this._msgHash[C].reject instanceof Function && this._msgHash[C].reject(D), this._msgHash[C].fail instanceof Function && this._msgHash[C].fail({\n          type: p.MESSAGE_INCLUDE_ILLEGAL_CONTENT,\n          data: {\n            id: C,\n            mid: R,\n            reason: \"blocked by mod_antispam\"\n          }\n        })) : \"user is mute\" === O.status.reason && this._msgHash[C] ? (D = m.create({\n          type: p.USER_MUTED_BY_ADMIN,\n          message: \"user is mute\",\n          data: {\n            id: C,\n            mid: R\n          }\n        }), this._msgHash[C].reject instanceof Function && this._msgHash[C].reject(D), this._msgHash[C].fail instanceof Function && this._msgHash[C].fail(D)) : \"traffic limit\" === O.status.reason && this._msgHash[C] ? (D = m.create({\n          type: p.MESSAGE_CURRENT_LIMITING,\n          message: \"traffic limit\",\n          data: {\n            id: C,\n            mid: R\n          }\n        }), this._msgHash[C].reject instanceof Function && this._msgHash[C].reject(D), this._msgHash[C].fail instanceof Function && this._msgHash[C].fail(D)) : \"Sorry, data is too large\" === O.status.reason && this._msgHash[C] && (D = m.create({\n          type: p.MESSAGE_SIZE_LIMIT,\n          message: \"Sorry, data is too large\",\n          data: {\n            id: C,\n            mid: R\n          }\n        }), this._msgHash[C].reject instanceof Function && this._msgHash[C].reject(D), this._msgHash[C].fail instanceof Function && this._msgHash[C].fail(D));else if (O.status && 19 === O.status.errorCode) this._msgHash[C] && (S.has(C) && (S.get(C).rpt({\n          isEndApi: !0,\n          data: {\n            isSuccess: 0,\n            requestMethod: \"WEBSOCKET\",\n            requestUrl: this.url,\n            code: p.MESSAGE_EXTERNAL_LOGIC_BLOCKED,\n            codeDesc: O.status.reason || \"\",\n            msgId: R\n          }\n        }), S.delete(C)), D = m.create({\n          type: p.MESSAGE_EXTERNAL_LOGIC_BLOCKED,\n          message: O.status.reason || \"\",\n          data: {\n            id: C,\n            mid: R\n          }\n        }), this._msgHash[C].reject instanceof Function && this._msgHash[C].reject(D), this._msgHash[C].fail instanceof Function && this._msgHash[C].fail({\n          type: p.MESSAGE_EXTERNAL_LOGIC_BLOCKED,\n          data: {\n            id: C,\n            mid: R,\n            reason: O.status.reason\n          }\n        }));else if (this._msgHash[C]) {\n          S.has(C) && (S.get(C).rpt({\n            isEndApi: !0,\n            data: {\n              isSuccess: 0,\n              requestMethod: \"WEBSOCKET\",\n              requestUrl: this.url,\n              code: p.WEBIM_LOAD_MSG_ERROR,\n              codeDesc: (null === (E = O.status) || void 0 === E ? void 0 : E.reason) || \"\",\n              msgId: R\n            }\n          }), S.delete(C));\n          try {\n            D = m.create({\n              type: p.WEBIM_LOAD_MSG_ERROR,\n              message: (null === (y = O.status) || void 0 === y ? void 0 : y.reason) || \"\",\n              data: {\n                id: C,\n                mid: R,\n                reason: O.status && O.status.reason\n              }\n            }), this._msgHash[C].reject instanceof Function && this._msgHash[C].reject(D), this._msgHash[C].fail instanceof Function && this._msgHash[C].fail({\n              type: p.WEBIM_LOAD_MSG_ERROR,\n              data: {\n                errorCode: O.status && O.status.errorCode,\n                reason: O.status && O.status.reason\n              }\n            });\n          } catch (e) {\n            N = m.create({\n              type: p.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,\n              message: \"when executing fail function error\",\n              data: e\n            }), this.onError && this.onError(N), null === (T = this.eventHandler) || void 0 === T || T.dispatch(\"onError\", N);\n          }\n          delete this._msgHash[C];\n        } else {\n          var G;\n          S.has(C) && (S.get(C).rpt({\n            isEndApi: !0,\n            data: {\n              isSuccess: 0,\n              requestMethod: \"WEBSOCKET\",\n              requestUrl: this.url,\n              code: p.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,\n              codeDesc: \"on message error\",\n              msgId: R\n            }\n          }), S.delete(C)), (G = I.get(C)) && ((b = G.rpt)({\n            isEndApi: !0,\n            data: {\n              isSuccess: 0,\n              requestName: U = G.requestName,\n              requestMethod: \"WEBSOCKET\",\n              requestUrl: this.url,\n              code: v.failed,\n              codeDesc: \"on message error\"\n            }\n          }), I.delete(C)), N = m.create({\n            type: p.WEBIM_CONNCTION_CALLBACK_INNER_ERROR,\n            message: \"on message error\"\n          }), this.onError && this.onError(N), null === (_ = this.eventHandler) || void 0 === _ || _.dispatch(\"onError\", N);\n        }\n      }\n      function mt(e) {\n        var t = [],\n          r = this.root.lookup(\"easemob.pb.KeyValue\"),\n          o = [];\n        for (var n in e) {\n          var i = r.decode(t);\n          i.key = n, \"object\" == _typeof(e[n]) ? (i.type = 8, i.stringValue = JSON.stringify(e[n])) : \"string\" == typeof e[n] ? (i.type = 7, i.stringValue = e[n]) : \"boolean\" == typeof e[n] ? (i.type = 1, i.varintValue = !0 === e[n] ? 1 : 0) : Number.isInteger(e[n]) ? (i.type = 2, i.varintValue = e[n]) : (i.type = 6, i.doubleValue = e[n]), o.push(i);\n        }\n        return o;\n      }\n      function gt(e) {\n        var t,\n          r,\n          o,\n          n = [];\n        if (this.root) {\n          var i,\n            a = this.root.lookup(\"easemob.pb.MessageBody.Content\").decode(n);\n          switch (i = !e.group && \"groupchat\" !== (null === (t = null == e ? void 0 : e.chatType) || void 0 === t ? void 0 : t.toLowerCase()) || e.roomType ? e.group && e.roomType || \"chatroom\" === (null === (r = null == e ? void 0 : e.chatType) || void 0 === r ? void 0 : r.toLowerCase()) ? \"chatRoom\" : \"singleChat\" : \"groupChat\", e.type) {\n            case \"txt\":\n              a.type = 0, a.text = e.msg;\n              break;\n            case \"img\":\n              a.type = 1, e.body ? (a.displayName = e.body.filename, a.remotePath = e.body.url, a.secretKey = e.body.secret, a.fileLength = e.body.file_length, a.size = e.body.size, a.thumbnailDisplayName = e.body.filename) : e.file ? (a.displayName = e.file.filename, a.remotePath = e.file.url, a.secretKey = e.file.secret, a.fileLength = e.file.file_length, a.size = e.file.size, a.thumbnailDisplayName = e.file.filename) : (a.displayName = e.filename, a.remotePath = e.url, a.secretKey = e.secret, a.fileLength = e.file_length, a.size = e.size, a.thumbnailDisplayName = e.filename);\n              break;\n            case \"video\":\n              a.type = 2, a.displayName = e.body.filename, a.remotePath = e.body.url, a.secretKey = e.body.secret, a.fileLength = e.body.file_length, a.duration = e.body.length, a.thumbnailDisplayName = e.body.filename;\n              break;\n            case \"loc\":\n              a.type = 3, a.latitude = e.lat, a.longitude = e.lng, a.address = e.addr, a.buildingName = e.buildingName, a.latitude = e.lat;\n              break;\n            case \"audio\":\n              a.type = 4, a.displayName = e.body.filename, a.remotePath = e.body.url, a.secretKey = e.body.secret, a.fileLength = e.body.file_length, a.duration = e.body.length, a.thumbnailDisplayName = e.body.filename;\n              break;\n            case \"file\":\n              a.type = 5, a.displayName = e.body.filename, a.remotePath = e.body.url, a.secretKey = e.body.secret, a.fileLength = e.body.file_length, a.size = e.body.size, a.thumbnailDisplayName = e.body.filename;\n              break;\n            case \"cmd\":\n              a.type = 6, a.action = e.action;\n              break;\n            case \"custom\":\n              a.type = 7, a.customEvent = e.customEvent, a.customExts = mt.call(this, e.customExts);\n          }\n          var s = [];\n          e.ext && (s = mt.call(this, e.ext));\n          var c = this.root.lookup(\"easemob.pb.MessageBody\"),\n            u = c.decode(n);\n          u.from = {\n            name: this.context.jid.name\n          }, u.to = {\n            name: e.to\n          }, \"channel\" === e.type ? u.type = 7 : \"recall\" === e.type ? (u.type = 6, u.ackMessageId = e.ackId) : \"delivery\" === e.type ? (u.type = 5, u.ackMessageId = e.ackId) : \"read\" === e.type ? (u.type = 4, u.ackMessageId = e.ackId, \"groupChat\" === i && (u.msgConfig = {\n            allowGroupAck: !0\n          }, u.ackContent = e.ackContent)) : \"chatRoom\" === i ? u.type = 3 : \"groupChat\" === i ? (u.type = 2, e.msgConfig && (u.msgConfig = {\n            allowGroupAck: !0\n          })) : \"singleChat\" === i && (u.type = 1), u.contents = [a], u.ext = s;\n          var l = function (e) {\n            var t = {};\n            return \"translations\" in e && (t.translations = e.translations), \"isChatThread\" in e && e.isChatThread && (t.thread = {}), Object.keys(t).length > 0 ? JSON.stringify(t) : \"\";\n          }(e);\n          l && (u.meta = l), u = c.encode(u).finish();\n          var d = this.root.lookup(\"easemob.pb.Meta\").decode(n);\n          d.id = e.id;\n          var h = \"easemob.com\";\n          \"chatRoom\" !== i && \"groupChat\" !== i || (h = \"conference.easemob.com\"), d.to = {\n            appKey: this.appKey,\n            name: e.to,\n            domain: h\n          }, \"chatRoom\" === i && (d.ext = mt.call(this, function (e) {\n            return {\n              chatroom_msg_tag: \"high\" === e.priority ? 0 : \"low\" === e.priority ? 2 : 1\n            };\n          }(e))[0]), d.ns = 1, d.payload = u, d.routetype = e.deliverOnlineOnly ? 1 : 0, \"singleChat\" !== i && Array.isArray(e.receiverList) && (null === (o = e.receiverList) || void 0 === o ? void 0 : o.length) > 0 && (d.directedUsers = e.receiverList, d.routetype = 2, J.debug(\"receiverList:\", e.receiverList, \"thirdMessage\", d));\n          var f = this.root.lookup(\"easemob.pb.CommSyncUL\"),\n            m = f.decode(n);\n          m.meta = d, m = f.encode(m).finish();\n          var g = this.root.lookup(\"easemob.pb.MSync\"),\n            E = g.decode(n);\n          return E.version = this.version, E.encryptType = this.encryptType, E.command = 0, E.payload = m, g.encode(E).finish();\n        }\n        e.fail && e.fail({\n          type: p.WEBIM_CONNCTION_CLIENT_OFFLINE,\n          message: \"Not logged in\"\n        });\n      }\n      function Et(e) {\n        var t = this,\n          r = _We({}, e);\n        if (e.file) return r.accessToken = this.token, r.appKey = this.appKey, r.apiUrl = this.apiUrl, r.body && r.body.url ? gt.call(this, r) : new Promise(function (o, n) {\n          var i = r.onFileUploadComplete;\n          r.onFileUploadComplete = function (o) {\n            var n, a;\n            if (o.entities[0][\"file-metadata\"]) {\n              var s = o.entities[0][\"file-metadata\"][\"content-length\"];\n              r.file_length = s, r.filetype = o.entities[0][\"file-metadata\"][\"content-type\"], s > 204800 && (r.thumbnail = !0);\n            }\n            r.body = {\n              type: r.type || \"file\",\n              secret: o.entities[0][\"share-secret\"],\n              filename: r.file.filename || r.filename,\n              url: (t.isHttpDNS ? t.apiUrl + o.uri.substr(o.uri.indexOf(\"/\", 9)) : o.uri) + \"/\" + o.entities[0].uuid,\n              length: r.length || 0,\n              filetype: r.filetype || r.file.filetype,\n              file_length: (null === (a = null === (n = r.file) || void 0 === n ? void 0 : n.data) || void 0 === a ? void 0 : a.size) || 0,\n              size: {\n                width: r.width || 0,\n                height: r.height || 0\n              }\n            }, r.file.url = o.uri, e.secret = o.entities[0][\"share-secret\"];\n            var c = (t.isHttpDNS ? t.apiUrl + o.uri.substr(o.uri.indexOf(\"/\", 9)) : o.uri) + \"/\" + o.entities[0].uuid;\n            e.url = c, o.url = c, \"img\" === r.type && (e.thumb = \"\".concat(c, \"?thumbnail=true\"), o.thumb = \"\".concat(c, \"?thumbnail=true\")), i instanceof Function && i(o, r.id);\n            var u = gt.call(t, r);\n            S.size <= C && S.set(r.id, {\n              rpt: t.dataReport.geOperateFun({\n                operationName: E.SEND_MSG\n              })\n            }), _t.call(t, u);\n          }, ue.uploadFile.call(t, r, E.UPLOAD_MSG_ATTACH);\n        });\n        \"img\" === e.type && (r.body || (r.body = _We(_We({}, r), {\n          size: {\n            width: r.width || 0,\n            height: r.height || 0\n          }\n        })));\n        var o = gt.call(this, r);\n        _t.call(this, o);\n      }\n      function yt(e, t, r) {\n        var o = [],\n          n = this.root.lookup(\"easemob.pb.MUCBody\"),\n          i = n.decode(o);\n        i.mucId = {\n          appKey: this.appKey,\n          name: e,\n          domain: \"conference.easemob.com\"\n        }, i.operation = \"join\" === r ? 2 : 3, i.from = {\n          name: this.context.userId\n        }, i.isChatroom = !0, i = n.encode(i).finish();\n        var a = this.root.lookup(\"easemob.pb.Meta\").decode(o);\n        a.id = t, a.from = {\n          appKey: this.appKey,\n          name: this.context.userId,\n          domain: \"easemob.com\",\n          client_resource: this.context.jid.clientResource\n        }, a.to = {\n          domain: \"easemob.com\"\n        }, a.ns = 2, a.payload = i;\n        var s = this.root.lookup(\"easemob.pb.CommSyncUL\"),\n          c = s.decode(o);\n        c.meta = a, c = s.encode(c).finish();\n        var u = this.root.lookup(\"easemob.pb.MSync\"),\n          l = u.decode(o);\n        return l.version = this.version, l.encryptType = this.encryptType, l.command = 0, l.payload = c, u.encode(l).finish();\n      }\n      function Tt(e, t) {\n        var r = ue.getUniqueId(),\n          o = yt.call(this, e.roomId, r, t);\n        return _t.call(this, _We(_We({}, e), {\n          isHandleChatroom: !0,\n          joinMsg: o,\n          id: r,\n          operation: t\n        }), r);\n      }\n      function vt(e) {\n        var t = this;\n        return new Promise(function (r, o) {\n          var n, i;\n          if (J.debug(\"send message params\", e), t.logOut) return o({\n            type: p.WEBIM_CONNECTION_CLOSED,\n            message: \"not login\"\n          });\n          if (!e.id || \"string\" != typeof e.id || \"\" === e.id) return o({\n            type: p.MESSAGE_PARAMETER_ERROR,\n            message: 'Missing required parameter: \"id\"'\n          });\n          if (!e.to || \"string\" != typeof e.to || \"\" === e.to) return o({\n            type: p.MESSAGE_PARAMETER_ERROR,\n            message: 'Missing required parameter: \"to\"'\n          });\n          var a = \"file\" === e.type || \"img\" === e.type || \"audio\" === e.type || \"video\" === e.type,\n            s = \"delivery\" === e.type || \"read\" === e.type || \"channel\" === e.type;\n          if (e.id && ((!a && !s || a && t.useOwnUploadFun) && S.size <= C && S.set(e.id, {\n            rpt: t.dataReport.geOperateFun({\n              operationName: \"recall\" === e.type ? E.SEND_RECALL_MSG : E.SEND_MSG\n            })\n          }), t._msgHash[e.id] = _We(_We({}, e), {\n            resolve: r,\n            reject: o\n          })), a) return Et.call(t, e);\n          if (\"txt\" === e.type && (null === (n = e.msgConfig) || void 0 === n ? void 0 : n.languages) && Array.isArray(null === (i = e.msgConfig) || void 0 === i ? void 0 : i.languages) && e.msgConfig.languages.length > 0) {\n            var c = t.translateMessage || t.translation.translateMessage;\n            if (!c) throw new Error(\"there is no method to translate message\");\n            c({\n              text: e.msg,\n              languages: e.msgConfig.languages\n            }).then(function (r) {\n              var o,\n                n = null === (o = r.data[0]) || void 0 === o ? void 0 : o.translations;\n              n = n.map(function (e) {\n                return {\n                  code: e.to,\n                  text: e.text\n                };\n              }), e.translations = n;\n              var i = gt.call(t, e);\n              _t.call(t, i, e.id);\n            }).catch(function (e) {\n              o(e);\n            });\n          } else {\n            var u = gt.call(t, e);\n            _t.call(t, u, e.id);\n          }\n        }).catch(function (e) {\n          throw J.debug(\"send message error\", e), e;\n        });\n      }\n      function _t(e, t) {\n        var r,\n          o,\n          n = this;\n        if (e.isHandleChatroom) {\n          if (!this.isOpened()) {\n            var i = {\n              data: \"\",\n              type: p.WEBIM_CONNCTION_DISCONNECTED,\n              message: \"websocket has been disconnected\"\n            };\n            return Promise.reject(i);\n          }\n          return new Promise(function (r, o) {\n            var i;\n            n._msgHash[e.id] = _We(_We({}, e), {\n              resolve: r,\n              reject: o\n            }), i = \"miniCore\" === n.name ? e.joinMsg : ze.call(n, e.joinMsg, t), n.sock.send(i);\n          });\n        }\n        if (!this.isOpened()) return null === (r = this.unMSyncSendMsgMap) || void 0 === r || r.set(t, e), !this.logOut && this.autoReconnectNumTotal < this.autoReconnectNumMax && (this.autoReconnectNumTotal <= this.socketHost.length && this.isHttpDNS || !this.isHttpDNS) && (J.debug(\"need to reconnect\", this.autoReconnectNumTotal, this.autoReconnectNumMax), this.offLineSendConnecting = !0, this.reconnecting || this.reconnect()), void (this.onError && this.onError({\n          type: p.WEBIM_CONNCTION_DISCONNECTED,\n          message: \"websocket has been disconnected\"\n        }));\n        o = \"miniCore\" === this.name ? e : ze.call(this, e, t), this.sock.send(o);\n      }\n      var Ot = function Ot(e, t) {\n          return e.send = vt, e.sendMsg = vt, J.debug(\"init Msync by \".concat(e.name)), {\n            generateProvision: Ke.bind(e),\n            base64transform: ze.bind(e),\n            distributeMeta: Ve.bind(e),\n            decodeMeta: Je.bind(e),\n            decodeUnreadDL: Xe.bind(e),\n            _rebuild: Ye.bind(e),\n            _lastsession: Ze.bind(e),\n            receiveProvision: rt.bind(e),\n            isInQueue: ut.bind(e),\n            decodeNotice: lt.bind(e),\n            decodeMSync: dt.bind(e),\n            distributeMSync: ht.bind(e),\n            encodeChatMsg: gt.bind(e),\n            upLoadFile: Et.bind(e),\n            send: vt.bind(e),\n            stopHeartBeat: st.bind(e),\n            handleChatRoom: Tt.bind(e)\n          };\n        },\n        Rt = function () {\n          function e(e, t, r) {\n            this.handlerData = {}, this.handlerData = {}, e.addEventHandler = this.addEventHandler.bind(this), e.removeEventHandler = this.removeEventHandler.bind(this);\n          }\n          return e.prototype.addEventHandler = function (e, t) {\n            this.handlerData[e] = t;\n          }, e.prototype.removeEventHandler = function (e) {\n            delete this.handlerData[e];\n          }, e.prototype.dispatch = function (e, t) {\n            for (var r in J.debug(\"dispatch event: \" + e, t || \"\"), this.handlerData) {\n              var o = this.handlerData[r][e];\n              o && o(t);\n            }\n          }, e;\n        }(),\n        It = function It() {};\n      function St(e) {\n        this.onOpened = e.onOpened || It, this.onPresence = e.onPresence || It, this.onTextMessage = e.onTextMessage || It, this.onPictureMessage = e.onPictureMessage || It, this.onAudioMessage = e.onAudioMessage || It, this.onVideoMessage = e.onVideoMessage || It, this.onFileMessage = e.onFileMessage || It, this.onLocationMessage = e.onLocationMessage || It, this.onCmdMessage = e.onCmdMessage || It, this.onCustomMessage = e.onCustomMessage || It, this.onReceivedMessage = e.onReceivedMessage || It, this.onDeliveredMessage = e.onDeliveredMessage || It, this.onReadMessage = e.onReadMessage || It, this.onRecallMessage = e.onRecallMessage || It, this.onChannelMessage = e.onChannelMessage || It, this.onError = e.onError || It, this.onOffline = e.onOffline || It, this.onOnline = e.onOnline || It, this.onStatisticMessage = e.onStatisticMessage || It, this.onContactInvited = e.onContactInvited || It, this.onContactAgreed = e.onContactAgreed || It, this.onContactRefuse = e.onContactRefuse || It, this.onContactDeleted = e.onContactDeleted || It, this.onContactAdded = e.onContactAdded || It, this.onTokenWillExpire = e.onTokenWillExpire || It, this.onTokenExpired = e.onTokenExpired || It, this.onClosed = e.onClosed || It, this.onPresenceStatusChange = e.onPresenceStatusChange || It;\n      }\n      var Ct = {\n          biz: \"\",\n          debug: !1,\n          token: \"\"\n        },\n        Nt = \"https://data-reporting.agora.io/report\",\n        At = \"https://data-reporting.sh.agoralab.co/report\",\n        Mt = function Mt(e) {\n          var t = Number(g[e]);\n          return t === g.USER_LOGIN ? \"MANUALLOGIN\" : t === g.MSYNC_SENDMESSAGE ? \"SENDMESSAGE\" : t > g.UNKNOWOPERATION && t < g.REST_OPERATE ? \"REST\" : t > g.REST_OPERATE && t < g.MSYNC_OPERATE ? \"MESSAGE\" : t > g.MSYNC_OPERATE && t < g.ROSTER_OPERATE ? \"ROSTER\" : t > g.ROSTER_OPERATE && t < g.USER_OPERATE ? \"USER\" : t > g.USER_OPERATE && t < g.GROUP_OPERATE ? \"GROUP\" : t > g.GROUP_OPERATE && t < g.CHATROOM_OPERATE ? \"CHATROOM\" : \"OPERATION\";\n        },\n        bt = function bt() {\n          return new Date().getTime();\n        },\n        Ut = function Ut(e) {\n          return [re.BAIDU, re.WX, re.DD, re.ZFB, re.TT, re.QUICK_APP, re.UNI].includes(e.platform);\n        },\n        wt = function wt() {\n          return e = 1, t = 99999, e = Math.ceil(e), t = Math.floor(t), Math.floor(Math.random() * (t - e)) + e;\n          var e, t;\n        },\n        kt = {},\n        Pt = 1e3,\n        Lt = function () {\n          function e(e) {\n            this.eventQueue = [], this.stock = Pt, this.config = e, this.governor();\n          }\n          return e.prototype.add = function (e) {\n            this.stock <= 0 ? __f__(\"warn\", \"Event Report limit \".concat(Pt, \" per minute\"), \" at SDK/4.1.7-uniapp-log.js:1\") : (this.eventQueue.push(e), this.consume(), this.stock -= 1);\n          }, e.prototype.consume = function () {\n            var e = this;\n            0 !== this.eventQueue.length && (this.timer && this.eventQueue.length <= 10 && clearTimeout(this.timer), this.timer = setTimeout(function () {\n              var t,\n                r = e.eventQueue.splice(0, 10),\n                o = r.filter(function (e) {\n                  return e.appId === r[0].appId;\n                }),\n                n = r.filter(function (e) {\n                  return e.appId !== r[0].appId;\n                });\n              (t = e.eventQueue).unshift.apply(t, n), e.batchSend(o);\n            }, 1e3));\n          }, e.prototype.governor = function () {\n            var e = this,\n              t = setInterval(function () {\n                e.stock = Pt;\n              }, 6e4);\n            \"undefined\" != typeof addEventListener && addEventListener(\"beforeunload\", function () {\n              clearInterval(t);\n            });\n          }, e.prototype.batchSend = function (e) {\n            var t, r;\n            if (void 0 === e && (e = []), 0 !== e.length) try {\n              var o = e.map(function (e) {\n                e.biz, e.appId;\n                var t = e.eventId,\n                  r = function (e, t) {\n                    var r = {};\n                    for (var o in e) {\n                      Object.prototype.hasOwnProperty.call(e, o) && t.indexOf(o) < 0 && (r[o] = e[o]);\n                    }\n                    if (null != e && \"function\" == typeof Object.getOwnPropertySymbols) {\n                      var n = 0;\n                      for (o = Object.getOwnPropertySymbols(e); n < o.length; n++) {\n                        t.indexOf(o[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, o[n]) && (r[o[n]] = e[o[n]]);\n                      }\n                    }\n                    return r;\n                  }(e, [\"biz\", \"appId\", \"eventId\"]);\n                return {\n                  eventId: Number(t),\n                  body: r\n                };\n              });\n              !function (e, t) {\n                try {\n                  var r = t.biz,\n                    o = t.appId,\n                    n = t.data,\n                    i = t.debug,\n                    a = t.onSuccess;\n                  if (!r) throw new Error(\"biz is not defined\");\n                  kt.global || (kt = ue.getEnvInfo());\n                  var s = kt;\n                  if (Ut(s)) {\n                    var c = {\n                        url: i ? At : Nt,\n                        data: n,\n                        method: \"POST\",\n                        success: function success() {\n                          null == a || a();\n                        },\n                        fail: function fail() {},\n                        complete: function complete() {}\n                      },\n                      u = {\n                        token: e,\n                        appid: null != o ? o : \"\",\n                        sendts: \"\".concat(Math.floor(new Date().getTime() / 1e3)),\n                        biz: r,\n                        debug: \"\".concat(i)\n                      };\n                    if (\"zfb\" === s.platform || \"dd\" === s.platform ? c.headers = u : c.header = u, \"dd\" === s.platform) return s.global.httpRequest(c);\n                    s.global.request(c);\n                  } else {\n                    var l = new XMLHttpRequest();\n                    l.onreadystatechange = function () {\n                      2 === l.readyState && (null == a || a());\n                    }, l.open(\"POST\", i ? At : Nt), l.setRequestHeader(\"Content-Type\", \"application/json\"), l.setRequestHeader(\"token\", e), l.setRequestHeader(\"appid\", null != o ? o : \"\"), l.setRequestHeader(\"sendts\", \"\".concat(Math.floor(new Date().getTime() / 1e3))), l.setRequestHeader(\"biz\", r), l.setRequestHeader(\"debug\", \"\".concat(i)), l.send(JSON.stringify(n));\n                  }\n                } catch (e) {\n                  __f__(\"error\", e, \" at SDK/4.1.7-uniapp-log.js:1\");\n                }\n              }(this.config.token, {\n                biz: null === (t = e[0]) || void 0 === t ? void 0 : t.biz,\n                appId: null === (r = e[0]) || void 0 === r ? void 0 : r.appId,\n                data: o,\n                debug: this.config.debug,\n                onSuccess: this.consume.bind(this)\n              });\n            } catch (e) {\n              __f__(\"error\", e, \" at SDK/4.1.7-uniapp-log.js:1\");\n            }\n          }, e;\n        }(),\n        _Dt = function Dt() {\n          return _Dt = Object.assign || function (e) {\n            for (var t, r = 1, o = arguments.length; r < o; r++) {\n              for (var n in t = arguments[r]) {\n                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n              }\n            }\n            return e;\n          }, _Dt.apply(this, arguments);\n        },\n        Gt = new (function () {\n          function e(e) {\n            this.inited = !1, this.appId = \"\", this.biz = \"\", this.eventQueue = {}, this.config = Ct, e && this.init(e);\n          }\n          return e.prototype.init = function (e) {\n            var t;\n            if (void 0 === e && (e = {}), !e.biz || !e.token) throw new Error(\"Event Report: biz or token is not defined\");\n            try {\n              this.appId = null !== (t = e.appId) && void 0 !== t ? t : \"\", this.biz = e.biz, this.config = _Dt(_Dt({}, Ct), e), this.eventQueue = new Lt(this.config), this.log(e), this.inited = !0;\n            } catch (e) {\n              __f__(\"error\", e, \" at SDK/4.1.7-uniapp-log.js:1\");\n            }\n          }, e.prototype.send = function (e, t, r) {\n            var o;\n            if (void 0 === t && (t = {}), this.inited) {\n              var n = _Dt(_Dt({}, t), {\n                eventId: Number(e),\n                biz: this.biz,\n                appId: null !== (o = null == r ? void 0 : r.appId) && void 0 !== o ? o : this.appId\n              });\n              this.eventQueue.add(n), this.log(n);\n            } else __f__(\"error\", \"Event Report: init is not called\", \" at SDK/4.1.7-uniapp-log.js:1\");\n          }, e.prototype.log = function (e) {\n            try {\n              if (this.config.debug) {\n                var t = e.payload,\n                  r = function (e, t) {\n                    var r = {};\n                    for (var o in e) {\n                      Object.prototype.hasOwnProperty.call(e, o) && t.indexOf(o) < 0 && (r[o] = e[o]);\n                    }\n                    if (null != e && \"function\" == typeof Object.getOwnPropertySymbols) {\n                      var n = 0;\n                      for (o = Object.getOwnPropertySymbols(e); n < o.length; n++) {\n                        t.indexOf(o[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, o[n]) && (r[o[n]] = e[o[n]]);\n                      }\n                    }\n                    return r;\n                  }(e, [\"payload\"]);\n                __f__(\"log\", \"%c Event Report: \".concat(this.config.biz, \" \"), \"background: #8A97FC; color: #fff\", \" at SDK/4.1.7-uniapp-log.js:1\"), console.table(r), t && (__f__(\"info\", \"payload:\", \" at SDK/4.1.7-uniapp-log.js:1\"), console.table(t));\n              }\n            } catch (e) {\n              __f__(\"error\", e, \" at SDK/4.1.7-uniapp-log.js:1\");\n            }\n          }, e;\n        }())(),\n        _xt = function xt() {\n          return _xt = Object.assign || function (e) {\n            for (var t, r = 1, o = arguments.length; r < o; r++) {\n              for (var n in t = arguments[r]) {\n                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n              }\n            }\n            return e;\n          }, _xt.apply(this, arguments);\n        },\n        Bt = {\n          requestName: \"\",\n          subrequestid: \"1\",\n          requestMethod: \"GET\",\n          requestUrl: \"\",\n          requestElapse: 0,\n          code: 0,\n          codeDesc: \"\",\n          isLastApi: 0,\n          isSuccess: 1\n        },\n        Ht = function () {\n          function e(e) {\n            this.platform = ue.getEnvInfo(), this.isReportDt = e.isReport || !1, this.isCollectDt = !0, Ut(this.platform) && !this.isReportDt && (this.isCollectDt = !1), this.eventQueue = [], this.accessChannel = \"direct\", this.options = function (e, t) {\n              t.platform || (t = ue.getEnvInfo());\n              var r = e.org,\n                o = e.appkey,\n                n = e.deviceId,\n                i = e.sdkVersion,\n                a = (null === navigator || void 0 === navigator ? void 0 : navigator.userAgent) || \"\".concat(t.platform, \"_mini_program\");\n              return {\n                org: r,\n                appkey: o,\n                deviceId: n,\n                sdkServiceId: \"sid_\".concat(ue.getUniqueId(), \"_\").concat(wt()),\n                did: a,\n                sdkVersion: i,\n                os: 7,\n                sdkProduct: _.web\n              };\n            }(e, this.platform), this.sid = this.options.sdkServiceId, this.init(e);\n          }\n          return e.getInstance = function () {\n            return e.instance;\n          }, e.prototype.getServiceId = function () {\n            return this.sid || \"sid_0\";\n          }, e.prototype.setIsReportDt = function (e) {\n            this.isReportDt = e, e && this.rptEventQueue();\n          }, e.prototype.setIsCollectDt = function (e) {\n            this.isCollectDt = e, e || (this.eventQueue = []);\n          }, e.prototype.rptEventQueue = function () {\n            var e = this;\n            this.eventQueue.length && this.eventQueue.forEach(function (t, r) {\n              Gt.send(t.eventId, t.dt), r >= e.eventQueue.length - 1 && (e.eventQueue = []);\n            });\n          }, e.prototype.init = function (t) {\n            e.instance || (e.instance = this, Gt.init({\n              biz: \"im\",\n              token: \"32f24ab2ddb74f508aa9286c356cec84\",\n              appId: t.appkey,\n              debug: !1\n            }), this.reportInit());\n          }, e.prototype.reportInit = function () {\n            if (this.isCollectDt) {\n              var e = this.options,\n                t = e.did,\n                r = e.os,\n                o = e.sdkVersion,\n                n = e.deviceId;\n              this.reportData(9674, {\n                did: t,\n                os: r,\n                sdkVersion: o,\n                deviceId: n\n              });\n            }\n          }, e.prototype.geOperateFun = function (e) {\n            var t = this;\n            if (!this.isCollectDt) return function () {};\n            var r = 1,\n              o = 0,\n              n = \"\",\n              i = bt(),\n              a = e.uid,\n              s = e.operationName;\n            a && (this.uid = a);\n            var c = {\n              uid: this.uid,\n              operationId: \"opr_\".concat(ue.getUniqueId(), \"_\").concat(wt()),\n              requestid: \"req_\".concat(ue.getUniqueId(), \"_\").concat(wt()),\n              operationName: s\n            };\n            return function (e) {\n              var a, u, l, p;\n              if (e.data.isSuccess ? (o = 0, n = \"\") : (0 === e.data.code && (e.data.code = A), o = null !== (a = e.data.code) && void 0 !== a ? a : o, n = null !== (u = e.data.codeDesc) && void 0 !== u ? u : n), (null === (l = e.data) || void 0 === l ? void 0 : l.accessChannel) && (t.accessChannel = null === (p = e.data) || void 0 === p ? void 0 : p.accessChannel), e.isRetry ? (r++, e.data.subrequestid = \"\".concat(r)) : (c.requestid = \"req_\".concat(ue.getUniqueId(), \"_\").concat(wt()), r = 1), e.data.isLastApi) {\n                var d = bt();\n                e.data.requestElapse = d - i, e.data.requestMethod = \"\", e.data.subrequestid = \"0\", e.data.code = 200 === o ? 0 : o, e.data.codeDesc = n;\n              } else e.data.requestName || (e.data.requestName = s);\n              e.data.requestElapse || (e.data.requestElapse = bt() - i), t.reportData.call(t, N, _xt(_xt(_xt(_xt({}, Bt), c), e.data), {\n                accessChannel: t.accessChannel,\n                operationType: Mt(s)\n              })), e.isEndApi && t.reportData.call(t, N, _xt(_xt(_xt({}, c), Bt), {\n                isSuccess: e.data.isSuccess,\n                isLastApi: 1,\n                subrequestid: \"0\",\n                requestMethod: \"\",\n                code: 200 === o ? 0 : o,\n                codeDesc: n,\n                requestElapse: e.data.requestElapse,\n                accessChannel: t.accessChannel,\n                operationType: Mt(s)\n              }));\n            };\n          }, e.prototype.reportData = function (e, t) {\n            return r = this, o = void 0, i = function i() {\n              var r, o, n, i, a, s, c, u;\n              return function (e, t) {\n                var r,\n                  o,\n                  n,\n                  i,\n                  a = {\n                    label: 0,\n                    sent: function sent() {\n                      if (1 & n[0]) throw n[1];\n                      return n[1];\n                    },\n                    trys: [],\n                    ops: []\n                  };\n                return i = {\n                  next: s(0),\n                  throw: s(1),\n                  return: s(2)\n                }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n                  return this;\n                }), i;\n                function s(i) {\n                  return function (s) {\n                    return function (i) {\n                      if (r) throw new TypeError(\"Generator is already executing.\");\n                      for (; a;) {\n                        try {\n                          if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;\n                          switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {\n                            case 0:\n                            case 1:\n                              n = i;\n                              break;\n                            case 4:\n                              return a.label++, {\n                                value: i[1],\n                                done: !1\n                              };\n                            case 5:\n                              a.label++, o = i[1], i = [0];\n                              continue;\n                            case 7:\n                              i = a.ops.pop(), a.trys.pop();\n                              continue;\n                            default:\n                              if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                                a = 0;\n                                continue;\n                              }\n                              if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {\n                                a.label = i[1];\n                                break;\n                              }\n                              if (6 === i[0] && a.label < n[1]) {\n                                a.label = n[1], n = i;\n                                break;\n                              }\n                              if (n && a.label < n[2]) {\n                                a.label = n[2], a.ops.push(i);\n                                break;\n                              }\n                              n[2] && a.ops.pop(), a.trys.pop();\n                              continue;\n                          }\n                          i = t.call(e, a);\n                        } catch (e) {\n                          i = [6, e], o = 0;\n                        } finally {\n                          r = n = 0;\n                        }\n                      }\n                      if (5 & i[0]) throw i[1];\n                      return {\n                        value: i[0] ? i[1] : void 0,\n                        done: !0\n                      };\n                    }([i, s]);\n                  };\n                }\n              }(this, function (l) {\n                switch (l.label) {\n                  case 0:\n                    return l.trys.push([0, 3,, 4]), r = bt(), o = 0, e !== N ? [3, 2] : [4, (p = this.platform, new Promise(function (e) {\n                      var t;\n                      p.platform || (p = ue.getEnvInfo());\n                      var r = \"\";\n                      if (p.platform === re.WEB) {\n                        var o = navigator.connection;\n                        (null == o ? void 0 : o.type) ? (null == o || o.type, r = T.WIFI) : (null == o ? void 0 : o.effectiveType) && (r = T[o.effectiveType.toLocaleUpperCase()]), e(r);\n                      } else p.platform === re.NODE ? (r = T.UNKNOWN, e(r)) : null === (t = p.global) || void 0 === t || t.getNetworkType({\n                        success: function success(t) {\n                          r = T[t.networkType.toLocaleUpperCase()], e(r);\n                        }\n                      });\n                    }))];\n                  case 1:\n                    o = l.sent(), l.label = 2;\n                  case 2:\n                    return n = this.options, i = n.appkey, a = n.sdkServiceId, s = n.sdkProduct, c = _xt({\n                      lts: r,\n                      net: o,\n                      appkey: i,\n                      sdkServiceId: a,\n                      sdkProduct: s\n                    }, t), this.isReportDt ? Gt.send(e, c) : this.isCollectDt && this.eventQueue.push({\n                      eventId: e,\n                      dt: c\n                    }), [3, 4];\n                  case 3:\n                    return u = l.sent(), __f__(\"warn\", u, \" at SDK/4.1.7-uniapp-log.js:1\"), [3, 4];\n                  case 4:\n                    return [2];\n                }\n                var p;\n              });\n            }, new ((n = void 0) || (n = Promise))(function (e, t) {\n              function a(e) {\n                try {\n                  c(i.next(e));\n                } catch (e) {\n                  t(e);\n                }\n              }\n              function s(e) {\n                try {\n                  c(i.throw(e));\n                } catch (e) {\n                  t(e);\n                }\n              }\n              function c(t) {\n                var r;\n                t.done ? e(t.value) : (r = t.value, r instanceof n ? r : new n(function (e) {\n                  e(r);\n                })).then(a, s);\n              }\n              c((i = i.apply(r, o || [])).next());\n            });\n            var r, o, n, i;\n          }, e;\n        }(),\n        jt = Ht;\n      function Ft() {\n        var e = this.context.appName,\n          t = this.context.orgName;\n        return !(!e || !t) || (this.onError && this.onError({\n          type: p.WEBIM_CONNCTION_AUTH_ERROR,\n          message: \"appName or orgName is illegal\"\n        }), !1);\n      }\n      function Wt() {\n        var e;\n        if (!this.context.accessToken) {\n          var t = m.create({\n            type: p.WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR,\n            message: \"token not assign error\"\n          });\n          return this.onError && this.onError(t), null === (e = this.eventHandler) || void 0 === e || e.dispatch(\"onError\", t), !1;\n        }\n        return !0;\n      }\n      function qt() {\n        return Wt.call(this) && Ft.call(this);\n      }\n      function Kt(e) {\n        var t = e.data,\n          r = e.type;\n        return {\n          data: {\n            status: Object.keys(t.errorKeys).length > 0 ? \"fail\" : \"success\",\n            errorKeys: t.errorKeys,\n            successKeys: t.successKeys\n          },\n          type: r\n        };\n      }\n      function zt(e) {\n        var t = e.data,\n          r = void 0;\n        return Object.keys(t.errorKeys).length > 0 && Object.keys(t.errorKeys).forEach(function (e) {\n          var o = t.errorKeys[e];\n          r = o.includes(\"is not part of you\") ? m.create({\n            type: p.NO_PERMISSION,\n            message: o\n          }) : o.includes(\"size of metadata for this single chatroom exceeds the user defined limit\") || o.includes(\"total size of chatroom metadata for this app exceeds the user defined limit\") || o.includes(\"is exceeding maximum limit\") ? m.create({\n            type: p.MAX_LIMIT,\n            message: o\n          }) : o.includes(\"is not Legal\") ? m.create({\n            type: p.REQUEST_PARAMETER_ERROR,\n            message: o\n          }) : o.includes(\"Failed to update userMetadata. Concurrent updates not allowed\") ? m.create({\n            type: p.OPERATION_NOT_ALLOWED,\n            message: o\n          }) : m.create({\n            type: p.WEBIM_CONNCTION_AJAX_ERROR,\n            message: o\n          });\n        }), r;\n      }\n      var _Vt = function Vt() {\n          return _Vt = Object.assign || function (e) {\n            for (var t, r = 1, o = arguments.length; r < o; r++) {\n              for (var n in t = arguments[r]) {\n                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n              }\n            }\n            return e;\n          }, _Vt.apply(this, arguments);\n        },\n        Jt = function Jt(e, t, r, o) {\n          return new (r || (r = Promise))(function (n, i) {\n            function a(e) {\n              try {\n                c(o.next(e));\n              } catch (e) {\n                i(e);\n              }\n            }\n            function s(e) {\n              try {\n                c(o.throw(e));\n              } catch (e) {\n                i(e);\n              }\n            }\n            function c(e) {\n              var t;\n              e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {\n                e(t);\n              })).then(a, s);\n            }\n            c((o = o.apply(e, t || [])).next());\n          });\n        },\n        Xt = function Xt(e, t) {\n          var r,\n            o,\n            n,\n            i,\n            a = {\n              label: 0,\n              sent: function sent() {\n                if (1 & n[0]) throw n[1];\n                return n[1];\n              },\n              trys: [],\n              ops: []\n            };\n          return i = {\n            next: s(0),\n            throw: s(1),\n            return: s(2)\n          }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n            return this;\n          }), i;\n          function s(i) {\n            return function (s) {\n              return function (i) {\n                if (r) throw new TypeError(\"Generator is already executing.\");\n                for (; a;) {\n                  try {\n                    if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;\n                    switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {\n                      case 0:\n                      case 1:\n                        n = i;\n                        break;\n                      case 4:\n                        return a.label++, {\n                          value: i[1],\n                          done: !1\n                        };\n                      case 5:\n                        a.label++, o = i[1], i = [0];\n                        continue;\n                      case 7:\n                        i = a.ops.pop(), a.trys.pop();\n                        continue;\n                      default:\n                        if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                          a = 0;\n                          continue;\n                        }\n                        if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {\n                          a.label = i[1];\n                          break;\n                        }\n                        if (6 === i[0] && a.label < n[1]) {\n                          a.label = n[1], n = i;\n                          break;\n                        }\n                        if (n && a.label < n[2]) {\n                          a.label = n[2], a.ops.push(i);\n                          break;\n                        }\n                        n[2] && a.ops.pop(), a.trys.pop();\n                        continue;\n                    }\n                    i = t.call(e, a);\n                  } catch (e) {\n                    i = [6, e], o = 0;\n                  } finally {\n                    r = n = 0;\n                  }\n                }\n                if (5 & i[0]) throw i[1];\n                return {\n                  value: i[0] ? i[1] : void 0,\n                  done: !0\n                };\n              }([i, s]);\n            };\n          }\n        };\n      function Yt(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/users/\" + this.user + \"/blocks/users\",\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i\n            },\n            success: function success(t) {\n              var r = {};\n              t.data.forEach(function (e) {\n                r[e] = {\n                  name: e\n                };\n              }), \"function\" == typeof (null == e ? void 0 : e.success) && e.success(t);\n            },\n            error: function error(t) {\n              \"function\" == typeof (null == e ? void 0 : e.error) && e.error(t);\n            }\n          };\n        return J.debug(\"Call getBlocklist\"), Q.call(this, a, E.GET_BLACK_LIST);\n      }\n      var Qt = Yt,\n        $t = Zt;\n      function Zt(e) {\n        var t = this;\n        if (!qt.call(this)) {\n          var r = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(r);\n        }\n        var o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = o.accessToken,\n          s = {\n            url: this.apiUrl + \"/\" + n + \"/\" + i + \"/users/\" + this.user + \"/contacts/users\",\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + a\n            },\n            success: function success(r) {\n              var o = [];\n              r.data.forEach(function (e) {\n                o.push({\n                  name: e,\n                  subscription: \"both\",\n                  jid: t.context.jid\n                });\n              }), \"function\" == typeof (null == e ? void 0 : e.success) && e.success(o);\n            },\n            error: function error(t) {\n              \"function\" == typeof (null == e ? void 0 : e.error) && e.error(t);\n            }\n          };\n        return J.debug(\"Call getContacts\"), Q.call(this, s, E.GET_CONTACTS);\n      }\n      function er(e) {\n        if (\"string\" != typeof e.deviceId || \"\" === e.deviceId) throw Error('Invalid parameter: \"deviceId\"');\n        if (\"string\" != typeof e.deviceToken || \"\" === e.deviceToken) throw Error('Invalid parameter: \"deviceToken\"');\n        if (\"string\" != typeof e.notifierName || \"\" === e.notifierName) throw Error('Invalid parameter: \"notifierName\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/users/\").concat(this.user),\n            type: \"PUT\",\n            data: JSON.stringify({\n              device_id: e.deviceId,\n              device_token: e.deviceToken,\n              notifier_name: e.notifierName\n            }),\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call uploadPushToken\", e), Q.call(this, a, E.UPLOAD_PUSH_TOKEN);\n      }\n      var tr = er;\n      function rr(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/users/\").concat(this.user, \"/user_channels\"),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e && (null == e ? void 0 : e.success),\n            error: e && (null == e ? void 0 : e.error)\n          };\n        return J.debug(\"Call getSessionList\"), Q.call(this, a, E.GET_SESSION_LIST);\n      }\n      function or(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = !!(e && \"number\" == typeof e.pageNum && \"number\" == typeof e.pageSize && e.pageNum > 0 && e.pageSize > 0),\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/users/\").concat(this.user, \"/user_channels\").concat(a ? \"/page\" : \"\"),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e && (null == e ? void 0 : e.success),\n            error: e && (null == e ? void 0 : e.error)\n          };\n        return a && (s.data = {\n          pageNum: e.pageNum,\n          pageSize: e.pageSize\n        }), J.debug(\"Call getConversationlist\"), Q.call(this, s, E.GET_SESSION_LIST).then(function (e) {\n          return function (e) {\n            var t = e.data.channel_infos;\n            return null == t || t.forEach(function (e) {\n              e.meta && \"{}\" !== JSON.stringify(e.meta) ? (e.meta.payload = JSON.parse(e.meta.payload), e.lastMessage = he(e.meta)) : e.lastMessage = e.meta, delete e.meta;\n            }), e;\n          }(e);\n        });\n      }\n      function nr(e) {\n        if (e && \"string\" != typeof e.channel) throw Error(\"Invalid parameter channel: \".concat(e.channel));\n        if (e && \"singleChat\" !== e.chatType && \"groupChat\" !== e.chatType) throw Error(\"Invalid parameter chatType: \".concat(e.chatType));\n        if (e && \"boolean\" != typeof e.deleteRoam) throw Error(\"Invalid parameter deleteRoam: \".concat(e.deleteRoam));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r,\n          o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = o.accessToken,\n          s = o.jid;\n        r = \"singleChat\" === e.chatType ? \"chat\" : \"groupChat\";\n        var c = {\n          url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/user/\").concat(this.user, \"/user_channel?resource=\").concat(s.clientResource),\n          dataType: \"json\",\n          type: \"DELETE\",\n          data: JSON.stringify({\n            channel: e.channel,\n            type: r,\n            delete_roam: e.deleteRoam\n          }),\n          headers: {\n            Authorization: \"Bearer \" + a,\n            \"Content-Type\": \"application/json\"\n          },\n          success: e.success,\n          error: e.error\n        };\n        return J.debug(\"Call deleteSession\", e), Q.call(this, c, E.DELETE_SESSION);\n      }\n      var ir = nr;\n      function ar(e, t) {\n        if (!qt.call(this)) {\n          var r = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(r);\n        }\n        var o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = o.accessToken,\n          s = [\"nickname\", \"avatarurl\", \"mail\", \"phone\", \"gender\", \"sign\", \"birth\", \"ext\"],\n          c = {};\n        if (\"undefined\" != typeof wx || \"undefined\" != typeof qq) {\n          if (\"string\" == typeof e && void 0 !== t) {\n            if (!s.includes(e)) throw new Error(\"illegal key, only these keys: nickname, avatarurl, mail, phone, gender, sign, birth, ext are allowed\");\n            c[e] = t;\n          } else {\n            if (\"[object Object]\" !== Object.prototype.toString.call(e)) throw new Error(\"illegal params\");\n            s.forEach(function (t) {\n              s.includes(t) && void 0 !== e[t] && (c[t] = e[t]);\n            });\n          }\n        } else if (\"string\" == typeof e) {\n          if (!s.includes(e)) throw new Error(\"illegal key, only these keys: nickname, avatarurl, mail, phone, gender, sign, birth, ext are allowed\");\n          c = e + \"=\" + t;\n        } else {\n          if (\"[object Object]\" !== Object.prototype.toString.call(e)) throw new Error(\"illegal params\");\n          var u = [];\n          s.forEach(function (t) {\n            if (s.includes(t) && void 0 !== e[t]) {\n              var r = encodeURIComponent(t),\n                o = encodeURIComponent(e[t]);\n              u.push(r + \"=\" + o);\n            }\n          }), c = u.join(\"&\");\n        }\n        var l = {\n          url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/metadata/user/\").concat(this.user),\n          type: \"PUT\",\n          data: c,\n          dataType: \"json\",\n          headers: {\n            Authorization: \"Bearer \" + a,\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          }\n        };\n        return J.debug(\"Call updateOwnUserInfo\", e), Q.call(this, l, E.UPDATE_USER_INFO);\n      }\n      var sr = ar;\n      function cr(e, t) {\n        if (!qt.call(this)) {\n          var r = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(r);\n        }\n        var o,\n          n = this.context,\n          i = n.orgName,\n          a = n.appName,\n          s = n.accessToken,\n          c = [];\n        if (\"string\" == typeof e) c = [e];else {\n          if (\"[object Array]\" !== Object.prototype.toString.call(e)) throw new Error(\"illegal params\");\n          c = e;\n        }\n        o = \"string\" == typeof t ? [t] : t && \"[object Array]\" === Object.prototype.toString.call(t) ? t : [\"nickname\", \"avatarurl\", \"mail\", \"phone\", \"gender\", \"sign\", \"birth\", \"ext\"];\n        var u = {\n          url: \"\".concat(this.apiUrl, \"/\").concat(i, \"/\").concat(a, \"/metadata/user/get\"),\n          type: \"POST\",\n          data: JSON.stringify({\n            targets: c,\n            properties: o\n          }),\n          dataType: \"json\",\n          headers: {\n            Authorization: \"Bearer \" + s,\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        return J.debug(\"Call fetchUserInfoById\", e), Q.call(this, u, E.GET_USER_INFO);\n      }\n      function ur(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/users/\").concat(this.user),\n            type: \"PUT\",\n            dataType: \"json\",\n            data: JSON.stringify({\n              nickname: e\n            }),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call updateCurrentUserNick\", e), Q.call(this, a);\n      }\n      function lr(e) {\n        if (\"string\" != typeof e || \"\" === e) throw Error('Invalid parameter: \"agoraToken\"');\n        var t = this.context,\n          r = t.orgName,\n          o = t.appName,\n          n = {\n            url: this.apiUrl + \"/\" + r + \"/\" + o + \"/token\",\n            dataType: \"json\",\n            type: \"POST\",\n            data: JSON.stringify({\n              grant_type: \"agora\"\n            }),\n            headers: {\n              Authorization: \"Bearer \" + e,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call getChatToken\", e), Q.call(this, n, E.SDK_INTERNAL);\n      }\n      function pr(e) {\n        var t = this;\n        return new Promise(function (r, o) {\n          if (!e.queue) throw Error('Invalid parameter: \"specified\"');\n          if (!qt.call(t)) {\n            var n = m.create({\n              type: p.REST_PARAMS_STATUS,\n              message: \"appkey or token error\"\n            });\n            return Promise.reject(n);\n          }\n          (function e(t) {\n            var n = this,\n              i = t.count || 20;\n            dr.call(this, {\n              count: i,\n              isGroup: !!t.isGroup,\n              queue: t.queue,\n              start: t.start,\n              format: t.format,\n              success: function success(o) {\n                if (o.msgs.length >= i || o.is_last) {\n                  var a = o.msgs.splice(0, i).reverse();\n                  t.success && t.success(a), r(a);\n                } else e.call(n, _Vt(_Vt({}, t), {\n                  start: null\n                }));\n              },\n              fail: function fail(e) {\n                o(e), t.fail && t.fail(e);\n              }\n            });\n          }).call(t, e), J.debug(\"Call fetchHistoryMessages\", e);\n        });\n      }\n      function dr(e) {\n        var t = this,\n          r = e.queue,\n          o = this.mr_cache[r] || (this.mr_cache[r] = {\n            msgs: []\n          }),\n          n = this.context.userId,\n          i = e.start || -1,\n          a = e.count || 20;\n        if (o.msgs.length >= a || o.is_last) \"function\" == typeof e.success && e.success(o);else {\n          o && o.next_key && (i = o.next_key), e.start && (i = e.start);\n          var s = {\n              queue: r + (e.isGroup ? \"@conference.easemob.com\" : \"@easemob.com\"),\n              start: i,\n              end: -1\n            },\n            c = this.context,\n            u = c.orgName,\n            l = c.appName,\n            d = {\n              url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/users/\").concat(n, \"/messageroaming\"),\n              dataType: \"json\",\n              type: \"POST\",\n              headers: {\n                Authorization: \"Bearer \" + this.token,\n                \"Content-Type\": \"application/json\"\n              },\n              data: JSON.stringify(s),\n              success: function success(r) {\n                var n = null == r ? void 0 : r.data;\n                if (!r.data.msgs) return \"function\" == typeof e.success && e.success(o), o.is_last = !0, void (o.next_key = \"\");\n                var i = n.msgs,\n                  a = i.length;\n                o.is_last = n.is_last, o.next_key = n.next_key;\n                for (var s = function s(r) {\n                    for (var o = [], n = 0, i = (r = pe().atob(r)).length; n < i; ++n) {\n                      o.push(r.charCodeAt(n));\n                    }\n                    var a = t.context.root.lookup(\"easemob.pb.Meta\");\n                    if (1 === (a = a.decode(o)).ns) return Me.call(t, a, {\n                      errorCode: 0,\n                      reason: \"\"\n                    }, !0, e.format);\n                  }, c = 0; c < a; c++) {\n                  var u = s(i[c].msg);\n                  u && o.msgs.push(u);\n                }\n                \"function\" == typeof e.success && e.success(o);\n              },\n              error: function error(e) {\n                if (e.error && e.error_description) {\n                  var r = m.create({\n                    type: p.WEBIM_CONNCTION_AJAX_ERROR,\n                    message: \"fetch history messages error\",\n                    data: e\n                  });\n                  t.onError && t.onError(r);\n                }\n              }\n            };\n          Q.call(this, d, E.GET_HISTORY_MSG).catch(function (t) {\n            \"function\" == typeof e.fail && e.fail(t);\n          });\n        }\n      }\n      function hr(e) {\n        var t = this;\n        return new Promise(function (r, o) {\n          var n = e.targetId,\n            i = e.cursor,\n            a = void 0 === i ? -1 : i,\n            s = e.pageSize,\n            c = void 0 === s ? 20 : s,\n            u = e.chatType,\n            l = e.searchDirection,\n            d = e.searchOptions,\n            h = void 0 === d ? {} : d,\n            f = h.msgTypes,\n            g = void 0 === f ? [] : f,\n            E = h.startTime,\n            y = void 0 === E ? null : E,\n            T = h.endTime,\n            v = void 0 === T ? null : T,\n            _ = h.from,\n            O = void 0 === _ ? null : _;\n          if (\"string\" != typeof n || \"\" === n) throw Error('\"Invalid parameter\": \"targetId\"');\n          if (O && \"string\" != typeof O) throw Error('\"Invalid parameter\": \"searchOptions.from\"');\n          if (g && !Array.isArray(g)) throw Error('\"Invalid parameter\": \"searchOptions.msgTypes\"');\n          if (y && \"number\" != typeof y) throw Error('\"Invalid parameter\": \"searchOptions.startTime\"');\n          if (v && \"number\" != typeof y) throw Error('\"Invalid parameter\": \"searchOptions.endTime\"');\n          if (!qt.call(t)) {\n            var R = m.create({\n              type: p.REST_PARAMS_STATUS,\n              message: \"appkey or token error\"\n            });\n            return o(R);\n          }\n          var I = t.context,\n            S = I.orgName,\n            C = I.appName,\n            N = I.userId,\n            A = \"groupChat\" === e.chatType ? \"@conference.easemob.com\" : \"@easemob.com\",\n            M = {\n              queue: \"\".concat(n).concat(A),\n              start: a,\n              pull_number: c,\n              is_positive: \"down\" === l,\n              msgType: g.join(\",\") || \"\",\n              end: -1,\n              startTime: y,\n              endTime: v,\n              userId: \"singleChat\" === u ? null : O\n            },\n            b = {\n              url: \"\".concat(t.apiUrl, \"/\").concat(S, \"/\").concat(C, \"/users/\").concat(N, \"/messageroaming\"),\n              dataType: \"json\",\n              type: \"POST\",\n              headers: {\n                Authorization: \"Bearer \" + t.token,\n                \"Content-Type\": \"application/json\"\n              },\n              data: JSON.stringify(M),\n              success: function success(o) {\n                for (var n, i = null == o ? void 0 : o.data, a = i.msgs || [], s = function s(e) {\n                    for (var r = [], o = 0, n = (e = pe().atob(e)).length; o < n; ++o) {\n                      r.push(e.charCodeAt(o));\n                    }\n                    var i = t.context.root.lookup(\"easemob.pb.Meta\");\n                    if (1 === (i = i.decode(r)).ns) return Me.call(t, i, {\n                      errorCode: 0,\n                      reason: \"\"\n                    }, !0, !0);\n                  }, c = [], u = 0; u < a.length; u++) {\n                  var l = s(a[u].msg);\n                  l && c.push(l);\n                }\n                i.msgs = c;\n                var p = {\n                  cursor: i.next_key,\n                  messages: c,\n                  isLast: i.is_last\n                };\n                null === (n = e.success) || void 0 === n || n.call(e, p), r(p);\n              },\n              error: e.fail\n            };\n          Q.call(t, b).catch(function (e) {\n            o(e);\n          }), J.debug(\"Call getHistoryMessages\", e);\n        });\n      }\n      function fr(e, t) {\n        var r = this;\n        return new Promise(function (o, n) {\n          var i = {\n            id: r.getUniqueId(),\n            to: e,\n            message: t\n          };\n          Le.operatRoster.call(r, i, \"add\", o, n), J.debug(\"Call addContact\", i);\n        });\n      }\n      var mr = gr;\n      function gr(e) {\n        var t = this;\n        return new Promise(function (r, o) {\n          var n = {\n            id: t.getUniqueId(),\n            to: e\n          };\n          Le.operatRoster.call(t, n, \"remove\", r, o), J.debug(\"Call deleteContact\", n);\n        });\n      }\n      function Er(e) {\n        var t = this;\n        return new Promise(function (r, o) {\n          var n = {\n            id: t.getUniqueId(),\n            to: e\n          };\n          Le.operatRoster.call(t, n, \"accept\", r, o), J.debug(\"Call acceptInvitation\", n);\n        });\n      }\n      var yr = Er;\n      function Tr(e) {\n        var t = this;\n        return new Promise(function (r, o) {\n          var n = {\n            id: t.getUniqueId(),\n            to: e\n          };\n          Le.operatRoster.call(t, n, \"decline\", r, o), J.debug(\"Call declineContactInvite\", n);\n        });\n      }\n      var vr = Tr;\n      function _r(e) {\n        var t = this;\n        return new Promise(function (r, o) {\n          Le.operatRoster.call(t, {\n            to: e.name\n          }, \"ban\", r, o), J.debug(\"Call addUsersToBlocklist\", e);\n        });\n      }\n      var Or = _r,\n        Rr = _r;\n      function Ir(e) {\n        var t = this;\n        return new Promise(function (r, o) {\n          Le.operatRoster.call(t, {\n            to: e.name\n          }, \"allow\", r, o), J.debug(\"Call removeUserFromBlocklist\", e);\n        });\n      }\n      var Sr = Ir,\n        Cr = Ir;\n      function Nr(e) {\n        var t = this.getUniqueId(),\n          r = {\n            id: t,\n            to: e.to\n          };\n        this._msgHash[t] = _Vt({}, r);\n        var o = \"\";\n        void 0 !== e.chatType ? o = e.chatType : void 0 !== e.type && (o = \"chat\" === e.type ? \"singleChat\" : e.type);\n        var n = {\n          id: t,\n          type: \"recall\",\n          chatType: o,\n          ackId: e.mid,\n          to: e.to,\n          isChatThread: e.isChatThread || !1,\n          success: e.success,\n          fail: e.fail\n        };\n        return J.debug(\"Call recallMessage\", e), this.mSync.send(n, this);\n      }\n      function Ar(e) {\n        return Jt(this, void 0, void 0, function () {\n          var t, r, o, n, i, a, s, c, u;\n          return Xt(this, function (l) {\n            switch (l.label) {\n              case 0:\n                if (\"string\" != typeof e.messageId || !e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));\n                if (\"string\" != typeof e.reaction || !e.reaction) throw Error(\"Invalid parameter reaction: \".concat(e.reaction));\n                return qt.call(this) ? (r = this.context, o = r.orgName, n = r.appName, i = r.accessToken, a = e.reaction, s = e.messageId, c = {\n                  msgId: s,\n                  message: a\n                }, u = {\n                  url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/reaction/user/\").concat(this.user),\n                  type: \"POST\",\n                  data: JSON.stringify(c),\n                  dataType: \"json\",\n                  headers: {\n                    Authorization: \"Bearer \" + i,\n                    \"Content-Type\": \"application/json\"\n                  }\n                }, [4, Q.call(this, u)]) : (t = m.create({\n                  type: p.REST_PARAMS_STATUS,\n                  message: \"appkey or token error\"\n                }), [2, Promise.reject(t)]);\n              case 1:\n                return l.sent(), [2];\n            }\n          });\n        });\n      }\n      function Mr(e) {\n        return Jt(this, void 0, void 0, function () {\n          var t, r, o, n, i, a, s, c;\n          return Xt(this, function (u) {\n            switch (u.label) {\n              case 0:\n                if (\"string\" != typeof e.reaction || !e.reaction) throw Error(\"Invalid parameter reactionId: \".concat(e.reaction));\n                return qt.call(this) ? (r = this.context, o = r.orgName, n = r.appName, i = r.accessToken, a = e.messageId, s = e.reaction, c = {\n                  url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/reaction/user/\").concat(this.user, \"?msgId=\").concat(a, \"&message=\").concat(s),\n                  type: \"DELETE\",\n                  dataType: \"json\",\n                  headers: {\n                    Authorization: \"Bearer \" + i,\n                    \"Content-Type\": \"application/json\"\n                  }\n                }, [4, Q.call(this, c)]) : (t = m.create({\n                  type: p.REST_PARAMS_STATUS,\n                  message: \"appkey or token error\"\n                }), [2, Promise.reject(t)]);\n              case 1:\n                return u.sent(), [2];\n            }\n          });\n        });\n      }\n      function br(e) {\n        if (\"string\" != typeof e.chatType || !e.chatType) throw Error(\"Invalid parameter chatType: \".concat(e.chatType));\n        if (!e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.chatType,\n          s = e.messageId,\n          c = {\n            msgIdList: \"string\" == typeof s ? [s] : s,\n            msgType: \"singleChat\" === a ? \"chat\" : \"groupchat\",\n            groupId: e.groupId || null\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/reaction/user/\").concat(this.user),\n            type: \"GET\",\n            data: c,\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, u).then(function (e) {\n          var t = e.data;\n          return null == t || t.forEach(function (e) {\n            null == e || e.reactionList.forEach(function (e) {\n              e.isAddedBySelf = e.state, delete e.state, delete e.reactionId;\n            });\n          }), e;\n        });\n      }\n      var Ur = br;\n      function wr(e) {\n        if (\"string\" != typeof e.reaction || !e.reaction) throw Error(\"Invalid parameter reaction: \".concat(e.reaction));\n        if (\"string\" != typeof e.messageId || !e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.cursor,\n          s = e.pageSize,\n          c = {\n            msgId: e.messageId,\n            message: e.reaction,\n            currentPage: a || null,\n            pageSize: s || 20\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/reaction/user/\").concat(this.user, \"/detail\"),\n            type: \"GET\",\n            data: c,\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, u).then(function (e) {\n          return e.data.isAddedBySelf = e.data.state, delete e.data.state, delete e.data.reactionId, e;\n        });\n      }\n      function kr(e) {\n        return Jt(this, void 0, void 0, function () {\n          var t, r, o, n, i, a, s, c, u, l, d;\n          return Xt(this, function (h) {\n            switch (h.label) {\n              case 0:\n                if (\"string\" != typeof e.reportType || !e.reportType) throw Error(\"Invalid parameter reportType: \".concat(e.reportType));\n                if (\"string\" != typeof e.messageId || !e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));\n                if (\"string\" != typeof e.reportReason || !e.reportReason) throw Error(\"Invalid parameter messageId: \".concat(e.reportReason));\n                return qt.call(this) ? (r = this.context, o = r.orgName, n = r.appName, i = r.accessToken, a = e.reportType, s = e.reportReason, c = e.messageId, u = {\n                  username: this.user,\n                  reportType: a,\n                  reportReason: s\n                }, l = \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/user/\").concat(this.user, \"/moderation/report/message/\").concat(c), d = {\n                  url: l,\n                  type: \"POST\",\n                  data: JSON.stringify(u),\n                  dataType: \"json\",\n                  headers: {\n                    Authorization: \"Bearer \" + i,\n                    \"Content-Type\": \"application/json\"\n                  }\n                }, [4, Q.call(this, d)]) : (t = m.create({\n                  type: p.REST_PARAMS_STATUS,\n                  message: \"appkey or token error\"\n                }), [2, Promise.reject(t)]);\n              case 1:\n                return h.sent(), [2];\n            }\n          });\n        });\n      }\n      function Pr(e) {\n        var t;\n        return Jt(this, void 0, void 0, function () {\n          var r, o, n, i, a, s, c, u, l;\n          return Xt(this, function (d) {\n            switch (d.label) {\n              case 0:\n                if (\"string\" != typeof e.targetId || \"\" === e.targetId) throw Error('\"Invalid parameter targetId\": ' + e.targetId);\n                if (![\"singleChat\", \"groupChat\"].includes(e.chatType)) throw Error('\"Invalid parameter chatType\": ' + e.chatType);\n                if (e.beforeTimeStamp && (\"number\" != typeof e.beforeTimeStamp || e.beforeTimeStamp < 0 || (null === (t = e.beforeTimeStamp) || void 0 === t ? void 0 : t.toString().length) > 18)) throw Error('\"Invalid parameter beforeTimeStamp\": ' + e.beforeTimeStamp);\n                if (e.messageIds && !(Array.isArray(e.messageIds) && e.messageIds.length > 0 && e.messageIds.length <= 20)) throw Error('\"Invalid parameter messageIds\": ' + e.messageIds);\n                if (!e.messageIds && !e.beforeTimeStamp) throw Error(\"messageIds or beforeTimeStamp field is required.\");\n                return qt.call(this) ? (o = this.context, n = o.orgName, i = o.appName, a = o.userId, s = \"singleChat\" === e.chatType ? \"userId\" : \"groupId\", c = \"singleChat\" === e.chatType ? \"chat\" : \"group\", u = e.messageIds ? \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/sdk/message/roaming/\").concat(c, \"/user/\").concat(a, \"?\").concat(s, \"=\").concat(e.targetId, \"&msgIdList=\").concat(e.messageIds, \"&resource=\").concat(this.clientResource) : \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/sdk/message/roaming/\").concat(c, \"/user/\").concat(a, \"/time?\").concat(s, \"=\").concat(e.targetId, \"&delTime=\").concat(e.beforeTimeStamp, \"&&resource=\").concat(this.clientResource), l = {\n                  url: u,\n                  dataType: \"json\",\n                  type: \"DELETE\",\n                  headers: {\n                    Authorization: \"Bearer \" + this.token,\n                    \"Content-Type\": \"application/json\"\n                  }\n                }, J.debug(\"Call removeHistoryMessages\", e), [4, Q.call(this, l)]) : (r = m.create({\n                  type: p.REST_PARAMS_STATUS,\n                  message: \"appkey or token error\"\n                }), [2, Promise.reject(r)]);\n              case 1:\n                return d.sent(), [2];\n            }\n          });\n        });\n      }\n      function Lr(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        if (e.pageSize && \"number\" != typeof e.pageSize) throw Error(\"Invalid parameter pageSize: \".concat(e.pageSize));\n        if (e.cursor && \"string\" != typeof e.cursor) throw Error(\"Invalid parameter cursor: \".concat(e.cursor));\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/sdk/user/\").concat(this.user, \"/user_channels/list?\"),\n            type: \"GET\",\n            dataType: \"json\",\n            data: {\n              limit: (null == e ? void 0 : e.pageSize) || 20,\n              cursor: (null == e ? void 0 : e.cursor) || \"\"\n            },\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call getServerConversations\", e), Q.call(this, a, E.GET_SESSION_LIST).then(function (e) {\n          return Dr(e);\n        });\n      }\n      function Dr(e) {\n        var t = e.data,\n          r = t.cursor,\n          o = t.channel_infos,\n          n = [];\n        null == o || o.forEach(function (e) {\n          var t = null;\n          (null == e ? void 0 : e.meta) && \"{}\" !== JSON.stringify(e.meta) && (e.meta.payload = JSON.parse(e.meta.payload), t = he(e.meta));\n          var r = {\n            conversationId: e.session_to,\n            conversationType: \"chat\" === e.session_type ? \"singleChat\" : \"groupChat\",\n            isPinned: e.is_top,\n            pinnedTime: e.is_top ? e.update_top_status_time : 0,\n            unReadCount: e.unread_num,\n            lastMessage: t\n          };\n          n.push(r);\n        });\n        var i = {\n          conversations: n,\n          cursor: r || \"\"\n        };\n        return {\n          type: e.type,\n          data: i\n        };\n      }\n      function Gr(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        if (e.pageSize && \"number\" != typeof e.pageSize) throw Error(\"Invalid parameter pageSize: \".concat(e.pageSize));\n        if (e.cursor && \"string\" != typeof e.cursor) throw Error(\"Invalid parameter cursor: \".concat(e.cursor));\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/sdk/user/\").concat(this.user, \"/user_channels/list?\"),\n            type: \"GET\",\n            dataType: \"json\",\n            data: {\n              limit: (null == e ? void 0 : e.pageSize) || 20,\n              cursor: (null == e ? void 0 : e.cursor) || \"\",\n              is_top: !0\n            },\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call getServerConversations\", e), Q.call(this, a, E.GET_SESSION_LIST).then(function (e) {\n          return Dr(e);\n        });\n      }\n      function xr(e) {\n        return Jt(this, void 0, void 0, function () {\n          var t, r, o, n, i, a, s, c, u, l, d, h, f, g;\n          return Xt(this, function (y) {\n            if (!qt.call(this)) return t = m.create({\n              type: p.REST_PARAMS_STATUS,\n              message: \"appkey or token error\"\n            }), [2, Promise.reject(t)];\n            if (r = e.conversationId, o = e.conversationType, n = e.isPinned, i = \"singleChat\" === o ? \"chat\" : \"groupChat\", \"string\" != typeof r || \"\" === r) throw Error(\"Invalid parameter conversationId: \".concat(r));\n            if (![\"singleChat\", \"groupChat\"].includes(o)) throw Error(\"Invalid parameter conversationType: \".concat(o));\n            if (\"boolean\" != typeof n) throw Error(\"Invalid parameter isPinned: \".concat(n));\n            return a = this.context, s = a.orgName, c = a.appName, u = a.accessToken, l = a.jid, d = {\n              type: i,\n              to: r\n            }, h = n ? \"\" : \"type=\".concat(i, \"&to=\").concat(r, \"&\"), f = \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/sdk/user/\").concat(this.user, \"/user_channel/top?\").concat(h, \"resource=\").concat(l.clientResource), g = {\n              url: f,\n              type: n ? \"POST\" : \"DELETE\",\n              dataType: \"json\",\n              headers: {\n                Authorization: \"Bearer \" + u,\n                \"Content-Type\": \"application/json\"\n              }\n            }, n && (g.data = JSON.stringify(d)), J.debug(\"Call pinConversation\", e), [2, Q.call(this, g, E.PIN_CONVERSATION).then(function (e) {\n              var t = e.type,\n                r = e.data;\n              return {\n                type: t,\n                data: {\n                  isPinned: r.is_top || !1,\n                  pinnedTime: r.is_top ? r.update_top_status_time : 0\n                }\n              };\n            })];\n          });\n        });\n      }\n      var Br = function Br(e, t, r, o) {\n          return new (r || (r = Promise))(function (n, i) {\n            function a(e) {\n              try {\n                c(o.next(e));\n              } catch (e) {\n                i(e);\n              }\n            }\n            function s(e) {\n              try {\n                c(o.throw(e));\n              } catch (e) {\n                i(e);\n              }\n            }\n            function c(e) {\n              var t;\n              e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {\n                e(t);\n              })).then(a, s);\n            }\n            c((o = o.apply(e, t || [])).next());\n          });\n        },\n        Hr = function Hr(e, t) {\n          var r,\n            o,\n            n,\n            i,\n            a = {\n              label: 0,\n              sent: function sent() {\n                if (1 & n[0]) throw n[1];\n                return n[1];\n              },\n              trys: [],\n              ops: []\n            };\n          return i = {\n            next: s(0),\n            throw: s(1),\n            return: s(2)\n          }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n            return this;\n          }), i;\n          function s(i) {\n            return function (s) {\n              return function (i) {\n                if (r) throw new TypeError(\"Generator is already executing.\");\n                for (; a;) {\n                  try {\n                    if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;\n                    switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {\n                      case 0:\n                      case 1:\n                        n = i;\n                        break;\n                      case 4:\n                        return a.label++, {\n                          value: i[1],\n                          done: !1\n                        };\n                      case 5:\n                        a.label++, o = i[1], i = [0];\n                        continue;\n                      case 7:\n                        i = a.ops.pop(), a.trys.pop();\n                        continue;\n                      default:\n                        if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                          a = 0;\n                          continue;\n                        }\n                        if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {\n                          a.label = i[1];\n                          break;\n                        }\n                        if (6 === i[0] && a.label < n[1]) {\n                          a.label = n[1], n = i;\n                          break;\n                        }\n                        if (n && a.label < n[2]) {\n                          a.label = n[2], a.ops.push(i);\n                          break;\n                        }\n                        n[2] && a.ops.pop(), a.trys.pop();\n                        continue;\n                    }\n                    i = t.call(e, a);\n                  } catch (e) {\n                    i = [6, e], o = 0;\n                  } finally {\n                    r = n = 0;\n                  }\n                }\n                if (5 & i[0]) throw i[1];\n                return {\n                  value: i[0] ? i[1] : void 0,\n                  done: !0\n                };\n              }([i, s]);\n            };\n          }\n        };\n      function jr(e) {\n        if (!e || !e.data) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups?resource=\").concat(a.clientResource),\n            dataType: \"json\",\n            type: \"POST\",\n            data: JSON.stringify({\n              owner: this.user,\n              groupname: e.data.groupname,\n              desc: e.data.desc,\n              members: e.data.members,\n              public: e.data.public,\n              approval: e.data.approval,\n              allowinvites: e.data.allowinvites,\n              invite_need_confirm: e.data.inviteNeedConfirm,\n              maxusers: e.data.maxusers,\n              custom: e.data.ext\n            }),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: function success(t) {\n              e.success && e.success(t);\n            },\n            error: e.error\n          };\n        return J.debug(\"Call createGroup:\", e), Q.call(this, s, E.CREATE_GROUP);\n      }\n      var Fr = jr;\n      function Wr(e) {\n        var t;\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var r = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(r);\n        }\n        var o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = o.accessToken,\n          s = o.jid,\n          c = {\n            entities: [(t = {}, t[\"notification_ignore_\" + e.groupId] = !0, t)]\n          },\n          u = {\n            type: \"PUT\",\n            url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/users/\").concat(this.user, \"?resource=\").concat(s.clientResource),\n            data: JSON.stringify(c),\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + a,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call blockGroupMessages\", e), Q.call(this, u, E.BLOCK_GROUP);\n      }\n      var qr = Wr;\n      function Kr(e) {\n        if (\"number\" != typeof e.limit) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            limit: e.limit,\n            cursor: e.cursor\n          };\n        e.cursor || delete a.cursor;\n        var s = {\n          url: this.apiUrl + \"/\" + o + \"/\" + n + \"/publicchatgroups\",\n          type: \"GET\",\n          dataType: \"json\",\n          data: a,\n          headers: {\n            Authorization: \"Bearer \" + i,\n            \"Content-Type\": \"application/json\"\n          },\n          success: e.success,\n          error: e.error\n        };\n        return J.debug(\"Call listGroups\", e), Q.call(this, s, E.LIST_GROUP);\n      }\n      var zr = Kr;\n      function Vr(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/users/\" + this.user + \"/joined_chatgroups\",\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e && (null == e ? void 0 : e.success),\n            error: e && (null == e ? void 0 : e.error)\n          };\n        return J.debug(\"Call getJoinedGroups\", e), Q.call(this, a, E.GET_USER_GROUP);\n      }\n      function Jr(e) {\n        if (\"number\" != typeof e.pageNum || \"number\" != typeof e.pageSize) throw Error('Invalid parameter: \"pageNum or pageSize\"');\n        if (e.pageNum < 0 || e.pageSize < 0) throw Error('\"pageNum\" should >= 0 and \"pageSize\" should >= 0');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.needAffiliations || e.needRole ? \"/chatgroups/user/\".concat(this.user, \"?pagenum=\").concat(e.pageNum, \"&pagesize=\").concat(e.pageSize, \"&needAffiliations=\").concat(e.needAffiliations, \"&needRole=\").concat(e.needRole) : \"/users/\".concat(this.user, \"/joined_chatgroups?pagenum=\").concat(e.pageNum, \"&pagesize=\").concat(e.pageSize),\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + a,\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e && (null == e ? void 0 : e.success),\n            error: e && (null == e ? void 0 : e.error)\n          };\n        return J.debug(\"Call getGroup\", e), Q.call(this, s, E.GET_USER_GROUP).then(function (e) {\n          var t = e.uri,\n            r = e.entities,\n            o = [];\n          return t.includes(\"joined_chatgroups\") || (r.forEach(function (e) {\n            var t = {\n              affiliationsCount: e.affiliations_count,\n              groupName: e.name,\n              groupId: e.groupId,\n              role: e.permission,\n              disabled: e.disabled,\n              approval: e.membersonly,\n              allowInvites: e.allowinvites,\n              description: e.description,\n              maxUsers: e.maxusers,\n              public: e.public\n            };\n            o.push(t);\n          }), e.entities = o), e;\n        });\n      }\n      function Xr(e) {\n        if (\"string\" != typeof e.groupId || \"string\" != typeof e.newOwner) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = {\n            newowner: e.newOwner\n          },\n          o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = o.accessToken,\n          s = o.jid,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/chatgroups/\").concat(e.groupId, \"?resource=\").concat(s.clientResource),\n            type: \"PUT\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + a,\n              \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify(r),\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call changeOwner\", e), Q.call(this, c, E.CHANGE_OWNER);\n      }\n      var Yr = Xr;\n      function Qr(e) {\n        if (\"string\" != typeof e.groupId && !Array.isArray(e.groupId)) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatgroups/\" + e.groupId + \"?joined_time=true\",\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getGroupInfo\", e), Q.call(this, a, E.GET_GROUP_INFO);\n      }\n      function $r(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            groupname: e.groupName,\n            description: e.description,\n            custom: e.ext\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"?resource=\").concat(a.clientResource),\n            type: \"PUT\",\n            data: JSON.stringify(c),\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call modifyGroup\", e), Q.call(this, u, E.MODIFY_GROUP);\n      }\n      function Zr(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (isNaN(e.pageNum) || e.pageNum <= 0) throw Error('The parameter \"pageNum\" should be a positive number');\n        if (isNaN(e.pageSize) || e.pageSize <= 0) throw Error('The parameter \"pageSize\" should be a positive number');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = {\n            pagenum: e.pageNum,\n            pagesize: e.pageSize\n          },\n          o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = o.accessToken,\n          s = {\n            url: this.apiUrl + \"/\" + n + \"/\" + i + \"/chatgroups/\" + e.groupId + \"/users\",\n            dataType: \"json\",\n            type: \"GET\",\n            data: r,\n            headers: {\n              Authorization: \"Bearer \" + a,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call listGroupMember\", e), Q.call(this, s, E.LIST_GROUP_MEMBER);\n      }\n      var eo = Zr;\n      function to(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.groupId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatgroups/\" + a + \"/admin\",\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getGroupAdmin\", e), Q.call(this, s, E.GET_GROUP_ADMIN);\n      }\n      function ro(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            newadmin: e.username\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/admin?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(c),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call setGroupAdmin\", e), Q.call(this, u, E.SET_GROUP_ADMIN);\n      }\n      var oo = ro;\n      function no(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = e.username,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/admin/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call removeAdmin\", e), Q.call(this, u, E.REMOVE_GROUP_ADMIN);\n      }\n      var io = no;\n      function ao(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"?version=v3&resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call destroyGroup\", e), Q.call(this, c, E.DISSOLVE_GROUP);\n      }\n      var so = ao;\n      function co(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/quit?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call quitGroup\", e), Q.call(this, c, E.QUIT_GROUP);\n      }\n      var uo = co;\n      function lo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!Array.isArray(e.users)) throw Error('Invalid parameter: \"users\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = e.groupId,\n          o = {\n            usernames: e.users\n          },\n          n = this.context,\n          i = n.orgName,\n          a = n.appName,\n          s = n.accessToken,\n          c = n.jid,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(i, \"/\").concat(a, \"/chatgroups/\").concat(r, \"/invite?resource=\").concat(c.clientResource),\n            type: \"POST\",\n            data: JSON.stringify(o),\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + s,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call inviteUsersToGroup\", e), Q.call(this, u, E.INVITE_TO_GROUP);\n      }\n      var po = lo;\n      function ho(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(e.groupId, \"/apply?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify({\n              message: e.message || \"\"\n            }),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call joinGroup\", e), Q.call(this, s, E.JOIN_GROUP);\n      }\n      function fo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.applicant || \"\" === e.applicant) throw Error('Invalid parameter: \"applicant\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            applicant: e.applicant,\n            verifyResult: !0,\n            reason: \"no clue\"\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/apply_verify?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(c),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call agreeJoinGroup\", e), Q.call(this, u, E.AGREE_JOIN_GROUP);\n      }\n      var mo = fo;\n      function go(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.applicant || \"\" === e.applicant) throw Error('Invalid parameter: \"applicant\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            applicant: e.applicant,\n            verifyResult: !1,\n            reason: e.reason || \"\"\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/apply_verify?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(c),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call rejectGroupJoinRequest\", e), Q.call(this, u, E.REJECT_JOIN_GROUP);\n      }\n      var Eo = go;\n      function yo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.invitee || \"\" === e.invitee) throw Error('Invalid parameter: \"invitee\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            invitee: e.invitee,\n            verifyResult: !0\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/invite_verify?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(c),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call acceptGroupInvite\", e), Q.call(this, u, E.AGREE_INVITE_GROUP);\n      }\n      var To = yo;\n      function vo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.invitee || \"\" === e.invitee) throw Error('Invalid parameter: \"invitee\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            invitee: e.invitee,\n            verifyResult: !1\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/invite_verify?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(c),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call rejectGroupInvite\", e), Q.call(this, u, E.REJECT_INVITE_GROUP);\n      }\n      var _o = vo;\n      function Oo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = e.groupId,\n          o = e.username,\n          n = this.context,\n          i = n.orgName,\n          a = n.appName,\n          s = n.accessToken,\n          c = n.jid,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(i, \"/\").concat(a, \"/chatgroups/\").concat(r, \"/users/\").concat(o, \"?resource=\").concat(c.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + s,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call removeGroupMember\", e), Q.call(this, u, E.REMOVE_GROUP_MEMBER);\n      }\n      var Ro = Oo;\n      function Io(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!Array.isArray(e.users)) throw Error('Invalid parameter: \"users\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = e.users.join(\",\"),\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/users/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call removeGroupMembers\", e), Q.call(this, u, E.MULTI_REMOVE_GROUP_MEMBER);\n      }\n      var So = Io;\n      function Co(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!(Array.isArray(e.username) || \"string\" == typeof e.username && \"\" !== e.username)) throw Error('Invalid parameter: \"username\"');\n        if (\"number\" != typeof e.muteDuration) throw Error('Invalid parameter: \"muteDuration\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            usernames: \"string\" == typeof e.username ? [e.username] : e.username,\n            mute_duration: e.muteDuration\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/mute?resource=\").concat(a.clientResource),\n            dataType: \"json\",\n            type: \"POST\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify(c),\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call muteGroupMember\", e), Q.call(this, u, E.MUTE_GROUP_MEMBER);\n      }\n      var No = Co;\n      function Ao(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!(Array.isArray(e.username) || \"string\" == typeof e.username && \"\" !== e.username)) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = e.username,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/mute/\").concat(c, \"?resource=\").concat(a.clientResource),\n            dataType: \"json\",\n            type: \"DELETE\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call unmuteGroupMember\", e), Q.call(this, u, E.UNMUTE_GROUP_MEMBER);\n      }\n      var Mo = Ao;\n      function bo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.groupId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatgroups/\" + a + \"/mute\",\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getGroupMuteList\", e), Q.call(this, s, E.GET_GROUP_MUTE_LIST);\n      }\n      var Uo = bo,\n        wo = bo;\n      function ko(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = e.username,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/blocks/users/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call blockGroupMember\", e), Q.call(this, u, E.BLOCK_GROUP_MEMBER);\n      }\n      var Po = ko;\n      function Lo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            usernames: e.usernames\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/blocks/users?resource=\").concat(a.clientResource),\n            data: JSON.stringify(c),\n            type: \"POST\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call blockGroupMembers\", e), Q.call(this, u, E.BLOCK_GROUP_MEMBERS);\n      }\n      var Do = Lo;\n      function Go(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = e.username,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/blocks/users/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call unblockGroupMember\", e), Q.call(this, u, E.UNBLOCK_GROUP_MEMBER);\n      }\n      var xo = Go;\n      function Bo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = e.usernames.join(\",\"),\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/blocks/users/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call unblockGroupMembers\", e), Q.call(this, u, E.UNBLOCK_GROUP_MEMBERS);\n      }\n      var Ho = Bo;\n      function jo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.groupId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatgroups/\" + a + \"/blocks/users\",\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getGroupBlacklist\", e), Q.call(this, s, E.GET_GROUP_BLACK_LIST);\n      }\n      var Fo = jo,\n        Wo = jo;\n      function qo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/ban?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call disableSendGroupMsg\", e), Q.call(this, c, E.DISABLED_SEND_GROUP_MSG);\n      }\n      function Ko(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/ban?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call enableSendGroupMsg\", e), Q.call(this, c, E.ENABLE_SEND_GROUP_MSG);\n      }\n      function zo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!Array.isArray(e.users)) throw Error('Invalid parameter: \"users\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            usernames: e.users\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/white/users?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            data: JSON.stringify(c),\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call addUsersToGroupWhitelist\", e), Q.call(this, u, E.ADD_USERS_TO_GROUP_WHITE);\n      }\n      var Vo = zo;\n      function Jo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.userName || \"\" === e.userName) throw Error('Invalid parameter: \"userName\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/white/users/\").concat(e.userName, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call removeGroupAllowlistMember\", e), Q.call(this, c, E.REMOVE_GROUP_WHITE_MEMBER);\n      }\n      var Xo = Jo,\n        Yo = Jo;\n      function Qo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.groupId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatgroups/\" + a + \"/white/users\",\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getGroupAllowlist\", e), Q.call(this, s, E.GET_GROUP_WHITE_LIST);\n      }\n      var $o = Qo;\n      function Zo(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.userName || \"\" === e.userName) throw Error('Invalid parameter: \"userName\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.groupId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatgroups/\" + a + \"/white/users/\" + e.userName,\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call isInGroupAllowlist\", e), Q.call(this, s, E.IS_IN_GROUP_WHITE_LIST);\n      }\n      var en = Zo,\n        tn = Zo;\n      function rn(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.userId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/sdk/group/\" + e.groupId + \"/mute/\" + a,\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i\n            }\n          };\n        return J.debug(\"Call isInGroupMutelist\", e), Q.call(this, s).then(function (e) {\n          return e.data;\n        });\n      }\n      function on(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.msgId || \"\" === e.msgId) throw Error('Invalid parameter: \"msgId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatgroups/\" + e.groupId + \"/acks/\" + e.msgId,\n            dataType: \"json\",\n            type: \"GET\",\n            data: {\n              limit: 500,\n              key: void 0\n            },\n            headers: {\n              Authorization: \"Bearer \" + i\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getGroupMsgReadUser\", e), Q.call(this, a, E.GET_GROUP_MSG_READ_USER);\n      }\n      function nn(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.groupId,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(a, \"/announcement\"),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call fetchGroupAnnouncement\", e), Q.call(this, s, E.GET_GROUP_ANN);\n      }\n      function an(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.announcement) throw Error('Invalid parameter: \"announcement\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = {\n            announcement: e.announcement\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/announcement?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(c),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call updateGroupAnnouncement\", e), Q.call(this, u, E.UPDATE_GROUP_ANN);\n      }\n      function sn(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"object\" != _typeof(e.file)) throw Error('Invalid parameter: \"file\"');\n        if (qt.call(this)) {\n          var t = this.context,\n            r = t.orgName,\n            o = t.appName,\n            n = t.accessToken,\n            i = t.jid,\n            a = e.groupId;\n          ae.call(this, {\n            uploadUrl: \"\".concat(this.apiUrl, \"/\").concat(r, \"/\").concat(o, \"/chatgroups/\").concat(a, \"/share_files?resource=\").concat(i.clientResource),\n            onFileUploadProgress: e.onFileUploadProgress,\n            onFileUploadComplete: e.onFileUploadComplete,\n            onFileUploadError: e.onFileUploadError,\n            onFileUploadCanceled: e.onFileUploadCanceled,\n            accessToken: n,\n            apiUrl: this.apiUrl,\n            file: e.file,\n            appKey: this.context.appKey\n          }, E.UPLOAD_GROUP_FILE), J.debug(\"Call uploadGroupSharedFile\", e);\n        }\n      }\n      function cn(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.fileId || \"\" === e.fileId) throw Error('Invalid parameter: \"file\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.groupId,\n          c = e.fileId,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(s, \"/share_files/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call deleteGroupSharedFile\", e), Q.call(this, u, E.DELETE_GROUP_FILE);\n      }\n      function un(e) {\n        if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.pageNum || 1,\n          s = e.pageSize || 10,\n          c = e.groupId,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatgroups/\").concat(c, \"/share_files?pagenum=\").concat(a, \"&pagesize=\").concat(s),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getGroupSharedFilelist\", e), Q.call(this, u, E.GET_GROUP_FILE_LIST);\n      }\n      var ln = un;\n      function pn(e) {\n        var t = this.context,\n          r = t.orgName,\n          o = t.appName,\n          n = t.accessToken,\n          i = this.apiUrl,\n          a = e.groupId,\n          s = e.fileId;\n        se.call(this, {\n          url: \"\".concat(i, \"/\").concat(r, \"/\").concat(o, \"/chatgroups/\").concat(a, \"/share_files/\").concat(s),\n          onFileDownloadComplete: e.onFileDownloadComplete,\n          onFileDownloadError: e.onFileDownloadError,\n          accessToken: n,\n          id: s,\n          secret: e.secret\n        }, E.DOWN_GROUP_FILE), J.debug(\"Call downloadGroupSharedFile\", e);\n      }\n      function dn(e) {\n        return Br(this, void 0, void 0, function () {\n          var t, r, o, n, i, a, s, c, u, l, d;\n          return Hr(this, function (h) {\n            switch (h.label) {\n              case 0:\n                if (t = e.groupId, r = e.userId, o = e.memberAttributes, \"string\" != typeof t || \"\" === t) throw Error('Invalid parameter: \"groupId\"');\n                if (\"string\" != typeof r || \"\" === r) throw Error('Invalid parameter: \"userId\"');\n                if (\"object\" != _typeof(o)) throw Error('Invalid parameter: \"memberAttributes\"');\n                return qt.call(this) ? (i = this.context, a = i.orgName, s = i.appName, c = i.accessToken, u = i.jid, l = {\n                  metaData: o\n                }, d = {\n                  url: \"\".concat(this.apiUrl, \"/\").concat(a, \"/\").concat(s, \"/sdk/metadata/chatgroup/\").concat(t, \"/user/\").concat(r, \"?resource=\").concat(u.clientResource),\n                  type: \"PUT\",\n                  dataType: \"json\",\n                  data: JSON.stringify(l),\n                  headers: {\n                    Authorization: \"Bearer \" + c,\n                    \"Content-Type\": \"application/json\"\n                  }\n                }, J.debug(\"Call setGroupMemberAttributes\", e), [4, Q.call(this, d, E.SET_GROUP_MEMBER_ATTRS)]) : (n = m.create({\n                  type: p.REST_PARAMS_STATUS,\n                  message: \"appkey or token error\"\n                }), [2, Promise.reject(n)]);\n              case 1:\n                return h.sent(), [2];\n            }\n          });\n        });\n      }\n      function hn(e) {\n        var t = e.groupId,\n          r = e.userId;\n        return fn.call(this, {\n          groupId: t,\n          userIds: [r]\n        }).then(function (e) {\n          var t;\n          return {\n            type: e.type,\n            data: null === (t = e.data) || void 0 === t ? void 0 : t[r]\n          };\n        });\n      }\n      function fn(e) {\n        var t = e.groupId,\n          r = e.userIds,\n          o = e.keys,\n          n = void 0 === o ? [] : o;\n        if (\"string\" != typeof t || \"\" === t) throw Error('Invalid parameter: \"groupId\"');\n        if (!Array.isArray(r) || (null == r ? void 0 : r.length) <= 0) throw Error('Invalid parameter: \"userIds\"');\n        if (!Array.isArray(n)) throw Error('Invalid parameter: \"keys\"');\n        if (!qt.call(this)) {\n          var i = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(i);\n        }\n        var a = this.context,\n          s = a.orgName,\n          c = a.appName,\n          u = a.accessToken,\n          l = {\n            targets: r,\n            properties: n\n          },\n          d = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/sdk/metadata/chatgroup/\").concat(t, \"/get\"),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(l),\n            headers: {\n              Authorization: \"Bearer \" + u,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call getGroupMembersAttributes\", e), Q.call(this, d, E.GET_GROUP_MEMBER_ATTR).then(function (e) {\n          return {\n            type: e.type,\n            data: (null == e ? void 0 : e.data) || {}\n          };\n        });\n      }\n      function mn(e) {\n        var t = this;\n        if (\"number\" != typeof e.pagenum || \"number\" != typeof e.pagesize) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var r = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(r);\n        }\n        var o = {\n            pagenum: e.pagenum || 1,\n            pagesize: e.pagesize || 20\n          },\n          n = this.context,\n          i = n.orgName,\n          a = n.appName,\n          s = n.accessToken,\n          c = {\n            url: this.apiUrl + \"/\" + i + \"/\" + a + \"/chatrooms\",\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + s\n            },\n            data: o,\n            success: function success(t) {\n              \"function\" == typeof e.success && e.success(t);\n            },\n            error: function error(r) {\n              r.error && r.error_description && t.onError && t.onError({\n                type: p.WEBIM_CONNCTION_LOAD_CHATROOM_ERROR,\n                message: r.error_description,\n                data: r\n              }), \"function\" == typeof e.error && e.error(r);\n            }\n          };\n        return J.debug(\"Call getChatRooms\", e), Q.call(this, c, E.GET_CHATROOM_LIST);\n      }\n      function gn(e) {\n        if (\"string\" != typeof e.name) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = {\n            name: e.name,\n            description: e.description,\n            maxusers: e.maxusers,\n            owner: this.user,\n            members: e.members\n          },\n          o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = (o.accessToken, o.jid),\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/chatrooms?resource=\").concat(a.clientResource),\n            dataType: \"json\",\n            type: \"POST\",\n            data: JSON.stringify(r),\n            headers: {\n              Authorization: \"Bearer \" + e.token || false,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call createChatRoom\", e), Q.call(this, s, E.CREATE_CHATROOM);\n      }\n      function En(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = (r.accessToken, r.jid),\n          a = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(e.chatRoomId, \"?resource=\").concat(i.clientResource),\n            dataType: \"json\",\n            type: \"DELETE\",\n            headers: {\n              Authorization: \"Bearer \" + e.token || false\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call destroyChatRoom\", e), Q.call(this, a, E.DESTROY_CHATROOM);\n      }\n      function yn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatrooms/\" + e.chatRoomId,\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getChatRoomDetails\", e), Q.call(this, a, E.GET_CHATROOM_DETAIL);\n      }\n      function Tn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = {\n            groupname: e.chatRoomName,\n            description: e.description,\n            maxusers: e.maxusers\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"?resource=\").concat(a.clientResource),\n            type: \"PUT\",\n            data: JSON.stringify(c),\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call modifyChatRoom\", e), Q.call(this, u, E.MODIFY_CHATROOM);\n      }\n      function vn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId || \"string\" != typeof e.username) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = e.username,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/users/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call removeChatRoomMember\", e), Q.call(this, u, E.REMOVE_CHATROOM_MEMBER);\n      }\n      var _n = vn;\n      function On(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId || !Array.isArray(e.users)) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = e.chatRoomId,\n          o = e.users.join(\",\"),\n          n = this.context,\n          i = n.orgName,\n          a = n.appName,\n          s = n.accessToken,\n          c = n.jid,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(i, \"/\").concat(a, \"/chatrooms/\").concat(r, \"/users/\").concat(o, \"?resource=\").concat(c.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + s,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call removeChatRoomMembers\", e), Q.call(this, u, E.MULTI_REMOVE_CHATROOM_MEMBER);\n      }\n      var Rn = On;\n      function In(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId || !Array.isArray(e.users)) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = e.chatRoomId,\n          o = {\n            usernames: e.users\n          },\n          n = this.context,\n          i = n.orgName,\n          a = n.appName,\n          s = n.accessToken,\n          c = n.jid,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(i, \"/\").concat(a, \"/chatrooms/\").concat(r, \"/users?resource=\").concat(c.clientResource),\n            type: \"POST\",\n            data: JSON.stringify(o),\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + s,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call addUsersToChatRoom\", e), Q.call(this, u, E.ADD_USERS_TO_CHATROOM);\n      }\n      function Sn(e) {\n        if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        return J.debug(\"Call joinChatRoom\", e), this.mSync.handleChatRoom(e, \"join\");\n      }\n      function Cn(e) {\n        if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error(\"Invalid parameter\");\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        return J.debug(\"Call leaveChatRoom\", e), this.mSync.handleChatRoom(e, \"leave\");\n      }\n      var Nn = Cn;\n      function An(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (isNaN(e.pageNum) || e.pageNum <= 0) throw Error('The parameter \"pageNum\" should be a positive number');\n        if (isNaN(e.pageSize) || e.pageSize <= 0) throw Error('The parameter \"pageSize\" should be a positive number');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = {\n            pagenum: e.pageNum,\n            pagesize: e.pageSize\n          },\n          o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = o.accessToken,\n          s = {\n            url: this.apiUrl + \"/\" + n + \"/\" + i + \"/chatrooms/\" + e.chatRoomId + \"/users\",\n            dataType: \"json\",\n            type: \"GET\",\n            data: r,\n            headers: {\n              Authorization: \"Bearer \" + a,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call listChatRoomMembers\", e), Q.call(this, s, E.LIST_CHATROOM_MEMBERS);\n      }\n      var Mn = An;\n      function bn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.chatRoomId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatrooms/\" + a + \"/admin\",\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getChatRoomAdmin\", e), Q.call(this, s, E.GET_CHATROOM_ADMIN);\n      }\n      function Un(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = {\n            newadmin: e.username\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/admin?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(c),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call setChatRoomAdmin\", e), Q.call(this, u, E.SET_CHATROOM_ADMIN);\n      }\n      function wn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = e.username,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/admin/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call removeChatRoomAdmin\", e), Q.call(this, u, E.REMOVE_CHATROOM_ADMIN);\n      }\n      function kn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"groupId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (\"number\" != typeof e.muteDuration) throw Error('Invalid parameter: \"muteDuration\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = {\n            usernames: [e.username],\n            mute_duration: e.muteDuration\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/mute?resource=\").concat(a.clientResource),\n            dataType: \"json\",\n            type: \"POST\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify(c),\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call muteChatRoomMember\", e), Q.call(this, u, E.MUTE_CHATROOM_MEMBER);\n      }\n      function Pn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = e.username,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/mute/\").concat(c, \"?resource=\").concat(a.clientResource),\n            dataType: \"json\",\n            type: \"DELETE\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call unmuteChatRoomMember\", e), Q.call(this, u, E.REMOVE_MUTE_CHATROOM_MEMBER);\n      }\n      var Ln = Pn;\n      function Dn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.chatRoomId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatrooms/\" + a + \"/mute\",\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getChatRoomMutelist\", e), Q.call(this, s, E.GET_MUTE_CHATROOM_MEMBERS);\n      }\n      var Gn = Dn,\n        xn = Dn;\n      function Bn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = e.username,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/blocks/users/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call blockChatRoomMember\", e), Q.call(this, u, E.SET_CHATROOM_MEMBER_TO_BLACK);\n      }\n      var Hn = Bn;\n      function jn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = {\n            usernames: e.usernames\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/blocks/users?resource=\").concat(a.clientResource),\n            data: JSON.stringify(c),\n            type: \"POST\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Chat blockChatRoomMembers:\", u), Q.call(this, u, E.MULTI_SET_CHATROOM_MEMBER_TO_BLACK);\n      }\n      var Fn = jn;\n      function Wn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = e.username,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/blocks/users/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call unblockChatRoomMember\", e), Q.call(this, u, E.REMOVE_CHATROOM_MEMBER_BLACK);\n      }\n      var qn = Wn;\n      function Kn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = e.usernames.join(\",\"),\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/blocks/users/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call unblockChatRoomMembers\", e), Q.call(this, u, E.MULTI_REMOVE_CHATROOM_MEMBER_BLACK);\n      }\n      var zn = Kn;\n      function Vn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.chatRoomId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatrooms/\" + a + \"/blocks/users\",\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getChatRoomBlocklist\", e), Q.call(this, s, E.GET_CHATROOM_BLOCK_MEMBERS);\n      }\n      var Jn = Vn,\n        Xn = Vn;\n      function Yn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/ban?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call disableSendChatRoomMsg\", e), Q.call(this, c, E.DISABLED_CHATROOM_SEND_MSG);\n      }\n      function Qn(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/ban?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call enableSendChatRoomMsg\", e), Q.call(this, c, E.ENABLE_CHATROOM_SEND_MSG);\n      }\n      function $n(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!Array.isArray(e.users)) throw Error('Invalid parameter: \"users\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = {\n            usernames: e.users\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/white/users?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            data: JSON.stringify(c),\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call addUsersToChatRoomWhitelist\", e), Q.call(this, u, E.ADD_USERS_TO_CHATROOM);\n      }\n      var Zn = $n;\n      function ei(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (\"string\" != typeof e.userName || \"\" === e.userName) throw Error('Invalid parameter: \"userName\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.chatRoomId,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/white/users/\").concat(e.userName, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call removeChatRoomAllowlistMember\", e), Q.call(this, c, E.REMOVE_CHATROOM_WHITE_USERS);\n      }\n      var ti = ei,\n        ri = ei;\n      function oi(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.chatRoomId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatrooms/\" + a + \"/white/users\",\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getChatRoomAllowlist\", e), Q.call(this, s, E.GET_CHATROOM_WHITE_USERS);\n      }\n      var ni = oi;\n      function ii(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (\"string\" != typeof e.userName || \"\" === e.userName) throw Error('Invalid parameter: \"userName\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.chatRoomId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/chatrooms/\" + a + \"/white/users/\" + e.userName,\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call isInChatRoomAllowlist\", e), Q.call(this, s, E.CHECK_CHATROOM_WHITE_USER);\n      }\n      var ai = ii;\n      function si(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.userId,\n          s = {\n            url: this.apiUrl + \"/\" + o + \"/\" + n + \"/sdk/chatrooms/\" + e.chatRoomId + \"/mute/\" + a,\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + i\n            }\n          };\n        return J.debug(\"Call isInChatRoomMutelist\", e), Q.call(this, s).then(function (e) {\n          return e.data;\n        });\n      }\n      function ci(e) {\n        if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.roomId,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(a, \"/announcement\"),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call fetchChatRoomAnnouncement\", e), Q.call(this, s, E.GET_CHATROOM_ANN);\n      }\n      function ui(e) {\n        if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');\n        if (\"string\" != typeof e.announcement) throw Error('Invalid parameter: \"announcement\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.roomId,\n          c = {\n            announcement: e.announcement\n          },\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/announcement?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(c),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call updateChatRoomAnnouncement:\", e), Q.call(this, u, E.UPDATE_CHATROOM_ANN);\n      }\n      function li(e) {\n        if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');\n        if (\"object\" != _typeof(e.file)) throw Error('Invalid parameter: \"file\"');\n        if (qt.call(this)) {\n          var t = this.context,\n            r = t.orgName,\n            o = t.appName,\n            n = t.accessToken,\n            i = t.jid,\n            a = e.roomId;\n          ae.call(this, {\n            uploadUrl: \"\".concat(this.apiUrl, \"/\").concat(r, \"/\").concat(o, \"/chatrooms/\").concat(a, \"/share_files?resource=\").concat(i.clientResource),\n            onFileUploadProgress: e.onFileUploadProgress,\n            onFileUploadComplete: e.onFileUploadComplete,\n            onFileUploadError: e.onFileUploadError,\n            onFileUploadCanceled: e.onFileUploadCanceled,\n            accessToken: n,\n            apiUrl: this.apiUrl,\n            file: e.file,\n            appKey: this.context.appKey\n          }, E.UPLOAD_CHATROOM_FILE), J.debug(\"Call uploadChatRoomSharedFile\", e);\n        }\n      }\n      function pi(e) {\n        if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');\n        if (\"string\" != typeof e.fileId || \"\" === e.fileId) throw Error('Invalid parameter: \"fileId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = e.roomId,\n          c = e.fileId,\n          u = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(s, \"/share_files/\").concat(c, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call deleteChatRoomSharedFile\", e), Q.call(this, u, E.DELETE_CHATROOM_FILE);\n      }\n      function di(e) {\n        if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = e.roomId,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/chatrooms/\").concat(a, \"/share_files\"),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\",\n              accept: \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call fetchChatRoomSharedFileList\", e), Q.call(this, s, E.GET_CHATROOM_FILES);\n      }\n      var hi = di;\n      function fi(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);\n        if (e.attributeKeys && !Array.isArray(e.attributeKeys)) throw Error('\"Invalid parameter attributeKeys\": ' + e.attributeKeys);\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = (r.jid, e.chatRoomId),\n          s = {\n            keys: e.attributeKeys\n          },\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/metadata/chatroom/\").concat(a),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(s),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call getChatRoomAttributes:\", e), Q.call(this, c, E.GET_CHATROOM_ATTR).then(function (e) {\n          return {\n            data: e.data,\n            type: e.type\n          };\n        });\n      }\n      function mi(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);\n        if (\"object\" != _typeof(e.attributes)) throw Error(\"Invalid parameter attributes: \" + e.attributes);\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.userId,\n          s = e.chatRoomId,\n          c = e.attributes,\n          u = e.autoDelete,\n          l = void 0 === u || u,\n          d = e.isForced ? \"/forced\" : \"\",\n          h = {\n            metaData: c,\n            autoDelete: l ? \"DELETE\" : \"NO_DELETE\"\n          },\n          f = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/metadata/chatroom/\").concat(s, \"/user/\").concat(a) + d,\n            type: \"PUT\",\n            dataType: \"json\",\n            data: JSON.stringify(h),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call setChatRoomAttributes:\", e), Q.call(this, f, E.SET_CHATROOM_ATTR).then(function (e) {\n          return Kt(e);\n        });\n      }\n      function gi(e) {\n        var t;\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);\n        if (\"string\" != typeof e.attributeKey || \"\" === e.attributeKey) throw Error(\"Invalid parameter attributeKey: \" + e.attributeKey);\n        if (\"string\" != typeof e.attributeValue || \"\" === e.attributeValue) throw Error(\"Invalid parameter attributeValue: \" + e.attributeValue);\n        if (!qt.call(this)) {\n          var r = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(r);\n        }\n        var o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = o.accessToken,\n          s = o.userId,\n          c = e.chatRoomId,\n          u = e.attributeKey,\n          l = e.attributeValue,\n          d = e.autoDelete,\n          h = void 0 === d || d,\n          f = e.isForced ? \"/forced\" : \"\",\n          g = {\n            metaData: (t = {}, t[u] = l, t),\n            autoDelete: h ? \"DELETE\" : \"NO_DELETE\"\n          },\n          y = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/metadata/chatroom/\").concat(c, \"/user/\").concat(s) + f,\n            type: \"PUT\",\n            dataType: \"json\",\n            data: JSON.stringify(g),\n            headers: {\n              Authorization: \"Bearer \" + a,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call setChatRoomAttribute:\", e), Q.call(this, y, E.SET_CHATROOM_ATTR).then(function (e) {\n          var t = zt(e);\n          if (t) throw t;\n        });\n      }\n      function Ei(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);\n        if (!Array.isArray(e.attributeKeys)) throw Error('\"Invalid parameter attributes\": ' + e.attributeKeys);\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.userId,\n          s = e.chatRoomId,\n          c = e.attributeKeys,\n          u = e.isForced ? \"/forced\" : \"\",\n          l = {\n            keys: c\n          },\n          d = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/metadata/chatroom/\").concat(s, \"/user/\").concat(a) + u,\n            type: \"DELETE\",\n            dataType: \"json\",\n            data: JSON.stringify(l),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call removeChatRoomAttributes:\", e), Q.call(this, d, E.DELETE_CHATROOM_ATTR).then(function (e) {\n          return Kt(e);\n        });\n      }\n      function yi(e) {\n        if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);\n        if (\"string\" != typeof e.attributeKey || \"\" === e.attributeKey) throw Error('\"Invalid parameter attributeKey\": ' + e.attributeKey);\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.userId,\n          s = e.chatRoomId,\n          c = e.attributeKey,\n          u = e.isForced ? \"/forced\" : \"\",\n          l = {\n            keys: [c]\n          },\n          d = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/metadata/chatroom/\").concat(s, \"/user/\").concat(a) + u,\n            type: \"DELETE\",\n            dataType: \"json\",\n            data: JSON.stringify(l),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return J.debug(\"Call removeChatRoomAttribute:\", e), Q.call(this, d, E.DELETE_CHATROOM_ATTR).then(function (e) {\n          var t = zt(e);\n          if (t) throw t;\n        });\n      }\n      var Ti = function Ti(e, t, r, o) {\n          return new (r || (r = Promise))(function (n, i) {\n            function a(e) {\n              try {\n                c(o.next(e));\n              } catch (e) {\n                i(e);\n              }\n            }\n            function s(e) {\n              try {\n                c(o.throw(e));\n              } catch (e) {\n                i(e);\n              }\n            }\n            function c(e) {\n              var t;\n              e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {\n                e(t);\n              })).then(a, s);\n            }\n            c((o = o.apply(e, t || [])).next());\n          });\n        },\n        vi = function vi(e, t) {\n          var r,\n            o,\n            n,\n            i,\n            a = {\n              label: 0,\n              sent: function sent() {\n                if (1 & n[0]) throw n[1];\n                return n[1];\n              },\n              trys: [],\n              ops: []\n            };\n          return i = {\n            next: s(0),\n            throw: s(1),\n            return: s(2)\n          }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n            return this;\n          }), i;\n          function s(i) {\n            return function (s) {\n              return function (i) {\n                if (r) throw new TypeError(\"Generator is already executing.\");\n                for (; a;) {\n                  try {\n                    if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;\n                    switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {\n                      case 0:\n                      case 1:\n                        n = i;\n                        break;\n                      case 4:\n                        return a.label++, {\n                          value: i[1],\n                          done: !1\n                        };\n                      case 5:\n                        a.label++, o = i[1], i = [0];\n                        continue;\n                      case 7:\n                        i = a.ops.pop(), a.trys.pop();\n                        continue;\n                      default:\n                        if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                          a = 0;\n                          continue;\n                        }\n                        if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {\n                          a.label = i[1];\n                          break;\n                        }\n                        if (6 === i[0] && a.label < n[1]) {\n                          a.label = n[1], n = i;\n                          break;\n                        }\n                        if (n && a.label < n[2]) {\n                          a.label = n[2], a.ops.push(i);\n                          break;\n                        }\n                        n[2] && a.ops.pop(), a.trys.pop();\n                        continue;\n                    }\n                    i = t.call(e, a);\n                  } catch (e) {\n                    i = [6, e], o = 0;\n                  } finally {\n                    r = n = 0;\n                  }\n                }\n                if (5 & i[0]) throw i[1];\n                return {\n                  value: i[0] ? i[1] : void 0,\n                  done: !0\n                };\n              }([i, s]);\n            };\n          }\n        };\n      function _i(e) {\n        return Ti(this, void 0, void 0, function () {\n          var t, r, o, n, i, a, s, c, u;\n          return vi(this, function (l) {\n            switch (l.label) {\n              case 0:\n                if (\"string\" != typeof e.description) throw Error('Invalid parameter: \"description\"');\n                return qt.call(this) ? (r = this.context, o = r.accessToken, n = r.orgName, i = r.appName, a = r.userId, s = this.context.jid.clientResource, c = {\n                  ext: e.description\n                }, u = {\n                  url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/users/\").concat(a, \"/presence/\").concat(s, \"/1\"),\n                  type: \"POST\",\n                  dataType: \"json\",\n                  data: JSON.stringify(c),\n                  headers: {\n                    Authorization: \"Bearer \" + o,\n                    \"Content-Type\": \"application/json\"\n                  },\n                  success: e.success,\n                  error: e.error\n                }, J.debug(\"Call publishPresence:\", e), [4, Q.call(this, u)]) : (t = m.create({\n                  type: p.REST_PARAMS_STATUS,\n                  message: \"appkey or token error\"\n                }), [2, Promise.reject(t)]);\n              case 1:\n                return l.sent(), [2];\n            }\n          });\n        });\n      }\n      function Oi(e) {\n        if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');\n        if (!e.usernames.length) throw Error('\"usernames\" can not be empty');\n        if (\"number\" != typeof e.expiry) throw Error('Invalid parameter: \"expiry\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.userId,\n          a = r.accessToken,\n          s = {\n            usernames: e.usernames\n          },\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/users/\").concat(i, \"/presence/\").concat(e.expiry),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(s),\n            headers: {\n              Authorization: \"Bearer \" + a,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call subscribePresence:\", e), Q.call(this, c).then(function (e) {\n          return e.data = {\n            result: null == e ? void 0 : e.result\n          }, e;\n        });\n      }\n      function Ri(e) {\n        return Ti(this, void 0, void 0, function () {\n          var t, r, o, n, i, a, s;\n          return vi(this, function (c) {\n            switch (c.label) {\n              case 0:\n                if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');\n                if (!e.usernames.length) throw Error('\"usernames\" can not be empty');\n                return qt.call(this) ? (r = this.context, o = r.orgName, n = r.appName, i = r.userId, a = r.accessToken, s = {\n                  url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/users/\").concat(i, \"/presence\"),\n                  type: \"DELETE\",\n                  dataType: \"json\",\n                  data: JSON.stringify(e.usernames),\n                  headers: {\n                    Authorization: \"Bearer \" + a,\n                    \"Content-Type\": \"application/json\"\n                  },\n                  success: e.success,\n                  error: e.error\n                }, J.debug(\"Call unsubscribePresence:\", e), [4, Q.call(this, s)]) : (t = m.create({\n                  type: p.REST_PARAMS_STATUS,\n                  message: \"appkey or token error\"\n                }), [2, Promise.reject(t)]);\n              case 1:\n                return c.sent(), [2];\n            }\n          });\n        });\n      }\n      function Ii(e) {\n        if (\"number\" != typeof e.pageNum || \"number\" != typeof e.pageSize) throw Error('Invalid parameter: \"pageNum or pageSize\"');\n        if (e.pageNum < 0 || e.pageSize < 0) throw Error('\"pageNum\" should >= 0 and \"pageSize\" should >= 0');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.userId,\n          a = r.accessToken,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/users/\").concat(i, \"/presence/sublist?pageNum=\").concat(e.pageNum, \"&pageSize=\").concat(e.pageSize),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + a,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getSubscribedPresenceList:\", e), Q.call(this, s).then(function (e) {\n          return e.data = {\n            result: null == e ? void 0 : e.result\n          }, e;\n        });\n      }\n      var Si = Ii;\n      function Ci(e) {\n        if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');\n        if (!e.usernames.length) throw Error('\"usernames\" can not be empty');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = {\n            usernames: e.usernames\n          },\n          o = this.context,\n          n = o.orgName,\n          i = o.appName,\n          a = o.userId,\n          s = o.accessToken,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/users/\").concat(a, \"/presence\"),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(r),\n            headers: {\n              Authorization: \"Bearer \" + s,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getPresenceStatus:\", e), Q.call(this, c).then(function (e) {\n          return e.data = {\n            result: null == e ? void 0 : e.result\n          }, e;\n        });\n      }\n      function Ni(e) {\n        if (!(e.options instanceof Object)) throw Error('Invalid parameter: \"options\"');\n        var t = e.options.paramType;\n        if (\"number\" != typeof t || t < 0 || t > 2) throw Error('Invalid parameter: \"options of paramType\"');\n        if (0 === t) {\n          if (\"string\" != typeof e.options.remindType) throw Error('Invalid parameter: \"options of remindType\"');\n        } else if (1 === t) {\n          if (\"number\" != typeof e.options.duration) throw Error('Invalid parameter: \"options of duration\"');\n        } else if (2 === t) {\n          var r = e.options,\n            o = r.startTime,\n            n = r.endTime;\n          if (!(o instanceof Object && Object.keys(o).length)) throw Error('Invalid parameter: \"options of startTime\"');\n          if (!o.hours || \"number\" != typeof o.hours || !o.minutes || \"number\" != typeof o.minutes) throw Error('Invalid parameter: \"options of startTime of hours or minutes\"');\n          if (!(n instanceof Object && Object.keys(n).length)) throw Error('Invalid parameter: \"options of endTime\"');\n          if (!n.hours || \"number\" != typeof n.hours || !n.minutes || \"number\" != typeof n.minutes) throw Error('Invalid parameter: \"options of endTime of hours or minutes\"');\n        }\n        if (!qt.call(this)) {\n          var i = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(i);\n        }\n        var a = this.context,\n          s = a.accessToken,\n          c = a.orgName,\n          u = a.appName,\n          l = a.userId,\n          d = {};\n        switch (t) {\n          case 0:\n            d = {\n              type: e.options.remindType\n            };\n            break;\n          case 1:\n            d = {\n              ignoreDuration: e.options.duration\n            };\n            break;\n          case 2:\n            var h = e.options;\n            o = h.startTime, n = h.endTime, d = {\n              ignoreInterval: \"\".concat(o.hours, \":\").concat(o.minutes, \"-\").concat(n.hours, \":\").concat(n.minutes)\n            };\n        }\n        var f = {\n          url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/users/\").concat(l, \"/notification/user/\").concat(l),\n          type: \"PUT\",\n          dataType: \"json\",\n          data: JSON.stringify(d),\n          headers: {\n            Authorization: \"Bearer \" + s,\n            \"Content-Type\": \"application/json\"\n          },\n          success: e.success,\n          error: e.error\n        };\n        return J.debug(\"Call setSilentModeForAll:\", e), Q.call(this, f);\n      }\n      function Ai(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.accessToken,\n          n = r.orgName,\n          i = r.appName,\n          a = r.userId,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/users/\").concat(a, \"/notification/user/\").concat(a),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + o,\n              \"Content-Type\": \"application/json\"\n            },\n            success: null == e ? void 0 : e.success,\n            error: null == e ? void 0 : e.error\n          };\n        return J.debug(\"Call getSilentModeForAll:\", e), Q.call(this, s);\n      }\n      function Mi(e) {\n        if (\"string\" != typeof e.conversationId || !e.conversationId) throw Error('Invalid parameter: \"conversationId\"');\n        if (\"string\" != typeof e.type || !e.type) throw Error('Invalid parameter: \"type\"');\n        if (!(e.options instanceof Object)) throw Error('Invalid parameter: \"options\"');\n        var t = e.options.paramType;\n        if (\"number\" != typeof t || t < 0 || t > 2) throw Error('Invalid parameter: \"options of paramType\"');\n        if (0 === t) {\n          if (\"string\" != typeof e.options.remindType) throw Error('Invalid parameter: \"options of remindType\"');\n        } else if (1 === t) {\n          if (\"number\" != typeof e.options.duration) throw Error('Invalid parameter: \"options of duration\"');\n        } else if (2 === t) {\n          var r = e.options,\n            o = r.startTime,\n            n = r.endTime;\n          if (!(o instanceof Object && Object.keys(o).length)) throw Error('Invalid parameter: \"options of startTime\"');\n          if (!o.hours || \"number\" != typeof o.hours || !o.minutes || \"number\" != typeof o.minutes) throw Error('Invalid parameter: \"options of startTime of hours or minutes\"');\n          if (!(n instanceof Object && Object.keys(n).length)) throw Error('Invalid parameter: \"options of endTime\"');\n          if (!n.hours || \"number\" != typeof n.hours || !n.minutes || \"number\" != typeof n.minutes) throw Error('Invalid parameter: \"options of endTime of hours or minutes\"');\n        }\n        if (!qt.call(this)) {\n          var i = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(i);\n        }\n        var a = this.context,\n          s = a.accessToken,\n          c = a.orgName,\n          u = a.appName,\n          l = a.userId,\n          d = \"chatgroup\",\n          h = {};\n        switch (t) {\n          case 0:\n            h = {\n              type: e.options.remindType\n            };\n            break;\n          case 1:\n            h = {\n              ignoreDuration: e.options.duration\n            };\n            break;\n          case 2:\n            var f = e.options;\n            o = f.startTime, n = f.endTime, h = {\n              ignoreInterval: \"\".concat(o.hours, \":\").concat(o.minutes, \"-\").concat(n.hours, \":\").concat(n.minutes)\n            };\n        }\n        \"singleChat\" === e.type && (d = \"user\");\n        var g = {\n          url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/users/\").concat(l, \"/notification/\").concat(d, \"/\").concat(e.conversationId),\n          type: \"PUT\",\n          dataType: \"json\",\n          data: JSON.stringify(h),\n          headers: {\n            Authorization: \"Bearer \" + s,\n            \"Content-Type\": \"application/json\"\n          },\n          success: e.success,\n          error: e.error\n        };\n        return J.debug(\"Call setSilentModeForConversation:\", e), Q.call(this, g);\n      }\n      function bi(e) {\n        if (\"string\" != typeof e.conversationId || !e.conversationId) throw Error('Invalid parameter: \"conversationId\"');\n        if (\"string\" != typeof e.type || !e.type) throw Error('Invalid parameter: \"type\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.accessToken,\n          n = r.orgName,\n          i = r.appName,\n          a = r.userId,\n          s = \"chatgroup\";\n        \"singleChat\" === e.type && (s = \"user\");\n        var c = {\n          url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/users/\").concat(a, \"/notification/\").concat(s, \"/\").concat(e.conversationId),\n          type: \"PUT\",\n          dataType: \"json\",\n          data: JSON.stringify({\n            type: \"DEFAULT\"\n          }),\n          headers: {\n            Authorization: \"Bearer \" + o,\n            \"Content-Type\": \"application/json\"\n          },\n          success: e.success,\n          error: e.error\n        };\n        return J.debug(\"Call clearRemindTypeForConversation:\", e), Q.call(this, c);\n      }\n      function Ui(e) {\n        if (\"string\" != typeof e.conversationId || !e.conversationId) throw Error('Invalid parameter: \"conversationId\"');\n        if (\"string\" != typeof e.type || !e.type) throw Error('Invalid parameter: \"type\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.accessToken,\n          n = r.orgName,\n          i = r.appName,\n          a = r.userId,\n          s = \"chatgroup\";\n        \"singleChat\" === e.type && (s = \"user\");\n        var c = {\n          url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/users/\").concat(a, \"/notification/\").concat(s, \"/\").concat(e.conversationId),\n          type: \"GET\",\n          dataType: \"json\",\n          headers: {\n            Authorization: \"Bearer \" + o,\n            \"Content-Type\": \"application/json\"\n          },\n          success: e.success,\n          error: e.error\n        };\n        return J.debug(\"Call getSilentModeForConversation:\", e), Q.call(this, c);\n      }\n      function wi(e) {\n        if (!Array.isArray(e.conversationList)) throw Error('Invalid parameter: \"conversationList\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.accessToken,\n          n = r.orgName,\n          i = r.appName,\n          a = r.userId,\n          s = [],\n          c = [];\n        e.conversationList.forEach(function (e) {\n          \"singleChat\" === e.type ? s.push(e.id) : c.push(e.id);\n        });\n        var u = s.length ? s.join(\",\") : \"\",\n          l = c.length ? c.join(\",\") : \"\",\n          d = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/users/\").concat(a, \"/notification?user=\").concat(u, \"&group=\").concat(l),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + o,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call getSilentModeForConversations:\", e), Q.call(this, d);\n      }\n      function ki(e) {\n        if (\"string\" != typeof e.language || !e.language) throw Error('Invalid parameter: \"language\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = {\n            translationLanguage: e.language\n          },\n          o = this.context,\n          n = o.accessToken,\n          i = o.orgName,\n          a = o.appName,\n          s = o.userId,\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(i, \"/\").concat(a, \"/users/\").concat(s, \"/notification/language\"),\n            type: \"PUT\",\n            dataType: \"json\",\n            data: JSON.stringify(r),\n            headers: {\n              Authorization: \"Bearer \" + n,\n              \"Content-Type\": \"application/json\"\n            },\n            success: e.success,\n            error: e.error\n          };\n        return J.debug(\"Call setPushPerformLanguage:\", e), Q.call(this, c);\n      }\n      function Pi(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.accessToken,\n          n = r.orgName,\n          i = r.appName,\n          a = r.userId,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(n, \"/\").concat(i, \"/users/\").concat(a, \"/notification/language\"),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + o,\n              \"Content-Type\": \"application/json\"\n            },\n            success: null == e ? void 0 : e.success,\n            error: null == e ? void 0 : e.error\n          };\n        return J.debug(\"Call getPushPerformLanguage:\", e), Q.call(this, s);\n      }\n      var Li = function Li(e, t, r, o) {\n          return new (r || (r = Promise))(function (n, i) {\n            function a(e) {\n              try {\n                c(o.next(e));\n              } catch (e) {\n                i(e);\n              }\n            }\n            function s(e) {\n              try {\n                c(o.throw(e));\n              } catch (e) {\n                i(e);\n              }\n            }\n            function c(e) {\n              var t;\n              e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {\n                e(t);\n              })).then(a, s);\n            }\n            c((o = o.apply(e, t || [])).next());\n          });\n        },\n        Di = function Di(e, t) {\n          var r,\n            o,\n            n,\n            i,\n            a = {\n              label: 0,\n              sent: function sent() {\n                if (1 & n[0]) throw n[1];\n                return n[1];\n              },\n              trys: [],\n              ops: []\n            };\n          return i = {\n            next: s(0),\n            throw: s(1),\n            return: s(2)\n          }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n            return this;\n          }), i;\n          function s(i) {\n            return function (s) {\n              return function (i) {\n                if (r) throw new TypeError(\"Generator is already executing.\");\n                for (; a;) {\n                  try {\n                    if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;\n                    switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {\n                      case 0:\n                      case 1:\n                        n = i;\n                        break;\n                      case 4:\n                        return a.label++, {\n                          value: i[1],\n                          done: !1\n                        };\n                      case 5:\n                        a.label++, o = i[1], i = [0];\n                        continue;\n                      case 7:\n                        i = a.ops.pop(), a.trys.pop();\n                        continue;\n                      default:\n                        if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                          a = 0;\n                          continue;\n                        }\n                        if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {\n                          a.label = i[1];\n                          break;\n                        }\n                        if (6 === i[0] && a.label < n[1]) {\n                          a.label = n[1], n = i;\n                          break;\n                        }\n                        if (n && a.label < n[2]) {\n                          a.label = n[2], a.ops.push(i);\n                          break;\n                        }\n                        n[2] && a.ops.pop(), a.trys.pop();\n                        continue;\n                    }\n                    i = t.call(e, a);\n                  } catch (e) {\n                    i = [6, e], o = 0;\n                  } finally {\n                    r = n = 0;\n                  }\n                }\n                if (5 & i[0]) throw i[1];\n                return {\n                  value: i[0] ? i[1] : void 0,\n                  done: !0\n                };\n              }([i, s]);\n            };\n          }\n        };\n      function Gi(e) {\n        if (\"string\" != typeof e.name || \"\" === e.name) throw Error(\"Invalid parameter name: \".concat(e.name));\n        if (\"string\" != typeof e.messageId || \"\" === e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));\n        if (\"string\" != typeof e.parentId || \"\" === e.parentId) throw Error(\"Invalid parameter parentId: \".concat(e.parentId));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = {\n            name: e.name,\n            msg_id: e.messageId,\n            group_id: e.parentId,\n            owner: this.user\n          },\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/thread?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(s),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, c).then(function (e) {\n          var t = e.data.thread_id;\n          return e.data = {\n            chatThreadId: t\n          }, e;\n        });\n      }\n      function xi(e) {\n        if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/thread/\").concat(e.chatThreadId, \"/user/\").concat(this.user, \"/join?resource=\").concat(a.clientResource),\n            type: \"POST\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, s).then(function (e) {\n          var t = e.data.detail;\n          return t.messageId = t.msgId, t.parentId = t.groupId, delete t.msgId, delete t.groupId, e;\n        });\n      }\n      function Bi(e) {\n        return Li(this, void 0, void 0, function () {\n          var t, r, o, n, i, a, s;\n          return Di(this, function (c) {\n            switch (c.label) {\n              case 0:\n                if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));\n                return qt.call(this) ? (r = this.context, o = r.orgName, n = r.appName, i = r.accessToken, a = r.jid, s = {\n                  url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/thread/\").concat(e.chatThreadId, \"/user/\").concat(this.user, \"/quit?resource=\").concat(a.clientResource),\n                  type: \"DELETE\",\n                  dataType: \"json\",\n                  headers: {\n                    Authorization: \"Bearer \" + i,\n                    \"Content-Type\": \"application/json\"\n                  }\n                }, [4, Q.call(this, s)]) : (t = m.create({\n                  type: p.REST_PARAMS_STATUS,\n                  message: \"appkey or token error\"\n                }), [2, Promise.reject(t)]);\n              case 1:\n                return c.sent(), [2];\n            }\n          });\n        });\n      }\n      function Hi(e) {\n        return Li(this, void 0, void 0, function () {\n          var t, r, o, n, i, a, s;\n          return Di(this, function (c) {\n            switch (c.label) {\n              case 0:\n                if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));\n                return qt.call(this) ? (r = this.context, o = r.orgName, n = r.appName, i = r.accessToken, a = r.jid, s = {\n                  url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/thread/\").concat(e.chatThreadId, \"?resource=\").concat(a.clientResource),\n                  type: \"DELETE\",\n                  dataType: \"json\",\n                  headers: {\n                    Authorization: \"Bearer \" + i,\n                    \"Content-Type\": \"application/json\"\n                  }\n                }, [4, Q.call(this, s)]) : (t = m.create({\n                  type: p.REST_PARAMS_STATUS,\n                  message: \"appkey or token error\"\n                }), [2, Promise.reject(t)]);\n              case 1:\n                return c.sent(), [2];\n            }\n          });\n        });\n      }\n      function ji(e) {\n        if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));\n        if (\"string\" != typeof e.name || \"\" === e.name) throw Error(\"Invalid parameter name: \".concat(e.name));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = {\n            name: e.name\n          },\n          c = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/thread/\").concat(e.chatThreadId, \"?resource=\").concat(a.clientResource),\n            type: \"PUT\",\n            dataType: \"json\",\n            data: JSON.stringify(s),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, c);\n      }\n      function Fi(e) {\n        if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            limit: e.pageSize || 20,\n            cursor: e.cursor || \"\"\n          },\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/thread/\").concat(e.chatThreadId, \"/users\"),\n            type: \"GET\",\n            dataType: \"json\",\n            data: a,\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, s);\n      }\n      function Wi(e) {\n        if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));\n        if (\"string\" != typeof e.username || \"\" === e.username) throw Error(\"Invalid parameter username: \".concat(e.username));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = r.jid,\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/thread/\").concat(e.chatThreadId, \"/users/\").concat(e.username, \"?resource=\").concat(a.clientResource),\n            type: \"DELETE\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, s);\n      }\n      function qi(e) {\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            limit: e.pageSize || 20,\n            cursor: e.cursor || \"\"\n          },\n          s = {\n            url: e.parentId ? \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/threads/chatgroups/\").concat(e.parentId, \"/user/\").concat(this.user) : \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/threads/user/\").concat(this.user),\n            type: \"GET\",\n            dataType: \"json\",\n            data: a,\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, s).then(function (e) {\n          var t = e.entities;\n          return null == t || t.forEach(function (e) {\n            e.parentId = e.groupId, e.messageId = e.msgId, delete e.groupId, delete e.msgId;\n          }), e;\n        });\n      }\n      function Ki(e) {\n        if (\"string\" != typeof e.parentId || \"\" === e.parentId) throw Error(\"Invalid parameter parentId: \".concat(e.parentId));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            cursor: e.cursor || \"\",\n            limit: e.pageSize || 20\n          },\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/threads/chatgroups/\").concat(e.parentId),\n            type: \"GET\",\n            dataType: \"json\",\n            data: a,\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, s).then(function (e) {\n          var t = e.entities;\n          return null == t || t.forEach(function (e) {\n            e.parentId = e.groupId, e.messageId = e.msgId, delete e.groupId, delete e.msgId;\n          }), e;\n        });\n      }\n      function zi(e) {\n        if (!Array.isArray(e.chatThreadIds)) throw Error(\"Invalid parameter chatThreadIds: \".concat(e.chatThreadIds));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            threadIds: e.chatThreadIds\n          },\n          s = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/thread/message\"),\n            type: \"POST\",\n            dataType: \"json\",\n            data: JSON.stringify(a),\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, s).then(function (e) {\n          return function (e) {\n            var t = e.entities;\n            return null == t || t.forEach(function (e) {\n              e.chatThreadId = e.thread_id, e.last_message && \"{}\" !== JSON.stringify(e.last_message) ? e.lastMessage = he(e.last_message) : e.lastMessage = e.last_message, delete e.thread_id, delete e.last_message;\n            }), e;\n          }(e);\n        });\n      }\n      function Vi(e) {\n        if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/thread/\").concat(e.chatThreadId),\n            type: \"GET\",\n            dataType: \"json\",\n            headers: {\n              Authorization: \"Bearer \" + i,\n              \"Content-Type\": \"application/json\"\n            }\n          };\n        return Q.call(this, a).then(function (e) {\n          return e.data.affiliationsCount = e.data.affiliations_count, e.data.messageId = e.data.msgId, e.data.parentId = e.data.groupId, delete e.data.affiliations_count, delete e.data.msgId, delete e.data.groupId, e;\n        });\n      }\n      function Ji() {\n        if (!qt.call(this)) {\n          var e = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(e);\n        }\n        var t = this.context,\n          r = t.orgName,\n          o = t.appName,\n          n = t.accessToken,\n          i = {\n            url: \"\".concat(this.apiUrl, \"/\").concat(r, \"/\").concat(o, \"/users/\").concat(this.user, \"/translate/support/language\"),\n            dataType: \"json\",\n            type: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + n\n            }\n          };\n        return J.debug(\"Call getSupportedLanguages\"), Q.call(this, i);\n      }\n      function Xi(e) {\n        if (\"string\" != typeof e.text || \"\" === e.text) throw Error('Invalid parameter: \"text\"');\n        if (!Array.isArray(e.languages)) throw Error('Invalid parameter: \"language\"');\n        if (!qt.call(this)) {\n          var t = m.create({\n            type: p.REST_PARAMS_STATUS,\n            message: \"appkey or token error\"\n          });\n          return Promise.reject(t);\n        }\n        var r = this.context,\n          o = r.orgName,\n          n = r.appName,\n          i = r.accessToken,\n          a = \"\".concat(this.apiUrl, \"/\").concat(o, \"/\").concat(n, \"/users/\").concat(this.user, \"/translate\"),\n          s = {\n            text: e.text,\n            to: e.languages\n          },\n          c = {\n            url: a,\n            dataType: \"json\",\n            type: \"POST\",\n            data: JSON.stringify(s),\n            headers: {\n              Authorization: \"Bearer \" + i\n            }\n          };\n        return J.debug(\"Call translateMessage\"), Q.call(this, c);\n      }\n      var _Yi = function Yi() {\n          return _Yi = Object.assign || function (e) {\n            for (var t, r = 1, o = arguments.length; r < o; r++) {\n              for (var n in t = arguments[r]) {\n                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n              }\n            }\n            return e;\n          }, _Yi.apply(this, arguments);\n        },\n        Qi = ue.getEnvInfo(),\n        $i = \"web\" === Qi.platform,\n        Zi = function Zi() {},\n        ea = {\n          CLOSED: 3,\n          CLOSING: 2,\n          CONNECTING: 0,\n          OPEN: 1\n        },\n        ta = function () {\n          function r(o) {\n            var u;\n            if (this.name = \"connection\", this.max_cache_length = 100, this.isDebug = o.isDebug || !1, this.isReport = !1, this.isHttpDNS = void 0 === o.isHttpDNS ? $i : o.isHttpDNS, this.heartBeatWait = o.heartBeatWait || 3e4, this.autoReconnectNumMax = o.autoReconnectNumMax || 5, this.refreshDNSIntervals = this.autoReconnectNumMax < 5 ? this.autoReconnectNumMax : 5, this.delivery = o.delivery || !1, this.dnsArr = [\"https://rs.easemob.com\", \"https://rs.chat.agora.io\", \"http://59.110.89.59\", \"http://39.97.193.190\", \"http://39.97.193.187\"], this.dnsIndex = 0, this.dnsTotal = this.dnsArr.length, this.restHosts = [], this.restTotal = 0, this.restIndex = 0, this.hostIndex = 0, this.socketHost = [], this.hostTotal = 0, this.times = 1, this.autoReconnectNumTotal = 0, this.domain = \"easemob.com\", this.appKey = o.appKey, this.appName = \"\", this.orgName = \"\", this.token = \"\", this.grantType = \"\", this.apiUrl = o.apiUrl || \"\", this.url = o.url || \"\", this.https = o.https || \"undefined\" != typeof window && \"https:\" === (null === (u = window.location) || void 0 === u ? void 0 : u.protocol), this.version = \"4.1.7\", this.deviceId = o.deviceId || \"webim\", this.osType = 16, this.useOwnUploadFun = o.useOwnUploadFun || !1, this.compressType = [0], this.encryptType = [0], this.clientResource = \"\", this.expiresIn = 0, this.expirationTime = 0, this.logOut = !0, this.context = {\n              jid: {\n                appKey: \"\",\n                clientResource: \"\",\n                domain: \"easemob.com\",\n                name: \"\"\n              },\n              userId: \"\",\n              appKey: \"\",\n              status: 0,\n              restTokenData: \"\",\n              appName: \"\",\n              orgName: \"\",\n              root: {},\n              accessToken: \"\"\n            }, this._msgHash = {}, this._msgPromiseHash = {}, this._queues = [], this._load_msg_cache = [], this.unMSyncSendMsgMap = new Map(), this.mr_cache = {}, this.closeInfo = null, this.reconnecting = !1, \"string\" != typeof this.appKey || 2 !== this.appKey.split(\"#\").length) throw Error(\"Illegal appKey: \".concat(this.appKey));\n            new j({\n              conn: this\n            });\n            var l = this.appKey.split(\"#\");\n            this.orgName = l[0], this.appName = l[1], this.listen = St.bind(this), this.mSync = this.usePlugin(Ot), this.eventHandler = this.usePlugin(Rt), Object.assign(r.prototype, e), Object.assign(r.prototype, t), Object.assign(r.prototype, n), Object.assign(r.prototype, i), Object.assign(r.prototype, a), Object.assign(r.prototype, s), Object.assign(r.prototype, c), this.dataReport = new jt({\n              appkey: this.appKey,\n              org: this.orgName,\n              sdkVersion: this.version,\n              deviceId: this.deviceId,\n              isReport: this.isReport\n            });\n            var p = _Yi(_Yi({}, o), {\n              appKey: D(o.appKey),\n              version: this.version\n            });\n            o.apiUrl && (p.apiUrl = x(o.apiUrl)), o.url && (p.url = x(o.url)), J.debug(\"Initialized\", p);\n            var d = 0,\n              h = this;\n            Object.defineProperty(ue, \"ajaxUnconventionalErrorTimes\", {\n              set: function set(e) {\n                0 !== e && (J.debug(\"rest api request fail times: \".concat(e)), (d = e) % 5 == 0 && this.isHttpDNS && (J.debug(\"refresh dns config when rest request fail.\"), ua.call(h, \"refresh\", {}, {})));\n              },\n              get: function get() {\n                return d;\n              }\n            });\n          }\n          return r.prototype.usePlugin = function (e, t) {\n            if (!t) return new e(this);\n            this[t] = new e(this);\n          }, r.prototype.listen = function (e) {}, r.prototype.addEventHandler = function (e, t) {}, r.prototype.removeEventHandler = function (e) {}, r.prototype.registerUser = function (e) {\n            var t = this;\n            return new Promise(function (r, o) {\n              var n = t.dataReport.geOperateFun({\n                uid: e.username,\n                operationName: E.REGISTER\n              });\n              if (t.isHttpDNS) {\n                t.dnsIndex = 0;\n                var i = _Yi(_Yi({}, e), {\n                  user: e.username,\n                  pwd: e.password,\n                  promise: {\n                    resolve: r,\n                    reject: o\n                  }\n                });\n                ua.call(t, \"signup\", i, {\n                  rpt: n\n                });\n              } else i = _Yi(_Yi({}, e), {\n                promise: {\n                  resolve: r,\n                  reject: o\n                }\n              }), ra.call(t, i, {\n                rpt: n\n              });\n            });\n          }, r.prototype.open = function (e) {\n            var t = this;\n            return J.debug(\"open\", e.user), new Promise(function (r, o) {\n              if (sa.call(t, e)) {\n                e.accessToken && (t.token = e.accessToken);\n                var n = _Yi(_Yi({}, e), {\n                    promise: {\n                      resolve: r,\n                      reject: o\n                    }\n                  }),\n                  i = t.dataReport.geOperateFun({\n                    uid: e.user,\n                    operationName: E.LOGIN\n                  });\n                t.isHttpDNS ? ua.call(t, \"login\", n, {\n                  rpt: i\n                }) : oa.call(t, n, {\n                  rpt: i\n                });\n              }\n            });\n          }, r.prototype.isOpened = function () {\n            return this.sock && this.sock.readyState === ea.OPEN || !1;\n          }, r.prototype.close = function () {\n            var e;\n            this.logOut = !0, this.reconnecting = !1, this.context.status = p.STATUS_CLOSING, this.sock && this.sock.close(), null === (e = this.unMSyncSendMsgMap) || void 0 === e || e.clear(), this.stopHeartBeat(), this.rejectMessage(), this.rejectContactsOperate(), this.context.status = p.STATUS_CLOSED, this._load_msg_cache = [], this._queues = [], this._msgHash = {}, this.mr_cache = {}, this.token = \"\", this.context.accessToken = \"\";\n          }, r.prototype.stopHeartBeat = function () {\n            clearInterval(this.heartBeatID);\n          }, r.prototype.clear = function () {\n            this.restTotal = 0, this.restIndex = 0, this.hostIndex = 0, this.hostTotal = 0;\n          }, r.prototype.heartBeat = function () {}, r.prototype.renewToken = function (e) {\n            var t = this;\n            return this.isOpened() ? this.getChatToken(e).then(function (e) {\n              var r = Date.now();\n              return t.expirationTime = e.expire_timestamp, t.expiresIn = e.expire_timestamp - r, t.token = e.access_token, t.context.accessToken = e.access_token, t.clearTokenTimeout(), t.tokenExpireTimeCountDown(t.expiresIn), {\n                status: !0,\n                token: e.access_token,\n                expire: e.expire_timestamp\n              };\n            }) : Promise.reject({\n              status: !1\n            });\n          }, r.prototype.clearTokenTimeout = function () {\n            J.debug(\"clearTokenTimeout\"), this.tokenWillExpireTimer && clearTimeout(this.tokenWillExpireTimer), this.tokenExpiredTimer && clearTimeout(this.tokenExpiredTimer);\n          }, r.prototype.tokenExpireTimeCountDown = function (e) {\n            var t = this;\n            e > Math.pow(2, 31) - 1 && (e = Math.pow(2, 31) - 1), this.tokenWillExpireTimer = setTimeout(function () {\n              var r;\n              t.onTokenWillExpire && t.onTokenWillExpire(), null === (r = t.eventHandler) || void 0 === r || r.dispatch(\"onTokenWillExpire\"), J.info(\"onTokenWillExpire\", e);\n            }, e / 2), this.tokenExpiredTimer = setTimeout(function () {\n              var r;\n              J.info(\"onTokenExpired\", e), t.onTokenExpired && t.onTokenExpired(), null === (r = t.eventHandler) || void 0 === r || r.dispatch(\"onTokenExpired\"), t.close();\n            }, e);\n          }, r.prototype.compareTokenExpireTime = function (e, t) {\n            var r,\n              o = Number(t) - Number(e);\n            J.debug(\"compareTokenExpireTime\", o), o <= this.expiresIn / 2 && o > 0 ? (this.onTokenWillExpire && this.onTokenWillExpire(), null === (r = this.eventHandler) || void 0 === r || r.dispatch(\"onTokenWillExpire\"), J.info(\"onTokenWillExpire\", o)) : o <= 0 && (this.closeByTokenExpired(), J.info(\"closeByTokenExpired\", o));\n          }, r.prototype.closeByTokenExpired = function () {\n            var e;\n            J.info(\"closed By TokenExpired\"), this.onTokenExpired && this.onTokenExpired(), null === (e = this.eventHandler) || void 0 === e || e.dispatch(\"onTokenExpired\"), this.close();\n          }, r.prototype.rejectMessage = function () {\n            var e = this,\n              t = Object.keys(this._msgHash);\n            if (t.length > 0) {\n              var r = m.create({\n                type: p.MESSAGE_WEBSOCKET_DISCONNECTED,\n                message: \"websocket disconnected\"\n              });\n              t.forEach(function (t) {\n                var o;\n                (null === (o = e.unMSyncSendMsgMap) || void 0 === o ? void 0 : o.has(t)) || (e._msgHash[t].reject instanceof Function && e._msgHash[t].reject(r), e._msgHash[t].fail instanceof Function && e._msgHash[t].fail(r), delete e._msgHash[t]);\n              });\n            }\n          }, r.prototype.rejectContactsOperate = function () {\n            Array.from(I.values()).forEach(function (e) {\n              null == e || e.reject();\n            }), I.clear();\n          }, r.prototype.resetConnState = function () {\n            this.mSync.stopHeartBeat(), this.times = 1, this.autoReconnectNumTotal = 0, this.hostIndex = 0;\n          }, r.prototype.reconnect = function () {\n            var e,\n              t = this;\n            this.sock.readyState !== ea.CONNECTING && this.sock.readyState !== ea.OPEN && (J.info(\"reconnect: time\", this.times), J.info(\"reconnect sock.readyState: \", this.sock.readyState), !1 === this.reconnecting && (this.reconnecting = !0), null === (e = this.eventHandler) || void 0 === e || e.dispatch(\"onReconnecting\"), this.rejectMessage(), this.rejectContactsOperate(), this.isHttpDNS && (this.hostIndex < this.socketHost.length - 1 ? this.hostIndex++ : this.hostIndex = this.socketHost.length - 1), setTimeout(function () {\n              t.sock.readyState !== ea.OPEN && (J.info(\"login sock.readyState: \", t.sock.readyState), t.sock.close(), aa.call(t, {\n                access_token: t.context.accessToken\n              }), t.times++);\n            }, 500 * this.times), this.autoReconnectNumTotal++);\n          }, r.prototype.send = function (e) {\n            return Promise.resolve(null);\n          }, r._getSock = function () {}, r;\n        }();\n      function ra(e, t) {\n        var r = this,\n          o = t.rpt,\n          n = t.isRetry,\n          i = e.promise,\n          a = this.apiUrl + \"/\" + this.orgName + \"/\" + this.appName + \"/users\",\n          s = {\n            requestName: y.RESISTER,\n            requestUrl: a\n          },\n          c = e.error || Zi;\n        if (!this.orgName && !this.appName) {\n          var u = m.create({\n            type: p.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR,\n            message: \"signup error\"\n          });\n          c(u);\n        }\n        var l = {\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          url: a,\n          dataType: \"json\",\n          data: JSON.stringify({\n            username: e.username,\n            password: e.password,\n            nickname: e.nickname || \"\"\n          }),\n          success: function success(t) {\n            e.success && e.success(t);\n            var r = _Yi(_Yi({}, t), {\n              type: p.REQUEST_SUCCESS\n            });\n            i.resolve && i.resolve(r);\n            var a = t.extraInfo,\n              c = a.httpCode,\n              u = a.elapse;\n            o({\n              isEndApi: !0,\n              isRetry: n,\n              data: _Yi(_Yi({}, {\n                requestElapse: u,\n                isSuccess: 1,\n                code: c\n              }), s)\n            });\n          },\n          error: function error(t) {\n            var a = t.extraInfo,\n              u = a.elapse,\n              l = a.httpCode,\n              p = a.errDesc;\n            return o({\n              isRetry: n,\n              data: _Yi(_Yi({}, {\n                requestElapse: u,\n                isSuccess: 0,\n                code: l,\n                codeDesc: p\n              }), s)\n            }), r.isHttpDNS && r.restIndex + 1 < r.restTotal ? (r.restIndex++, la.call(r), ra.call(r, e, {\n              rpt: o,\n              isRetry: n\n            }), Promise.reject(t)) : (o({\n              data: {\n                isLastApi: 1,\n                isSuccess: 0\n              }\n            }), r.clear(), i.reject && i.reject(t), c(t));\n          }\n        };\n        return ue.ajax(l).catch(function (e) {\n          i.reject && i.reject(e);\n        });\n      }\n      function oa(e, t) {\n        var r = this;\n        if (sa.call(this, e) && !this.isOpened()) {\n          var o = t.rpt,\n            n = t.isRetry;\n          ca.call(this, e), this.user = e.user;\n          var i = e.promise,\n            a = this.context.appName,\n            s = this.context.orgName,\n            c = this.apiUrl + \"/\" + s + \"/\" + a + \"/token\";\n          if (e.agoraToken) this.grantType = \"agoraToken\", this.getChatToken(e.agoraToken).then(function (t) {\n            J.info(\"getChatToken result:\", t), r.expirationTime = t.expire_timestamp, r.token = t.access_token, r.context.accessToken = t.access_token, r.context.restTokenData = t.access_token;\n            var n = t.extraInfo,\n              a = n.httpCode,\n              s = n.elapse;\n            i.resolve({\n              accessToken: t.access_token,\n              expireTimestamp: t.expire_timestamp\n            });\n            var u = {\n              requestName: y.LOGIN_BY_AGORA_TOKEN,\n              requestUrl: c,\n              requestElapse: s,\n              isSuccess: 1,\n              code: a\n            };\n            o({\n              data: u\n            }), aa.call(r, _Yi(_Yi({}, e), {\n              access_token: t.access_token\n            }), o);\n          }).catch(function (e) {\n            var t,\n              n = m.create({\n                type: p.WEBIM_CONNCTION_GETROSTER_ERROR,\n                message: \"get chat token fail\",\n                data: e\n              });\n            i.reject(n), r.onError && r.onError(n), null === (t = r.eventHandler) || void 0 === t || t.dispatch(\"onError\", n);\n            var a = e.extraInfo,\n              s = a.elapse,\n              u = a.httpCode,\n              l = a.errDesc,\n              d = {\n                requestName: y.LOGIN_BY_AGORA_TOKEN,\n                requestUrl: c,\n                requestElapse: s,\n                isSuccess: 0,\n                code: u,\n                codeDesc: l\n              };\n            o({\n              data: d\n            }), o({\n              data: {\n                isLastApi: 1,\n                isSuccess: 0\n              }\n            });\n          });else if (e.accessToken) this.grantType = \"accessToken\", this.token = e.accessToken, this.context.accessToken = e.accessToken, this.context.restTokenData = e.accessToken, i.resolve({\n            accessToken: e.accessToken\n          }), aa.call(this, e, o);else {\n            this.grantType = \"password\";\n            var u = {\n                grant_type: \"password\",\n                username: e.user,\n                password: e.pwd,\n                timestamp: +new Date()\n              },\n              l = JSON.stringify(u),\n              d = {\n                headers: {\n                  \"Content-type\": \"application/json\"\n                },\n                url: c,\n                dataType: \"json\",\n                data: l,\n                success: function (t) {\n                  \"function\" == typeof e.success && e.success(t), r.token = t.access_token, r.context.restTokenData = t.access_token, r.context.accessToken = t.access_token, r.expiresIn = t.expires_in, r.clearTokenTimeout(), r.tokenExpireTimeCountDown(1e3 * r.expiresIn), i.resolve({\n                    accessToken: t.access_token,\n                    duration: t.expires_in\n                  });\n                  var a = t.extraInfo,\n                    s = a.httpCode,\n                    u = a.elapse,\n                    l = {\n                      requestName: y.LOGIN_BY_PWD,\n                      requestElapse: u,\n                      requestUrl: c,\n                      isSuccess: 1,\n                      code: s\n                    };\n                  o({\n                    isRetry: n,\n                    data: l\n                  }), aa.call(r, t, o);\n                } || Zi,\n                error: function (t) {\n                  var a,\n                    s = t.extraInfo,\n                    u = s.elapse,\n                    l = s.httpCode,\n                    d = s.errDesc,\n                    h = {\n                      requestName: y.LOGIN_BY_PWD,\n                      requestElapse: u,\n                      requestUrl: c,\n                      isSuccess: 0,\n                      code: l,\n                      codeDesc: d\n                    };\n                  if (o({\n                    isRetry: n,\n                    data: h\n                  }), r.isHttpDNS && r.restIndex + 1 < r.restTotal) return r.restIndex++, la.call(r), void oa.call(r, e, {\n                    rpt: o,\n                    isRetry: !0\n                  });\n                  o({\n                    data: {\n                      isLastApi: 1,\n                      isSuccess: 0\n                    }\n                  }), r.clear(), t.error && t.error_description ? (a = m.create({\n                    type: p.WEBIM_CONNCTION_OPEN_USERGRID_ERROR,\n                    message: t.error_description,\n                    data: t\n                  }), r.onError && r.onError(a)) : (a = m.create({\n                    type: p.WEBIM_CONNCTION_OPEN_ERROR,\n                    message: t.error_description,\n                    data: t\n                  }), r.onError && r.onError(a)), \"function\" == typeof e.error && e.error(a), i.reject(a);\n                } || Zi,\n                version: \"4.0.8\"\n              };\n            ue.ajax(d).catch(function (e) {\n              __f__(\"warn\", e, \" at SDK/4.1.7-uniapp-log.js:1\");\n            });\n          }\n          ue.listenNetwork(na.bind(this), ia.bind(this));\n        }\n      }\n      function na() {\n        var e;\n        J.debug(\"online\"), this.onOnline && this.onOnline(), null === (e = this.eventHandler) || void 0 === e || e.dispatch(\"onOnline\"), this.sock && 1 !== this.sock.readyState && (J.debug(\"sock.readyState:\", this.sock.readyState), this.logOut || this.reconnecting || this.reconnect());\n      }\n      function ia() {\n        var e;\n        J.debug(\"offline\"), this.onOffline && this.onOffline(), null === (e = this.eventHandler) || void 0 === e || e.dispatch(\"onOffline\");\n      }\n      function aa(e, t) {\n        var r = this,\n          o = this._getSock();\n        this.sock = o;\n        var n = function n() {\n            var e;\n            J.debug(\"websockt onOpen\"), t && t({\n              data: {\n                isLastApi: 1,\n                isSuccess: 1,\n                accessChannel: null === (e = r.socketHost[r.hostIndex]) || void 0 === e ? void 0 : e.channel\n              }\n            });\n            var n = ue.flow([r.mSync.generateProvision, r.mSync.base64transform])();\n            try {\n              o.send(n);\n            } catch (e) {\n              var i = m.create({\n                type: p.SDK_RUNTIME_ERROR,\n                message: \"send message error\",\n                data: e\n              });\n              r.onError && r.onError(i);\n            }\n          },\n          i = function i(e) {\n            setTimeout(function () {\n              var t, o, n, i, a, s;\n              J.debug(\"websocket onClose\"), \"zfb\" !== Qi.platform && \"dd\" !== Qi.platform || (r.sock.readyState = ea.CLOSED);\n              var c = 401 === (null == e ? void 0 : e.code) || 401 === (null === (t = r.closeInfo) || void 0 === t ? void 0 : t.code);\n              if (r.logOut) r.clear(), r.resetConnState(), c && (J.debug(\"websocket provision error\"), r.closeInfo = null), r.onClosed && r.onClosed(), null === (o = r.eventHandler) || void 0 === o || o.dispatch(\"onDisconnected\");else if (c) {\n                J.debug(\"websocket provision error\");\n                var u = {\n                  type: p.WEBIM_CONNECTION_ERROR,\n                  message: \"provision error\",\n                  data: e\n                };\n                r.closeInfo = null, r.onError && r.onError(u), null === (n = r.eventHandler) || void 0 === n || n.dispatch(\"onError\", u), r.onClosed && r.onClosed(), null === (i = r.eventHandler) || void 0 === i || i.dispatch(\"onDisconnected\"), r.resetConnState();\n              } else if (r.autoReconnectNumTotal < r.autoReconnectNumMax) {\n                r.reconnect();\n                var l = {\n                  type: p.WEBIM_CONNCTION_DISCONNECTED,\n                  message: \"websocket has been disconnected\"\n                };\n                r.onError && r.onError(l), r.autoReconnectNumTotal % r.refreshDNSIntervals == 0 && \"web\" === Qi.platform && r.isHttpDNS && (J.debug(\"refresh dns config when websocket close\"), ua.call(r, \"refresh\", {}, {}));\n              } else null === (a = r.unMSyncSendMsgMap) || void 0 === a || a.clear(), r.rejectMessage(), l = {\n                type: p.WEBIM_CONNCTION_DISCONNECTED,\n                message: \"websocket has been disconnected\"\n              }, r.onError && r.onError(l), r.onClosed && r.onClosed(), null === (s = r.eventHandler) || void 0 === s || s.dispatch(\"onDisconnected\"), r.resetConnState(), r.reconnecting = !1, J.debug(\"reconnect fail\");\n            }, 0);\n          },\n          a = function a(e) {\n            var t = r.mSync,\n              o = t.decodeMSync,\n              n = t.distributeMSync;\n            ue.flow([o, n])(e);\n          };\n        \"web\" === Qi.platform ? (o.onopen = n, o.onclose = i, o.onmessage = a) : (o.onOpen(n), o.onMessage(a), o.onClose(i), \"undefined\" != typeof window && window.WebSocket || o.onError(function (e) {\n          var o, n, i;\n          if (J.debug(\"mini program sock on error\", e), r.onError && r.onError({\n            type: p.WEBIM_CONNECTION_ERROR,\n            message: \"on socket error\",\n            data: e\n          }), !r.logOut) if (r.autoReconnectNumTotal < r.autoReconnectNumMax) J.debug(\"sock.onError reconnect\", r.autoReconnectNumTotal, r.autoReconnectNumMax), r.reconnect(), r.autoReconnectNumTotal % r.refreshDNSIntervals == 0 && \"web\" === Qi.platform && r.isHttpDNS && (J.debug(\"refresh dns config when websocket error\"), ua.call(r, \"refresh\", {}, {}));else {\n            var a = {\n              type: p.WEBIM_CONNCTION_DISCONNECTED,\n              message: \"websocket has been disconnected\"\n            };\n            null === (o = r.unMSyncSendMsgMap) || void 0 === o || o.clear(), r.rejectMessage(), r.onError && r.onError(a), r.onClosed && r.onClosed(), null === (n = r.eventHandler) || void 0 === n || n.dispatch(\"onDisconnected\"), r.resetConnState(), r.reconnecting = !1, J.debug(\"reconnect fail\");\n          }\n          t && t({\n            data: {\n              isLastApi: 1,\n              isSuccess: 0,\n              accessChannel: null === (i = r.socketHost[r.hostIndex]) || void 0 === i ? void 0 : i.channel\n            }\n          });\n        }));\n      }\n      function sa(e) {\n        if (\"\" === e.user) {\n          var t = m.create({\n            type: p.WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR,\n            message: \"the user cannot be empty\"\n          });\n          return J.debug(\"open params error\", t), this.onError && this.onError(t), !1;\n        }\n        var r = this.appKey.split(\"#\");\n        return !(2 !== r.length || !r[0] || !r[1]) || (t = m.create({\n          type: p.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR,\n          message: \"the appKey is illegal\"\n        }), J.debug(\"open params error\", t), this.onError && this.onError(t), !1);\n      }\n      function ca(e) {\n        this.context.jid = {\n          appKey: this.appKey,\n          name: e.user,\n          domain: this.domain,\n          clientResource: this.clientResource\n        };\n        var t = this.appKey.split(\"#\"),\n          r = t[0],\n          o = t[1];\n        this.context.root = this.root, this.context.userId = e.user, this.context.appKey = this.appKey, this.context.appName = o, this.context.orgName = r;\n      }\n      function ua(e, t, r) {\n        var o = this,\n          n = r.rpt,\n          i = r.isRetry,\n          a = this.dnsArr[this.dnsIndex] + \"/easemob/server.json\",\n          s = {\n            url: a,\n            dataType: \"json\",\n            type: \"GET\",\n            data: {\n              app_key: encodeURIComponent(this.appKey)\n            },\n            success: function (r) {\n              var s = r.extraInfo,\n                c = s.elapse,\n                u = s.httpCode,\n                l = {\n                  requestUrl: a,\n                  requestName: y.GET_DNS,\n                  requestElapse: c,\n                  isSuccess: 1,\n                  code: u\n                };\n              \"true\" === (null == r ? void 0 : r.enableDataReport) ? (o.dataReport.setIsCollectDt(!0), o.dataReport.setIsReportDt(!0)) : (o.dataReport.setIsReportDt(!1), o.dataReport.setIsCollectDt(!1)), n && n({\n                isRetry: i,\n                data: l\n              });\n              var p = r.rest.hosts,\n                d = o.https ? \"https\" : \"http\";\n              if (J.info(\"httpType: \" + d), !p) return Promise.reject(!1);\n              for (var h = p.filter(function (e) {\n                  if (e.protocol === d) return e;\n                }), f = 0; f < h.length; f++) {\n                if (h[f].protocol === d) {\n                  var m = h[f];\n                  h.splice(f, 1), h.unshift(m);\n                }\n              }\n              o.restHosts = h, o.restTotal = h.length;\n              var g = r[\"msync-ws\"].hosts;\n              if (!g) return Promise.reject(!1);\n              var E = g.filter(function (e) {\n                return e.protocol === d && e;\n              });\n              o.socketHost = E, o.hostTotal = E.length, la.call(o), \"refresh\" !== e && (\"login\" === e ? oa.call(o, t, {\n                rpt: n\n              }) : ra.call(o, t, {\n                rpt: n\n              }));\n            } || Zi,\n            error: function (r) {\n              var s = r.extraInfo,\n                c = s.elapse,\n                u = s.httpCode,\n                l = s.errDesc,\n                p = {\n                  requestUrl: a,\n                  requestName: y.GET_DNS,\n                  isSuccess: 0,\n                  code: u,\n                  codeDesc: l,\n                  requestElapse: c\n                };\n              n && n({\n                isRetry: i,\n                data: p\n              }), J.debug(\"getHttpDNS fail: \" + o.dnsIndex), o.dnsIndex++, o.dnsIndex < o.dnsTotal && ua.call(o, e, t, {\n                rpt: n,\n                isRetry: !0\n              });\n            } || Zi\n          };\n        return ue.ajax(s).catch(function (e) {\n          __f__(\"warn\", e, \" at SDK/4.1.7-uniapp-log.js:1\");\n        });\n      }\n      function la() {\n        var e, t;\n        if (this.restIndex > this.restTotal) return J.debug(\"restIndex > restTotal\"), \"\";\n        var r = \"\",\n          o = this.restHosts[this.restIndex],\n          n = o.domain,\n          i = o.ip,\n          a = o.port,\n          s = this.https ? \"https:\" : \"http:\";\n        return i && \"undefined\" != typeof window && \"http:\" === (null === (e = null === window || void 0 === window ? void 0 : window.location) || void 0 === e ? void 0 : e.protocol) ? r = s + \"//\" + i + \":\" + a : (r = s + \"//\" + n, a && \"80\" !== a && \"443\" !== a && (r += \":\".concat(a)), \"undefined\" == typeof window || window.location || (r = \"https://\" + n), \"undefined\" != typeof window && window.location && \"file:\" === (null === (t = window.location) || void 0 === t ? void 0 : t.protocol) && (r = \"https://\" + n)), \"undefined\" == typeof window && (r = s + \"//\" + n), this.apiUrl = r, r;\n      }\n      var pa = ue.getEnvInfo(),\n        da = pa.global;\n      d.util.Long = f(), d.configure();\n      var ha = d.Root.fromJSON({\n        nested: {\n          easemob: {\n            nested: {\n              pb: {\n                nested: {\n                  MessageBody: {\n                    fields: {\n                      type: {\n                        type: \"Type\",\n                        id: 1\n                      },\n                      from: {\n                        type: \"JID\",\n                        id: 2\n                      },\n                      to: {\n                        type: \"JID\",\n                        id: 3\n                      },\n                      contents: {\n                        rule: \"repeated\",\n                        type: \"Content\",\n                        id: 4\n                      },\n                      ext: {\n                        rule: \"repeated\",\n                        type: \"KeyValue\",\n                        id: 5\n                      },\n                      ackMessageId: {\n                        type: \"uint64\",\n                        id: 6\n                      },\n                      msgConfig: {\n                        type: \"MessageConfig\",\n                        id: 7\n                      },\n                      ackContent: {\n                        type: \"string\",\n                        id: 8\n                      },\n                      meta: {\n                        type: \"string\",\n                        id: 9\n                      }\n                    },\n                    nested: {\n                      Content: {\n                        fields: {\n                          type: {\n                            type: \"Type\",\n                            id: 1\n                          },\n                          text: {\n                            type: \"string\",\n                            id: 2\n                          },\n                          latitude: {\n                            type: \"double\",\n                            id: 3\n                          },\n                          longitude: {\n                            type: \"double\",\n                            id: 4\n                          },\n                          address: {\n                            type: \"string\",\n                            id: 5\n                          },\n                          displayName: {\n                            type: \"string\",\n                            id: 6\n                          },\n                          remotePath: {\n                            type: \"string\",\n                            id: 7\n                          },\n                          secretKey: {\n                            type: \"string\",\n                            id: 8\n                          },\n                          fileLength: {\n                            type: \"int32\",\n                            id: 9\n                          },\n                          action: {\n                            type: \"string\",\n                            id: 10\n                          },\n                          params: {\n                            rule: \"repeated\",\n                            type: \"KeyValue\",\n                            id: 11\n                          },\n                          duration: {\n                            type: \"int32\",\n                            id: 12\n                          },\n                          size: {\n                            type: \"Size\",\n                            id: 13\n                          },\n                          thumbnailRemotePath: {\n                            type: \"string\",\n                            id: 14\n                          },\n                          thumbnailSecretKey: {\n                            type: \"string\",\n                            id: 15\n                          },\n                          thumbnailDisplayName: {\n                            type: \"string\",\n                            id: 16\n                          },\n                          thumbnailFileLength: {\n                            type: \"int32\",\n                            id: 17\n                          },\n                          thumbnailSize: {\n                            type: \"Size\",\n                            id: 18\n                          },\n                          customEvent: {\n                            type: \"string\",\n                            id: 19\n                          },\n                          customExts: {\n                            rule: \"repeated\",\n                            type: \"KeyValue\",\n                            id: 20\n                          },\n                          buildingName: {\n                            type: \"string\",\n                            id: 21\n                          }\n                        },\n                        nested: {\n                          Type: {\n                            values: {\n                              TEXT: 0,\n                              IMAGE: 1,\n                              VIDEO: 2,\n                              LOCATION: 3,\n                              VOICE: 4,\n                              FILE: 5,\n                              COMMAND: 6,\n                              CUSTOM: 7\n                            }\n                          },\n                          Size: {\n                            fields: {\n                              width: {\n                                type: \"double\",\n                                id: 1\n                              },\n                              height: {\n                                type: \"double\",\n                                id: 2\n                              }\n                            }\n                          }\n                        }\n                      },\n                      Type: {\n                        values: {\n                          NORMAL: 0,\n                          CHAT: 1,\n                          GROUPCHAT: 2,\n                          CHATROOM: 3,\n                          READ_ACK: 4,\n                          DELIVER_ACK: 5,\n                          RECALL: 6,\n                          CHANNEL_ACK: 7\n                        }\n                      },\n                      MessageConfig: {\n                        fields: {\n                          allowGroupAck: {\n                            type: \"bool\",\n                            id: 1\n                          }\n                        }\n                      }\n                    }\n                  },\n                  KeyValue: {\n                    oneofs: {\n                      value: {\n                        oneof: [\"varintValue\", \"floatValue\", \"doubleValue\", \"stringValue\"]\n                      }\n                    },\n                    fields: {\n                      key: {\n                        type: \"string\",\n                        id: 1\n                      },\n                      type: {\n                        type: \"ValueType\",\n                        id: 2\n                      },\n                      varintValue: {\n                        type: \"int64\",\n                        id: 3\n                      },\n                      floatValue: {\n                        type: \"float\",\n                        id: 4\n                      },\n                      doubleValue: {\n                        type: \"double\",\n                        id: 5\n                      },\n                      stringValue: {\n                        type: \"string\",\n                        id: 6\n                      }\n                    },\n                    nested: {\n                      ValueType: {\n                        values: {\n                          BOOL: 1,\n                          INT: 2,\n                          UINT: 3,\n                          LLINT: 4,\n                          FLOAT: 5,\n                          DOUBLE: 6,\n                          STRING: 7,\n                          JSON_STRING: 8\n                        }\n                      }\n                    }\n                  },\n                  JID: {\n                    fields: {\n                      appKey: {\n                        type: \"string\",\n                        id: 1\n                      },\n                      name: {\n                        type: \"string\",\n                        id: 2\n                      },\n                      domain: {\n                        type: \"string\",\n                        id: 3\n                      },\n                      clientResource: {\n                        type: \"string\",\n                        id: 4\n                      }\n                    }\n                  },\n                  ConferenceBody: {\n                    fields: {\n                      sessionId: {\n                        type: \"string\",\n                        id: 1\n                      },\n                      operation: {\n                        type: \"Operation\",\n                        id: 2\n                      },\n                      conferenceId: {\n                        type: \"string\",\n                        id: 3\n                      },\n                      type: {\n                        type: \"Type\",\n                        id: 4\n                      },\n                      content: {\n                        type: \"string\",\n                        id: 5\n                      },\n                      network: {\n                        type: \"string\",\n                        id: 6\n                      },\n                      version: {\n                        type: \"string\",\n                        id: 7\n                      },\n                      identity: {\n                        type: \"Identity\",\n                        id: 8\n                      },\n                      duration: {\n                        type: \"string\",\n                        id: 9\n                      },\n                      peerName: {\n                        type: \"string\",\n                        id: 10\n                      },\n                      endReason: {\n                        type: \"EndReason\",\n                        id: 11\n                      },\n                      status: {\n                        type: \"Status\",\n                        id: 12\n                      },\n                      isDirect: {\n                        type: \"bool\",\n                        id: 13\n                      },\n                      controlType: {\n                        type: \"StreamControlType\",\n                        id: 14\n                      },\n                      routeFlag: {\n                        type: \"int32\",\n                        id: 15\n                      },\n                      routeKey: {\n                        type: \"string\",\n                        id: 16\n                      }\n                    },\n                    nested: {\n                      Status: {\n                        fields: {\n                          errorCode: {\n                            type: \"int32\",\n                            id: 1\n                          }\n                        }\n                      },\n                      Operation: {\n                        values: {\n                          JOIN: 0,\n                          INITIATE: 1,\n                          ACCEPT_INITIATE: 2,\n                          ANSWER: 3,\n                          TERMINATE: 4,\n                          REMOVE: 5,\n                          STREAM_CONTROL: 6,\n                          MEDIA_REQUEST: 7\n                        }\n                      },\n                      Type: {\n                        values: {\n                          VOICE: 0,\n                          VIDEO: 1\n                        }\n                      },\n                      Identity: {\n                        values: {\n                          CALLER: 0,\n                          CALLEE: 1\n                        }\n                      },\n                      EndReason: {\n                        values: {\n                          HANGUP: 0,\n                          NORESPONSE: 1,\n                          REJECT: 2,\n                          BUSY: 3,\n                          FAIL: 4,\n                          UNSUPPORTED: 5,\n                          OFFLINE: 6\n                        }\n                      },\n                      StreamControlType: {\n                        values: {\n                          PAUSE_VOICE: 0,\n                          RESUME_VOICE: 1,\n                          PAUSE_VIDEO: 2,\n                          RESUME_VIDEO: 3\n                        }\n                      }\n                    }\n                  },\n                  MSync: {\n                    fields: {\n                      version: {\n                        type: \"Version\",\n                        id: 1,\n                        options: {\n                          default: \"MSYNC_V1\"\n                        }\n                      },\n                      guid: {\n                        type: \"JID\",\n                        id: 2\n                      },\n                      auth: {\n                        type: \"string\",\n                        id: 3\n                      },\n                      compressAlgorimth: {\n                        type: \"uint32\",\n                        id: 4\n                      },\n                      crypto: {\n                        type: \"uint32\",\n                        id: 5\n                      },\n                      userAgent: {\n                        type: \"string\",\n                        id: 6\n                      },\n                      pov: {\n                        type: \"uint64\",\n                        id: 7\n                      },\n                      command: {\n                        type: \"Command\",\n                        id: 8\n                      },\n                      deviceId: {\n                        type: \"uint32\",\n                        id: 10\n                      },\n                      encryptType: {\n                        rule: \"repeated\",\n                        type: \"EncryptType\",\n                        id: 11,\n                        options: {\n                          packed: !1\n                        }\n                      },\n                      encryptKey: {\n                        type: \"string\",\n                        id: 12\n                      },\n                      payload: {\n                        type: \"bytes\",\n                        id: 9\n                      }\n                    },\n                    nested: {\n                      Version: {\n                        values: {\n                          MSYNC_V1: 0,\n                          MSYNC_V2: 1\n                        }\n                      },\n                      Command: {\n                        values: {\n                          SYNC: 0,\n                          UNREAD: 1,\n                          NOTICE: 2,\n                          PROVISION: 3\n                        }\n                      }\n                    }\n                  },\n                  EncryptType: {\n                    values: {\n                      ENCRYPT_NONE: 0,\n                      ENCRYPT_AES_128_CBC: 1,\n                      ENCRYPT_AES_256_CBC: 2\n                    }\n                  },\n                  CommSyncUL: {\n                    fields: {\n                      meta: {\n                        type: \"Meta\",\n                        id: 1\n                      },\n                      key: {\n                        type: \"uint64\",\n                        id: 2\n                      },\n                      queue: {\n                        type: \"JID\",\n                        id: 3\n                      },\n                      isRoam: {\n                        type: \"bool\",\n                        id: 4\n                      },\n                      lastFullRoamKey: {\n                        type: \"uint64\",\n                        id: 5\n                      }\n                    }\n                  },\n                  CommSyncDL: {\n                    fields: {\n                      status: {\n                        type: \"Status\",\n                        id: 1\n                      },\n                      metaId: {\n                        type: \"uint64\",\n                        id: 2\n                      },\n                      serverId: {\n                        type: \"uint64\",\n                        id: 3\n                      },\n                      metas: {\n                        rule: \"repeated\",\n                        type: \"Meta\",\n                        id: 4\n                      },\n                      nextKey: {\n                        type: \"uint64\",\n                        id: 5\n                      },\n                      queue: {\n                        type: \"JID\",\n                        id: 6\n                      },\n                      isLast: {\n                        type: \"bool\",\n                        id: 7\n                      },\n                      timestamp: {\n                        type: \"uint64\",\n                        id: 8\n                      },\n                      isRoam: {\n                        type: \"bool\",\n                        id: 9\n                      }\n                    }\n                  },\n                  CommNotice: {\n                    fields: {\n                      queue: {\n                        type: \"JID\",\n                        id: 1\n                      }\n                    }\n                  },\n                  CommUnreadUL: {\n                    fields: {}\n                  },\n                  CommUnreadDL: {\n                    fields: {\n                      status: {\n                        type: \"Status\",\n                        id: 1\n                      },\n                      unread: {\n                        rule: \"repeated\",\n                        type: \"MetaQueue\",\n                        id: 2\n                      },\n                      timestamp: {\n                        type: \"uint64\",\n                        id: 3\n                      }\n                    }\n                  },\n                  MetaQueue: {\n                    fields: {\n                      queue: {\n                        type: \"JID\",\n                        id: 1\n                      },\n                      n: {\n                        type: \"uint32\",\n                        id: 2\n                      }\n                    }\n                  },\n                  Meta: {\n                    fields: {\n                      id: {\n                        type: \"uint64\",\n                        id: 1\n                      },\n                      from: {\n                        type: \"JID\",\n                        id: 2\n                      },\n                      to: {\n                        type: \"JID\",\n                        id: 3\n                      },\n                      timestamp: {\n                        type: \"uint64\",\n                        id: 4\n                      },\n                      ns: {\n                        type: \"NameSpace\",\n                        id: 5\n                      },\n                      payload: {\n                        type: \"bytes\",\n                        id: 6\n                      },\n                      routetype: {\n                        type: \"RouteType\",\n                        id: 7\n                      },\n                      ext: {\n                        type: \"KeyValue\",\n                        id: 8\n                      },\n                      meta: {\n                        type: \"bytes\",\n                        id: 9\n                      },\n                      directedUsers: {\n                        rule: \"repeated\",\n                        type: \"string\",\n                        id: 10\n                      }\n                    },\n                    nested: {\n                      NameSpace: {\n                        values: {\n                          STATISTIC: 0,\n                          CHAT: 1,\n                          MUC: 2,\n                          ROSTER: 3,\n                          CONFERENCE: 4,\n                          NOTIFY: 5,\n                          QUERY: 6\n                        }\n                      },\n                      RouteType: {\n                        values: {\n                          ROUTE_ALL: 0,\n                          ROUTE_ONLINE: 1,\n                          ROUTE_DIRECT: 2\n                        }\n                      }\n                    }\n                  },\n                  Status: {\n                    fields: {\n                      errorCode: {\n                        type: \"ErrorCode\",\n                        id: 1\n                      },\n                      reason: {\n                        type: \"string\",\n                        id: 2\n                      },\n                      redirectInfo: {\n                        rule: \"repeated\",\n                        type: \"RedirectInfo\",\n                        id: 3\n                      }\n                    },\n                    nested: {\n                      ErrorCode: {\n                        values: {\n                          OK: 0,\n                          FAIL: 1,\n                          UNAUTHORIZED: 2,\n                          MISSING_PARAMETER: 3,\n                          WRONG_PARAMETER: 4,\n                          REDIRECT: 5,\n                          TOKEN_EXPIRED: 6,\n                          PERMISSION_DENIED: 7,\n                          NO_ROUTE: 8,\n                          UNKNOWN_COMMAND: 9,\n                          PB_PARSER_ERROR: 10,\n                          BIND_ANOTHER_DEVICE: 11,\n                          IM_FORBIDDEN: 12,\n                          TOO_MANY_DEVICES: 13,\n                          PLATFORM_LIMIT: 14,\n                          USER_MUTED: 15,\n                          ENCRYPT_DISABLE: 16,\n                          ENCRYPT_ENABLE: 17,\n                          DECRYPT_FAILURE: 18,\n                          PERMISSION_DENIED_EXTERNAL: 19\n                        }\n                      }\n                    }\n                  },\n                  RedirectInfo: {\n                    fields: {\n                      host: {\n                        type: \"string\",\n                        id: 1\n                      },\n                      port: {\n                        type: \"uint32\",\n                        id: 2\n                      }\n                    }\n                  },\n                  Provision: {\n                    fields: {\n                      osType: {\n                        type: \"OsType\",\n                        id: 1\n                      },\n                      version: {\n                        type: \"string\",\n                        id: 2\n                      },\n                      networkType: {\n                        type: \"NetworkType\",\n                        id: 3\n                      },\n                      appSign: {\n                        type: \"string\",\n                        id: 4\n                      },\n                      compressType: {\n                        rule: \"repeated\",\n                        type: \"CompressType\",\n                        id: 5,\n                        options: {\n                          packed: !1\n                        }\n                      },\n                      encryptType: {\n                        rule: \"repeated\",\n                        type: \"EncryptType\",\n                        id: 6,\n                        options: {\n                          packed: !1\n                        }\n                      },\n                      encryptKey: {\n                        type: \"string\",\n                        id: 7\n                      },\n                      status: {\n                        type: \"Status\",\n                        id: 8\n                      },\n                      deviceUuid: {\n                        type: \"string\",\n                        id: 9\n                      },\n                      isManualLogin: {\n                        type: \"bool\",\n                        id: 10\n                      },\n                      password: {\n                        type: \"string\",\n                        id: 11\n                      },\n                      deviceName: {\n                        type: \"string\",\n                        id: 12\n                      },\n                      resource: {\n                        type: \"string\",\n                        id: 13\n                      },\n                      auth: {\n                        type: \"string\",\n                        id: 14\n                      },\n                      serviceId: {\n                        type: \"string\",\n                        id: 16\n                      },\n                      actionVersion: {\n                        type: \"string\",\n                        id: 17\n                      }\n                    },\n                    nested: {\n                      OsType: {\n                        values: {\n                          OS_IOS: 0,\n                          OS_ANDROID: 1,\n                          OS_LINUX: 2,\n                          OS_OSX: 3,\n                          OS_WIN: 4,\n                          OS_OTHER: 16\n                        }\n                      },\n                      NetworkType: {\n                        values: {\n                          NETWORK_NONE: 0,\n                          NETWORK_WIFI: 1,\n                          NETWORK_4G: 2,\n                          NETWORK_3G: 3,\n                          NETWORK_2G: 4,\n                          NETWORK_WIRE: 5\n                        }\n                      },\n                      CompressType: {\n                        values: {\n                          COMPRESS_NONE: 0,\n                          COMPRESS_ZLIB: 1\n                        }\n                      }\n                    }\n                  },\n                  MUCBody: {\n                    fields: {\n                      mucId: {\n                        type: \"JID\",\n                        id: 1\n                      },\n                      operation: {\n                        type: \"Operation\",\n                        id: 2\n                      },\n                      from: {\n                        type: \"JID\",\n                        id: 3\n                      },\n                      to: {\n                        rule: \"repeated\",\n                        type: \"JID\",\n                        id: 4\n                      },\n                      setting: {\n                        type: \"Setting\",\n                        id: 5\n                      },\n                      reason: {\n                        type: \"string\",\n                        id: 6\n                      },\n                      isChatroom: {\n                        type: \"bool\",\n                        id: 7\n                      },\n                      status: {\n                        type: \"Status\",\n                        id: 8\n                      },\n                      isThread: {\n                        type: \"bool\",\n                        id: 9\n                      },\n                      mucParentId: {\n                        type: \"JID\",\n                        id: 10\n                      },\n                      mucName: {\n                        type: \"string\",\n                        id: 11\n                      },\n                      eventInfo: {\n                        type: \"EventInfo\",\n                        id: 12\n                      }\n                    },\n                    nested: {\n                      Operation: {\n                        values: {\n                          CREATE: 0,\n                          DESTROY: 1,\n                          JOIN: 2,\n                          LEAVE: 3,\n                          APPLY: 4,\n                          APPLY_ACCEPT: 5,\n                          APPLY_DECLINE: 6,\n                          INVITE: 7,\n                          INVITE_ACCEPT: 8,\n                          INVITE_DECLINE: 9,\n                          KICK: 10,\n                          GET_BLACKLIST: 11,\n                          BAN: 12,\n                          ALLOW: 13,\n                          UPDATE: 14,\n                          BLOCK: 15,\n                          UNBLOCK: 16,\n                          PRESENCE: 17,\n                          ABSENCE: 18,\n                          DIRECT_JOINED: 19,\n                          ASSIGN_OWNER: 20,\n                          ADD_ADMIN: 21,\n                          REMOVE_ADMIN: 22,\n                          ADD_MUTE: 23,\n                          REMOVE_MUTE: 24,\n                          UPDATE_ANNOUNCEMENT: 25,\n                          DELETE_ANNOUNCEMENT: 26,\n                          UPLOAD_FILE: 27,\n                          DELETE_FILE: 28,\n                          ADD_USER_WHITE_LIST: 29,\n                          REMOVE_USER_WHITE_LIST: 30,\n                          BAN_GROUP: 31,\n                          REMOVE_BAN_GROUP: 32,\n                          THREAD_CREATE: 33,\n                          THREAD_DESTROY: 34,\n                          THREAD_JOIN: 35,\n                          THREAD_LEAVE: 36,\n                          THREAD_KICK: 37,\n                          THREAD_UPDATE: 38,\n                          THREAD_PRESENCE: 39,\n                          THREAD_ABSENCE: 40,\n                          DISABLE_GROUP: 41,\n                          ABLE_GROUP: 42,\n                          SET_METADATA: 43,\n                          DELETE_METADATA: 44,\n                          GROUP_MEMBER_METADATA_UPDATE: 45\n                        }\n                      },\n                      Setting: {\n                        fields: {\n                          name: {\n                            type: \"string\",\n                            id: 1\n                          },\n                          desc: {\n                            type: \"string\",\n                            id: 2\n                          },\n                          type: {\n                            type: \"Type\",\n                            id: 3\n                          },\n                          maxUsers: {\n                            type: \"int32\",\n                            id: 4\n                          },\n                          owner: {\n                            type: \"string\",\n                            id: 5\n                          }\n                        },\n                        nested: {\n                          Type: {\n                            values: {\n                              PRIVATE_OWNER_INVITE: 0,\n                              PRIVATE_MEMBER_INVITE: 1,\n                              PUBLIC_JOIN_APPROVAL: 2,\n                              PUBLIC_JOIN_OPEN: 3,\n                              PUBLIC_ANONYMOUS: 4\n                            }\n                          }\n                        }\n                      },\n                      Status: {\n                        fields: {\n                          errorCode: {\n                            type: \"ErrorCode\",\n                            id: 1\n                          },\n                          description: {\n                            type: \"string\",\n                            id: 2\n                          }\n                        },\n                        nested: {\n                          ErrorCode: {\n                            values: {\n                              OK: 0,\n                              PERMISSION_DENIED: 1,\n                              WRONG_PARAMETER: 2,\n                              MUC_NOT_EXIST: 3,\n                              USER_NOT_EXIST: 4,\n                              UNKNOWN: 5\n                            }\n                          }\n                        }\n                      },\n                      EventInfo: {\n                        fields: {\n                          eventType: {\n                            type: \"EventType\",\n                            id: 1,\n                            options: {\n                              default: \"EVENT_NONE\"\n                            }\n                          },\n                          ext: {\n                            type: \"string\",\n                            id: 2\n                          }\n                        },\n                        nested: {\n                          EventType: {\n                            values: {\n                              EVENT_NONE: 0,\n                              CIRCLE_CHANNEL: 1\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  RosterBody: {\n                    fields: {\n                      operation: {\n                        type: \"Operation\",\n                        id: 1\n                      },\n                      status: {\n                        type: \"Status\",\n                        id: 2\n                      },\n                      from: {\n                        type: \"JID\",\n                        id: 3\n                      },\n                      to: {\n                        rule: \"repeated\",\n                        type: \"JID\",\n                        id: 4\n                      },\n                      reason: {\n                        type: \"string\",\n                        id: 5\n                      },\n                      rosterVer: {\n                        type: \"string\",\n                        id: 6\n                      },\n                      biDirection: {\n                        type: \"bool\",\n                        id: 7\n                      }\n                    },\n                    nested: {\n                      Operation: {\n                        values: {\n                          GET_ROSTER: 0,\n                          GET_BLACKLIST: 1,\n                          ADD: 2,\n                          REMOVE: 3,\n                          ACCEPT: 4,\n                          DECLINE: 5,\n                          BAN: 6,\n                          ALLOW: 7,\n                          REMOTE_ACCEPT: 8,\n                          REMOTE_DECLINE: 9\n                        }\n                      },\n                      Status: {\n                        fields: {\n                          errorCode: {\n                            type: \"ErrorCode\",\n                            id: 1\n                          },\n                          description: {\n                            type: \"string\",\n                            id: 2\n                          }\n                        },\n                        nested: {\n                          ErrorCode: {\n                            values: {\n                              OK: 0,\n                              USER_NOT_EXIST: 1,\n                              USER_ALREADY_FRIEND: 2,\n                              USER_ALREADY_BLACKLIST: 3\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  StatisticsBody: {\n                    fields: {\n                      operation: {\n                        type: \"Operation\",\n                        id: 1\n                      },\n                      os: {\n                        type: \"OsType\",\n                        id: 2\n                      },\n                      version: {\n                        type: \"string\",\n                        id: 3\n                      },\n                      network: {\n                        type: \"NetworkType\",\n                        id: 4\n                      },\n                      imTime: {\n                        type: \"uint32\",\n                        id: 5\n                      },\n                      chatTime: {\n                        type: \"uint32\",\n                        id: 6\n                      },\n                      location: {\n                        type: \"string\",\n                        id: 7\n                      }\n                    },\n                    nested: {\n                      Operation: {\n                        values: {\n                          INFORMATION: 0,\n                          USER_REMOVED: 1,\n                          USER_LOGIN_ANOTHER_DEVICE: 2,\n                          USER_KICKED_BY_CHANGE_PASSWORD: 3,\n                          USER_KICKED_BY_OTHER_DEVICE: 4\n                        }\n                      },\n                      OsType: {\n                        values: {\n                          OS_IOS: 0,\n                          OS_ANDROID: 1,\n                          OS_LINUX: 2,\n                          OS_OSX: 3,\n                          OS_WIN: 4,\n                          OS_OTHER: 16\n                        }\n                      },\n                      NetworkType: {\n                        values: {\n                          NETWORK_NONE: 0,\n                          NETWORK_WIFI: 1,\n                          NETWORK_4G: 2,\n                          NETWORK_3G: 3,\n                          NETWORK_2G: 4,\n                          NETWORK_WIRE: 5\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      });\n      ta.prototype.root = ha;\n      var fa = function fa(e) {\n        this.onOpen = da.onSocketOpen, this.onClose = da.onSocketClose, this.onMessage = da.onSocketMessage, this.onError = da.onSocketError, this.close = da.closeSocket, this.send = da.sendSocketMessage, this.connectSocket = da.connectSocket, this.readyState = 3, this.offSocketOpen = da.offSocketOpen, this.offSocketMessage = da.offSocketMessage, this.offSocketError = da.offSocketError, this.offSocketClose = da.offSocketClose, this.connect = function () {\n          this.offSocketOpen(), this.offSocketMessage(), this.offSocketClose(), this.offSocketError(), da.connectSocket({\n            url: e.url,\n            header: {\n              \"content-type\": \"application/json\"\n            },\n            success: function success(e) {},\n            fail: function fail() {}\n          });\n        };\n      };\n      ta.prototype._getSock = function () {\n        var e;\n        return this.sock && this.sock.close && this.sock.close(), (e = \"zfb\" === pa.platform || \"dd\" === pa.platform ? new fa(this) : da.connectSocket({\n          url: this.url,\n          header: {\n            \"content-type\": \"application/json\"\n          },\n          success: function success(e) {},\n          fail: function fail(e) {\n            e.errMsg.indexOf(\"suspend\");\n          },\n          complete: function complete() {}\n        })).connect && e.connect(), e;\n      }, ta.prototype.getUniqueId = ue.getUniqueId, ta.prototype.deviceId = \"miniProgram_\" + pa.platform;\n      var ma = J.getLogger(\"defaultLogger\");\n      ma.setConfig({\n        useCache: !1,\n        maxCache: 3145728\n      }), ma.enableAll(), ue.ajax = ue.wxRequest;\n      var ga = {\n        connection: ta,\n        message: Se,\n        utils: ue,\n        logger: ma,\n        statusCode: p\n      };\n    }(), o;\n  }();\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"], __webpack_require__(/*! @dcloudio/uni-mp-weixin/dist/mp.js */ 18)[\"default\"], __webpack_require__(/*! ./../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/module.js */ 27)(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/*!*********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/mp.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Behavior = Behavior;
exports.Component = Component;
exports.Page = Page;
exports.nextTick = exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 20));
var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 26));
var _PROP_DEFAULT_VALUES;
function parseData(data, vueComponentOptions) {
  if (!data) {
    return;
  }
  vueComponentOptions.mpOptions.data = data;
}
function parseComponents(vueComponentOptions) {
  vueComponentOptions.components = global.__wxVueOptions.components;
}
var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;
function isFn(fn) {
  return typeof fn === 'function';
}
function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
function noop() {}

/**
 * Create a cached version of a pure function.
 */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
var SOURCE_KEY = '__data__';
var COMPONENT_LIFECYCLE = {
  created: 'onServiceCreated',
  attached: 'onServiceAttached',
  ready: 'mounted',
  moved: 'moved',
  detached: 'destroyed'
};
var COMPONENT_LIFECYCLE_KEYS = Object.keys(COMPONENT_LIFECYCLE);
var PAGE_LIFETIMES = {
  show: 'onPageShow',
  hide: 'onPageHide',
  resize: 'onPageResize'
};
var PAGE_LIFETIMES_KEYS = Object.keys(PAGE_LIFETIMES);
var PAGE_LIFECYCLE = ['onLoad', 'onShow', 'onReady', 'onHide', 'onUnload', 'onPullDownRefresh', 'onReachBottom', 'onShareAppMessage', 'onPageScroll', 'onResize', 'onTabItemTap'];
function parsePageMethods(mpComponentOptions, vueComponentOptions) {
  var methods = Object.create(null);
  Object.keys(mpComponentOptions).forEach(function (key) {
    var value = mpComponentOptions[key];
    if (isFn(value) && PAGE_LIFECYCLE.indexOf(key) === -1) {
      methods[key] = value;
    }
  });
  vueComponentOptions.methods = methods;
}
function parsePageLifecycle(mpComponentOptions, vueComponentOptions) {
  Object.keys(mpComponentOptions).forEach(function (key) {
    if (PAGE_LIFECYCLE.indexOf(key) !== -1) {
      vueComponentOptions[key] = mpComponentOptions[key];
    }
  });
}
function parsePage(mpComponentOptions) {
  var vueComponentOptions = {
    mixins: [],
    mpOptions: {}
  };
  parseComponents(vueComponentOptions);
  parseData(mpComponentOptions.data, vueComponentOptions);
  parsePageMethods(mpComponentOptions, vueComponentOptions);
  parsePageLifecycle(mpComponentOptions, vueComponentOptions);
  return vueComponentOptions;
}
function parseProperties(properties, vueComponentOptions) {
  if (!properties) {
    return;
  }
  vueComponentOptions.mpOptions.properties = properties;
}
function parseOptions(options, vueComponentOptions) {
  if (!options) {
    return;
  }
  vueComponentOptions.mpOptions.options = options;
}
function parseMethods(methods, vueComponentOptions) {
  if (!methods) {
    return;
  }
  if (methods.$emit) {
    console.warn('Method "$emit" conflicts with an existing Vue instance method');
    delete methods.$emit;
  }
  vueComponentOptions.methods = methods;
}
function parseLifecycle(mpComponentOptions, vueComponentOptions) {
  COMPONENT_LIFECYCLE_KEYS.forEach(function (name) {
    if (hasOwn(mpComponentOptions, name)) {
      (vueComponentOptions[COMPONENT_LIFECYCLE[name]] || (vueComponentOptions[COMPONENT_LIFECYCLE[name]] = [])).push(mpComponentOptions[name]);
    }
  });
}
var mpBehaviors = {
  'wx://form-field': {},
  'wx://component-export': {}
};
function callDefinitionFilter(mpComponentOptions) {
  var behaviors = mpComponentOptions.behaviors,
    definitionFilter = mpComponentOptions.definitionFilter;
  var behaviorDefinitionFilters = [];
  if (Array.isArray(behaviors)) {
    behaviors.forEach(function (behavior) {
      behavior = typeof behavior === 'string' ? mpBehaviors[behavior] : behavior;
      if (behavior.definitionFilter) {
        behaviorDefinitionFilters.push(behavior.definitionFilter);
        behavior.definitionFilter.call(null, mpComponentOptions, []);
      }
    });
  }
  if (isFn(definitionFilter)) {
    return function (defFields) {
      definitionFilter(defFields, behaviorDefinitionFilters);
    };
  }
}
function parseDefinitionFilter(mpComponentOptions, vueComponentOptions) {
  callDefinitionFilter(mpComponentOptions);
}
function parseBehavior(behavior) {
  var data = behavior.data,
    methods = behavior.methods,
    behaviors = behavior.behaviors,
    properties = behavior.properties;
  var vueComponentOptions = {
    watch: {},
    mpOptions: {
      mpObservers: []
    }
  };
  parseData(data, vueComponentOptions);
  parseMethods(methods, vueComponentOptions);
  parseBehaviors(behaviors, vueComponentOptions);
  parseProperties(properties, vueComponentOptions);
  parseLifecycle(behavior, vueComponentOptions);
  parseDefinitionFilter(behavior);
  return vueComponentOptions;
}
var BEHAVIORS = {
  'wx://form-field': {
    beforeCreate: function beforeCreate() {
      var mpOptions = this.$options.mpOptions;
      if (!mpOptions.properties) {
        mpOptions.properties = Object.create(null);
      }
      var props = mpOptions.properties;
      // TODO form submit,reset
      if (!hasOwn(props, 'name')) {
        props.name = {
          type: String
        };
      }
      if (!hasOwn(props, 'value')) {
        props.value = {
          type: String // 默认类型调整为 String,否则默认值为 null,导致一些自定义 input 显示不正确
        };
      }
    }
  }
};

function parseBehaviors(behaviors, vueComponentOptions) {
  if (!behaviors) {
    return;
  }
  behaviors.forEach(function (behavior) {
    if (typeof behavior === 'string') {
      BEHAVIORS[behavior] && vueComponentOptions.mixins.push(BEHAVIORS[behavior]);
    } else {
      vueComponentOptions.mixins.push(parseBehavior(behavior));
    }
  });
}
function parseSinglePath(path) {
  return path.split('.');
}
function parseMultiPaths(paths) {
  return paths.split(',').map(function (path) {
    return parseSinglePath(path);
  });
}
function parseObservers(observers, vueComponentOptions) {
  if (!observers) {
    return;
  }
  var mpObservers = vueComponentOptions.mpOptions.mpObservers;
  Object.keys(observers).forEach(function (path) {
    mpObservers.push({
      paths: parseMultiPaths(path),
      observer: observers[path]
    });
  });
}
function relative(from, to) {
  if (to.indexOf('/') === 0) {
    from = '';
  }
  var fromArr = from.split('/');
  var toArr = to.split('/');
  fromArr.pop();
  while (toArr.length) {
    var part = toArr.shift();
    if (part !== '' && part !== '.') {
      if (part !== '..') {
        fromArr.push(part);
      } else {
        fromArr.pop();
      }
    }
  }
  return fromArr.join('/');
}
function parseRelations(relations, vueComponentOptions) {
  if (!relations) {
    return;
  }
  Object.keys(relations).forEach(function (name) {
    var relation = relations[name];
    relation.name = name;
    relation.target = relation.target ? String(relation.target) : relative(global.__wxRoute, name);
  });
  vueComponentOptions.mpOptions.relations = relations;
}
function parseExternalClasses(externalClasses, vueComponentOptions) {
  if (!externalClasses) {
    return;
  }
  if (!Array.isArray(externalClasses)) {
    externalClasses = [externalClasses];
  }
  vueComponentOptions.mpOptions.externalClasses = externalClasses;
  if (!vueComponentOptions.mpOptions.properties) {
    vueComponentOptions.mpOptions.properties = Object.create(null);
  }
  externalClasses.forEach(function (externalClass) {
    vueComponentOptions.mpOptions.properties[camelize(externalClass)] = {
      type: String,
      value: ''
    };
  });
}
function parseLifetimes(lifetimes, vueComponentOptions) {
  if (!lifetimes) {
    return;
  }
  parseLifecycle(lifetimes, vueComponentOptions);
}
function parsePageLifetimes(pageLifetimes, vueComponentOptions) {
  if (!pageLifetimes) {
    return;
  }
  PAGE_LIFETIMES_KEYS.forEach(function (key) {
    var lifetimeFn = pageLifetimes[key];
    isFn(lifetimeFn) && (vueComponentOptions[PAGE_LIFETIMES[key]] = lifetimeFn);
  });
}
function parseComponent(mpComponentOptions) {
  var data = mpComponentOptions.data,
    options = mpComponentOptions.options,
    methods = mpComponentOptions.methods,
    behaviors = mpComponentOptions.behaviors,
    lifetimes = mpComponentOptions.lifetimes,
    observers = mpComponentOptions.observers,
    relations = mpComponentOptions.relations,
    properties = mpComponentOptions.properties,
    pageLifetimes = mpComponentOptions.pageLifetimes,
    externalClasses = mpComponentOptions.externalClasses;
  var vueComponentOptions = {
    mixins: [],
    props: {},
    watch: {},
    mpOptions: {
      mpObservers: []
    }
  };
  parseComponents(vueComponentOptions);
  parseData(data, vueComponentOptions);
  parseOptions(options, vueComponentOptions);
  parseMethods(methods, vueComponentOptions);
  parseBehaviors(behaviors, vueComponentOptions);
  parseLifetimes(lifetimes, vueComponentOptions);
  parseObservers(observers, vueComponentOptions);
  parseRelations(relations, vueComponentOptions);
  parseProperties(properties, vueComponentOptions);
  parsePageLifetimes(pageLifetimes, vueComponentOptions);
  parseExternalClasses(externalClasses, vueComponentOptions);
  parseLifecycle(mpComponentOptions, vueComponentOptions);
  parseDefinitionFilter(mpComponentOptions);
  return vueComponentOptions;
}
function initRelationHandlers(type, handler, target, ctx) {
  if (!handler) {
    return;
  }
  var name = "_$".concat(type, "Handlers");
  (ctx[name] || (ctx[name] = [])).push(function () {
    handler.call(ctx, target);
  });
}
function initLinkedHandlers(relation, target, ctx) {
  var type = 'linked';
  var name = relation.name;
  var relationNodes = ctx._$relationNodes || (ctx._$relationNodes = Object.create(null));
  (relationNodes[name] || (relationNodes[name] = [])).push(target);
  initRelationHandlers(type, relation[type], target, ctx);
}
function initUnlinkedHandlers(relation, target, ctx) {
  var type = 'unlinked';
  initRelationHandlers(type, relation[type], target, ctx);
}
function findParentRelation(parentVm, target, type) {
  var relations = parentVm && parentVm.$options.mpOptions && parentVm.$options.mpOptions.relations;
  if (!relations) {
    return [];
  }
  var name = Object.keys(relations).find(function (name) {
    var relation = relations[name];
    return relation.target === target && relation.type === type;
  });
  if (!name) {
    return [];
  }
  return [relations[name], parentVm];
}
function initParentRelation(vm, childRelation, match) {
  var _match = match(vm, vm.$options.mpOptions.path),
    _match2 = (0, _slicedToArray2.default)(_match, 2),
    parentRelation = _match2[0],
    parentVm = _match2[1];
  if (!parentRelation) {
    return;
  }
  initLinkedHandlers(parentRelation, vm, parentVm);
  initLinkedHandlers(childRelation, parentVm, vm);
  initUnlinkedHandlers(parentRelation, vm, parentVm);
  initUnlinkedHandlers(childRelation, parentVm, vm);
}
function initRelation(relation, vm) {
  var type = relation.type;
  if (type === 'parent') {
    initParentRelation(vm, relation, function matchParent(vm, target) {
      return findParentRelation(vm.$parent, target, 'child');
    });
  } else if (type === 'ancestor') {
    initParentRelation(vm, relation, function matchAncestor(vm, target) {
      var $parent = vm.$parent;
      while ($parent) {
        var ret = findParentRelation($parent, target, 'descendant');
        if (ret.length) {
          return ret;
        }
        $parent = $parent.$parent;
      }
      return [];
    });
  }
}
function initRelations(vm) {
  var _ref = vm.$options.mpOptions || {},
    relations = _ref.relations;
  if (!relations) {
    return;
  }
  Object.keys(relations).forEach(function (name) {
    initRelation(relations[name], vm);
  });
}
function handleRelations(vm, type) {
  // TODO 需要移除 relationNodes
  var handlers = vm["_$".concat(type, "Handlers")];
  if (!handlers) {
    return;
  }
  handlers.forEach(function (handler) {
    return handler();
  });
}
var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};
function proxy(target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter() {
    return this[sourceKey][key];
  };
  sharedPropertyDefinition.set = function proxySetter(val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}
function setDataByExprPath(exprPath, value, data) {
  var keys = exprPath.replace(/\[(\d+?)\]/g, '.$1').split('.');
  keys.reduce(function (obj, key, idx) {
    if (idx === keys.length - 1) {
      obj[key] = value;
    } else {
      if (typeof obj[key] === 'undefined') {
        obj[key] = {};
      }
      return obj[key];
    }
  }, data);
  return keys.length === 1;
}
function setData(data, callback) {
  var _this = this;
  if (!isPlainObject(data)) {
    return;
  }
  Object.keys(data).forEach(function (key) {
    if (setDataByExprPath(key, data[key], _this.data)) {
      !hasOwn(_this, key) && proxy(_this, SOURCE_KEY, key);
    }
  });
  this.$forceUpdate();
  isFn(callback) && this.$nextTick(callback);
}

/**
 * https://github.com/swan-team/swan-js/blob/61e2a63f7aa576b5daafbe77fdfa7c65b977060c/src/utils/index.js
 */

var _toString$1 = Object.prototype.toString;
/**
 * 深度assign的函数
 * @param {Object} targetObject 要被拷贝的目标对象
 * @param {Object} originObject 拷贝的源对象
 * @return {Object} merge后的对象
 */
var deepAssign = function deepAssign() {
  var targetObject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var originObject = arguments.length > 1 ? arguments[1] : undefined;
  var originType = _toString$1.call(originObject);
  if (originType === '[object Array]') {
    targetObject = originObject.slice(0);
    return targetObject;
  } else if (originType === '[object Object]') {
    for (var key in originObject) {
      targetObject[key] = deepAssign(targetObject[key], originObject[key]);
    }
    return targetObject;
  } else if (originType === '[object Date]') {
    return new Date(originObject.getTime());
  } else if (originType === '[object RegExp]') {
    var target = String(originObject);
    var lastIndex = target.lastIndexOf('/');
    return new RegExp(target.slice(1, lastIndex), target.slice(lastIndex + 1));
  }
  return originObject;
};

/**
 * 深度拷贝逻辑，不同于lodash等库，但是与微信一致
 * @param {*} [originObj] 原对象
 * @return {Object|Array} 拷贝结果
 */
var deepClone = function deepClone(originObj) {
  return deepAssign(_toString$1.call(originObj) === '[object Array]' ? [] : {}, originObj);
};
var PROP_DEFAULT_VALUES = (_PROP_DEFAULT_VALUES = {}, (0, _defineProperty2.default)(_PROP_DEFAULT_VALUES, String, ''), (0, _defineProperty2.default)(_PROP_DEFAULT_VALUES, Number, 0), (0, _defineProperty2.default)(_PROP_DEFAULT_VALUES, Boolean, false), (0, _defineProperty2.default)(_PROP_DEFAULT_VALUES, Object, null), (0, _defineProperty2.default)(_PROP_DEFAULT_VALUES, Array, []), (0, _defineProperty2.default)(_PROP_DEFAULT_VALUES, null, null), _PROP_DEFAULT_VALUES);
function getDefaultVal(propType) {
  return PROP_DEFAULT_VALUES[propType];
}
function getPropertyVal(options) {
  if (isPlainObject(options)) {
    if (hasOwn(options, 'value')) {
      return options.value;
    }
    return getDefaultVal(options.type);
  }
  return getDefaultVal(options);
}
function getType(propOptions) {
  return isPlainObject(propOptions) ? propOptions.type : propOptions;
}
function validateProp(key, propsOptions, propsData, vm) {
  var value = propsData[key];
  if (value !== undefined) {
    var propOptions = propsOptions[key];
    var type = getType(propOptions);
    value = formatVal(value, type);
    var observer = propOptions && propOptions.observer;
    if (observer) {
      // 初始化时,异步触发 observer,否则 observer 中无法访问 methods 或其他
      setTimeout(function () {
        observe(observer, vm, value);
      }, 4);
    }
    return value;
  }
  return getPropertyVal(propsOptions[key]);
}
function formatVal(val, type) {
  if (type === Boolean) {
    return !!val;
  } else if (type === String) {
    return String(val);
  }
  return val;
}
function observe(observer, vm, newVal, oldVal) {
  try {
    if (typeof observer === 'function') {
      observer.call(vm, newVal, oldVal);
    } else if (typeof observer === 'string' && typeof vm[observer] === 'function') {
      vm[observer](newVal, oldVal);
    }
  } catch (err) {
    console.error("execute observer ".concat(observer, " callback fail! err: ").concat(err));
  }
}
function initProperties(vm, instanceData) {
  var properties = vm.$options.mpOptions.properties;
  if (!properties) {
    return;
  }
  var propsData = deepClone(vm.$options.propsData) || {};
  var _loop = function _loop(key) {
    var observer = isPlainObject(properties[key]) ? properties[key].observer : false;
    var value = validateProp(key, properties, propsData, vm);
    Object.defineProperty(instanceData, key, {
      enumerable: true,
      configurable: true,
      get: function get() {
        return value;
      },
      set: function set(newVal) {
        var oldVal = value;
        /* eslint-disable no-self-compare */
        if (newVal === value || newVal !== newVal && value !== value) {
          return;
        }
        // TODO 临时方案,clone array
        value = Array.isArray(newVal) ? newVal.slice(0) : newVal;
        if (observer) {
          observe(observer, vm, newVal, oldVal);
        }
        // 触发渲染
        vm.$forceUpdate();
      }
    });
  };
  for (var key in properties) {
    _loop(key);
  }
}
function updateProperties(vm) {
  var properties = vm.$options.mpOptions && vm.$options.mpOptions.properties;
  var propsData = vm.$options.propsData;
  if (propsData && properties) {
    Object.keys(properties).forEach(function (key) {
      if (hasOwn(propsData, key)) {
        vm[key] = formatVal(propsData[key], getType(properties[key]));
      }
    });
  }
}
function initState(vm) {
  var instanceData = JSON.parse(JSON.stringify(vm.$options.mpOptions.data || {}));
  vm[SOURCE_KEY] = instanceData;
  var propertyDefinition = {
    get: function get() {
      return vm[SOURCE_KEY];
    },
    set: function set(value) {
      vm[SOURCE_KEY] = value;
    }
  };
  Object.defineProperties(vm, {
    data: propertyDefinition,
    properties: propertyDefinition
  });
  vm.setData = setData;
  initProperties(vm, instanceData);
  Object.keys(instanceData).forEach(function (key) {
    proxy(vm, SOURCE_KEY, key);
  });
}
function initMethods(vm) {
  var oldEmit = vm.$emit;
  vm.triggerEvent = function (eventName, detail, options) {
    var target = {
      dataset: vm.$el.dataset
    };
    var event = {
      target: target,
      currentTarget: target,
      detail: detail,
      preventDefault: noop,
      stopPropagation: noop
    };
    oldEmit.call(vm, eventName, event);
  };
  // 主要是Vant 自己封装了 $emit,放到 methods 中会触发 Vue 的警告,索性,框架直接重写该方法
  vm.$emit = function () {
    vm.triggerEvent.apply(vm, arguments);
  };
  vm.getRelationNodes = function (relationKey) {
    // 需要过滤已被销毁的vm
    /* eslint-disable  no-mixed-operators */
    return (vm._$relationNodes && vm._$relationNodes[relationKey] || []).filter(function (vm) {
      return !vm._isDestroyed;
    });
  };
  vm._$updateProperties = updateProperties;
}
function handleObservers(vm) {
  var watch = vm.$options.watch;
  if (!watch) {
    return;
  }
  Object.keys(watch).forEach(function (name) {
    var observer = watch[name];
    if (observer.mounted) {
      var val = vm[name];
      var handler = observer.handler;
      if (typeof handler === 'string') {
        handler = vm[handler];
      }
      handler && handler.call(vm, val, val);
    }
  });
}
var polyfill = {
  beforeCreate: function beforeCreate() {
    // 取消 development 时的 Proxy,避免小程序组件模板中使用尚未定义的属性告警
    this._renderProxy = this;
    this._$self = this;
    this._$noop = noop;
  },
  created: function created() {
    // properties 中可能会访问 methods,故需要在 created 中初始化
    initState(this);
    initMethods(this);
    initRelations(this);
  },
  mounted: function mounted() {
    handleObservers(this);
  },
  destroyed: function destroyed() {
    handleRelations(this, 'unlinked');
  }
};
global.__wxRoute = '';
global.__wxComponents = Object.create(null);
global.__wxVueOptions = Object.create(null);
function Page(options) {
  var pageOptions = parsePage(options);
  pageOptions.mixins.unshift(polyfill);
  pageOptions.mpOptions.path = global.__wxRoute;
  global.__wxComponents[global.__wxRoute] = pageOptions;
}
function initRelationsHandler(vueComponentOptions) {
  // linked 需要在当前组件 attached 之后再执行
  if (!vueComponentOptions.onServiceAttached) {
    vueComponentOptions.onServiceAttached = [];
  }
  vueComponentOptions.onServiceAttached.push(function onServiceAttached() {
    handleRelations(this, 'linked');
  });
}
function Component(options) {
  var componentOptions = parseComponent(options);
  componentOptions.mixins.unshift(polyfill);
  componentOptions.mpOptions.path = global.__wxRoute;
  initRelationsHandler(componentOptions);
  global.__wxComponents[global.__wxRoute] = componentOptions;
}
function Behavior(options) {
  return options;
}
var nextTick = _vue.default.nextTick;
exports.nextTick = nextTick;
var index = uni.__$wx__;
var _default = index;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 19)))

/***/ }),
/* 19 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 20 */
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles.js */ 21);
var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit.js */ 22);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 23);
var nonIterableRest = __webpack_require__(/*! ./nonIterableRest.js */ 25);
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 21 */
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 22 */
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) {
        ;
      }
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 23 */
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 24);
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 24 */
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 25 */
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 26 */
/*!**********************!*\
  !*** external "Vue" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = Vue;

/***/ }),
/* 27 */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 28 */
/*!***************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/config/index.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EM_WEB_SOCKET_URL = exports.EM_APP_KEY = exports.EM_API_URL = void 0;\nvar EM_API_URL = 'https://a1.easemob.com';\nexports.EM_API_URL = EM_API_URL;\nvar EM_WEB_SOCKET_URL = 'wss://im-api-wechat.easemob.com/websocket';\n// export const EM_APP_KEY = 'easemob#easeim';\nexports.EM_WEB_SOCKET_URL = EM_WEB_SOCKET_URL;\nvar EM_APP_KEY = 'easemob-demo#support';\nexports.EM_APP_KEY = EM_APP_KEY;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2NvbmZpZy9pbmRleC5qcyJdLCJuYW1lcyI6WyJFTV9BUElfVVJMIiwiRU1fV0VCX1NPQ0tFVF9VUkwiLCJFTV9BUFBfS0VZIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFNQSxVQUFVLEdBQUcsd0JBQXdCO0FBQUM7QUFDNUMsSUFBTUMsaUJBQWlCLEdBQUcsMkNBQTJDO0FBQzVFO0FBQUE7QUFDTyxJQUFNQyxVQUFVLEdBQUcsc0JBQXNCO0FBQUMiLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgRU1fQVBJX1VSTCA9ICdodHRwczovL2ExLmVhc2Vtb2IuY29tJztcbmV4cG9ydCBjb25zdCBFTV9XRUJfU09DS0VUX1VSTCA9ICd3c3M6Ly9pbS1hcGktd2VjaGF0LmVhc2Vtb2IuY29tL3dlYnNvY2tldCc7XG4vLyBleHBvcnQgY29uc3QgRU1fQVBQX0tFWSA9ICdlYXNlbW9iI2Vhc2VpbSc7XG5leHBvcnQgY29uc3QgRU1fQVBQX0tFWSA9ICdlYXNlbW9iLWRlbW8jc3VwcG9ydCc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/*!***************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emApis/index.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"emConnect\", {\n  enumerable: true,\n  get: function get() {\n    return _emConnect.default;\n  }\n});\nObject.defineProperty(exports, \"emContacts\", {\n  enumerable: true,\n  get: function get() {\n    return _emContacts.default;\n  }\n});\nObject.defineProperty(exports, \"emConversation\", {\n  enumerable: true,\n  get: function get() {\n    return _emConversation.default;\n  }\n});\nObject.defineProperty(exports, \"emGroups\", {\n  enumerable: true,\n  get: function get() {\n    return _emGroups.default;\n  }\n});\nObject.defineProperty(exports, \"emMessages\", {\n  enumerable: true,\n  get: function get() {\n    return _emMessages.default;\n  }\n});\nObject.defineProperty(exports, \"emSendReadAck\", {\n  enumerable: true,\n  get: function get() {\n    return _emReadAck.default;\n  }\n});\nObject.defineProperty(exports, \"emUserInfos\", {\n  enumerable: true,\n  get: function get() {\n    return _emUserInfos.default;\n  }\n});\nvar _emConnect = _interopRequireDefault(__webpack_require__(/*! ./emConnect */ 30));\nvar _emUserInfos = _interopRequireDefault(__webpack_require__(/*! ./emUserInfos */ 31));\nvar _emContacts = _interopRequireDefault(__webpack_require__(/*! ./emContacts */ 32));\nvar _emGroups = _interopRequireDefault(__webpack_require__(/*! ./emGroups */ 37));\nvar _emReadAck = _interopRequireDefault(__webpack_require__(/*! ./emReadAck */ 38));\nvar _emConversation = _interopRequireDefault(__webpack_require__(/*! ./emConversation */ 39));\nvar _emMessages = _interopRequireDefault(__webpack_require__(/*! ./emMessages */ 41));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtQXBpcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlbUNvbm5lY3QgZnJvbSAnLi9lbUNvbm5lY3QnO1xuaW1wb3J0IGVtVXNlckluZm9zIGZyb20gJy4vZW1Vc2VySW5mb3MnO1xuaW1wb3J0IGVtQ29udGFjdHMgZnJvbSAnLi9lbUNvbnRhY3RzJztcbmltcG9ydCBlbUdyb3VwcyBmcm9tICcuL2VtR3JvdXBzJztcbmltcG9ydCBlbVNlbmRSZWFkQWNrIGZyb20gJy4vZW1SZWFkQWNrJztcbmltcG9ydCBlbUNvbnZlcnNhdGlvbiBmcm9tICcuL2VtQ29udmVyc2F0aW9uJztcbmltcG9ydCBlbU1lc3NhZ2VzIGZyb20gJy4vZW1NZXNzYWdlcyc7XG5leHBvcnQge1xuICBlbUNvbm5lY3QsXG4gIGVtVXNlckluZm9zLFxuICBlbUNvbnRhY3RzLFxuICBlbUdyb3VwcyxcbiAgZW1TZW5kUmVhZEFjayxcbiAgZW1Db252ZXJzYXRpb24sXG4gIGVtTWVzc2FnZXNcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/*!*******************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emApis/emConnect.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar emConnect = function emConnect() {\n  var loginWithPassword = function loginWithPassword(hxUserId, hxPassword) {\n    if (!hxUserId || !hxPassword) throw Error('empty params');\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.open({\n        user: hxUserId,\n        pwd: hxPassword\n      }).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  };\n  var loginWithAccessToken = function loginWithAccessToken(hxUserId, hxAccessToken) {\n    if (!hxUserId || !hxAccessToken) throw Error('empty params');\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.open({\n        user: hxUserId,\n        accessToken: hxAccessToken\n      }).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  };\n  var closeEaseIM = function closeEaseIM() {\n    _index.EMClient.close();\n  };\n  return {\n    loginWithPassword: loginWithPassword,\n    loginWithAccessToken: loginWithAccessToken,\n    closeEaseIM: closeEaseIM\n  };\n};\nvar _default = emConnect;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtQXBpcy9lbUNvbm5lY3QuanMiXSwibmFtZXMiOlsiZW1Db25uZWN0IiwibG9naW5XaXRoUGFzc3dvcmQiLCJoeFVzZXJJZCIsImh4UGFzc3dvcmQiLCJFcnJvciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiRU1DbGllbnQiLCJvcGVuIiwidXNlciIsInB3ZCIsInRoZW4iLCJyZXMiLCJjYXRjaCIsImVyciIsImxvZ2luV2l0aEFjY2Vzc1Rva2VuIiwiaHhBY2Nlc3NUb2tlbiIsImFjY2Vzc1Rva2VuIiwiY2xvc2VFYXNlSU0iLCJjbG9zZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQSxJQUFNQSxTQUFTLEdBQUcsU0FBWkEsU0FBUyxHQUFTO0VBQ3RCLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBaUIsQ0FBSUMsUUFBUSxFQUFFQyxVQUFVLEVBQUs7SUFDbEQsSUFBSSxDQUFDRCxRQUFRLElBQUksQ0FBQ0MsVUFBVSxFQUFFLE1BQU1DLEtBQUssQ0FBQyxjQUFjLENBQUM7SUFDekQsT0FBTyxJQUFJQyxPQUFPLENBQUMsVUFBQ0MsT0FBTyxFQUFFQyxNQUFNLEVBQUs7TUFDdENDLGVBQVEsQ0FBQ0MsSUFBSSxDQUFDO1FBQ1pDLElBQUksRUFBRVIsUUFBUTtRQUNkUyxHQUFHLEVBQUVSO01BQ1AsQ0FBQyxDQUFDLENBQ0NTLElBQUksQ0FBQyxVQUFDQyxHQUFHLEVBQUs7UUFDYlAsT0FBTyxDQUFDTyxHQUFHLENBQUM7TUFDZCxDQUFDLENBQUMsQ0FDREMsS0FBSyxDQUFDLFVBQUNDLEdBQUc7UUFBQSxPQUFLUixNQUFNLENBQUNRLEdBQUcsQ0FBQztNQUFBLEVBQUM7SUFDaEMsQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUNELElBQU1DLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBb0IsQ0FBSWQsUUFBUSxFQUFFZSxhQUFhLEVBQUs7SUFDeEQsSUFBSSxDQUFDZixRQUFRLElBQUksQ0FBQ2UsYUFBYSxFQUFFLE1BQU1iLEtBQUssQ0FBQyxjQUFjLENBQUM7SUFDNUQsT0FBTyxJQUFJQyxPQUFPLENBQUMsVUFBQ0MsT0FBTyxFQUFFQyxNQUFNLEVBQUs7TUFDdENDLGVBQVEsQ0FBQ0MsSUFBSSxDQUFDO1FBQ1pDLElBQUksRUFBRVIsUUFBUTtRQUNkZ0IsV0FBVyxFQUFFRDtNQUNmLENBQUMsQ0FBQyxDQUNDTCxJQUFJLENBQUMsVUFBQ0MsR0FBRyxFQUFLO1FBQ2JQLE9BQU8sQ0FBQ08sR0FBRyxDQUFDO01BQ2QsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQyxVQUFDQyxHQUFHO1FBQUEsT0FBS1IsTUFBTSxDQUFDUSxHQUFHLENBQUM7TUFBQSxFQUFDO0lBQ2hDLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRCxJQUFNSSxXQUFXLEdBQUcsU0FBZEEsV0FBVyxHQUFTO0lBQ3hCWCxlQUFRLENBQUNZLEtBQUssRUFBRTtFQUNsQixDQUFDO0VBQ0QsT0FBTztJQUNMbkIsaUJBQWlCLEVBQWpCQSxpQkFBaUI7SUFDakJlLG9CQUFvQixFQUFwQkEsb0JBQW9CO0lBQ3BCRyxXQUFXLEVBQVhBO0VBQ0YsQ0FBQztBQUNILENBQUM7QUFBQyxlQUNhbkIsU0FBUztBQUFBIiwiZmlsZSI6IjMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRU1DbGllbnQgfSBmcm9tICcuLi9pbmRleCc7XG5jb25zdCBlbUNvbm5lY3QgPSAoKSA9PiB7XG4gIGNvbnN0IGxvZ2luV2l0aFBhc3N3b3JkID0gKGh4VXNlcklkLCBoeFBhc3N3b3JkKSA9PiB7XG4gICAgaWYgKCFoeFVzZXJJZCB8fCAhaHhQYXNzd29yZCkgdGhyb3cgRXJyb3IoJ2VtcHR5IHBhcmFtcycpO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBFTUNsaWVudC5vcGVuKHtcbiAgICAgICAgdXNlcjogaHhVc2VySWQsXG4gICAgICAgIHB3ZDogaHhQYXNzd29yZCxcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICByZXNvbHZlKHJlcyk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiByZWplY3QoZXJyKSk7XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IGxvZ2luV2l0aEFjY2Vzc1Rva2VuID0gKGh4VXNlcklkLCBoeEFjY2Vzc1Rva2VuKSA9PiB7XG4gICAgaWYgKCFoeFVzZXJJZCB8fCAhaHhBY2Nlc3NUb2tlbikgdGhyb3cgRXJyb3IoJ2VtcHR5IHBhcmFtcycpO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBFTUNsaWVudC5vcGVuKHtcbiAgICAgICAgdXNlcjogaHhVc2VySWQsXG4gICAgICAgIGFjY2Vzc1Rva2VuOiBoeEFjY2Vzc1Rva2VuLFxuICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgIHJlc29sdmUocmVzKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHJlamVjdChlcnIpKTtcbiAgICB9KTtcbiAgfTtcbiAgY29uc3QgY2xvc2VFYXNlSU0gPSAoKSA9PiB7XG4gICAgRU1DbGllbnQuY2xvc2UoKTtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBsb2dpbldpdGhQYXNzd29yZCxcbiAgICBsb2dpbldpdGhBY2Nlc3NUb2tlbixcbiAgICBjbG9zZUVhc2VJTSxcbiAgfTtcbn07XG5leHBvcnQgZGVmYXVsdCBlbUNvbm5lY3Q7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///30\n");

/***/ }),
/* 31 */
/*!*********************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emApis/emUserInfos.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));\nvar _index = __webpack_require__(/*! ../index */ 16);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar _chunkArr = function _chunkArr(oldArr, num) {\n  oldArr.sort(function (a, b) {\n    return a - b;\n  });\n  if (oldArr.length <= 0) return oldArr;\n  var newArr = [];\n  if (Math.ceil(oldArr.length / num) <= 1) {\n    newArr.push(oldArr);\n    return newArr;\n  }\n  for (var i = 0; i < oldArr.length; i = i + num) {\n    newArr.push(oldArr.slice(i, i + num));\n  }\n  return newArr;\n};\nvar emUserInofs = function emUserInofs() {\n  var fetchUserInfoWithLoginId = function fetchUserInfoWithLoginId() {\n    var userId = _index.EMClient.user;\n    return new Promise(function (resolve, reject) {\n      if (userId) {\n        _index.EMClient.fetchUserInfoById(userId).then(function (res) {\n          var data = res.data;\n          resolve(data);\n        }).catch(function (error) {\n          reject(error);\n        });\n      }\n    });\n  };\n  var fetchOtherInfoFromServer = function fetchOtherInfoFromServer(userList) {\n    var friendList = [];\n    friendList = Object.assign([], userList);\n    return new Promise(function (resolve, reject) {\n      if (friendList.length && friendList.length < 99) {\n        _index.EMClient.fetchUserInfoById(friendList).then(function (res) {\n          var data = res.data;\n          resolve(data);\n        }).catch(function (error) {\n          reject(error);\n        });\n      } else {\n        var newArr = _chunkArr(friendList, 99);\n        for (var i = 0; i < newArr.length; i++) {\n          _index.EMClient.fetchUserInfoById(newArr[i]).then(function (res) {\n            var data = res.data;\n            resolve(data);\n          }).catch(function (error) {\n            reject(error);\n          });\n        }\n      }\n    });\n  };\n  var updateUserInfosFromServer = function updateUserInfosFromServer(params) {\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.updateUserInfo(_objectSpread({}, params)).then(function (res) {\n        var data = res.data;\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  return {\n    fetchUserInfoWithLoginId: fetchUserInfoWithLoginId,\n    fetchOtherInfoFromServer: fetchOtherInfoFromServer,\n    updateUserInfosFromServer: updateUserInfosFromServer\n  };\n};\nvar _default = emUserInofs;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtQXBpcy9lbVVzZXJJbmZvcy5qcyJdLCJuYW1lcyI6WyJfY2h1bmtBcnIiLCJvbGRBcnIiLCJudW0iLCJzb3J0IiwiYSIsImIiLCJsZW5ndGgiLCJuZXdBcnIiLCJNYXRoIiwiY2VpbCIsInB1c2giLCJpIiwic2xpY2UiLCJlbVVzZXJJbm9mcyIsImZldGNoVXNlckluZm9XaXRoTG9naW5JZCIsInVzZXJJZCIsIkVNQ2xpZW50IiwidXNlciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZmV0Y2hVc2VySW5mb0J5SWQiLCJ0aGVuIiwicmVzIiwiZGF0YSIsImNhdGNoIiwiZXJyb3IiLCJmZXRjaE90aGVySW5mb0Zyb21TZXJ2ZXIiLCJ1c2VyTGlzdCIsImZyaWVuZExpc3QiLCJPYmplY3QiLCJhc3NpZ24iLCJ1cGRhdGVVc2VySW5mb3NGcm9tU2VydmVyIiwicGFyYW1zIiwidXBkYXRlVXNlckluZm8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFBb0M7QUFBQTtBQUNwQyxJQUFNQSxTQUFTLEdBQUcsU0FBWkEsU0FBUyxDQUFJQyxNQUFNLEVBQUVDLEdBQUcsRUFBSztFQUNqQ0QsTUFBTSxDQUFDRSxJQUFJLENBQUMsVUFBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUs7SUFDcEIsT0FBT0QsQ0FBQyxHQUFHQyxDQUFDO0VBQ2QsQ0FBQyxDQUFDO0VBQ0YsSUFBSUosTUFBTSxDQUFDSyxNQUFNLElBQUksQ0FBQyxFQUFFLE9BQU9MLE1BQU07RUFDckMsSUFBSU0sTUFBTSxHQUFHLEVBQUU7RUFDZixJQUFJQyxJQUFJLENBQUNDLElBQUksQ0FBQ1IsTUFBTSxDQUFDSyxNQUFNLEdBQUdKLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUN2Q0ssTUFBTSxDQUFDRyxJQUFJLENBQUNULE1BQU0sQ0FBQztJQUNuQixPQUFPTSxNQUFNO0VBQ2Y7RUFDQSxLQUFLLElBQUlJLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR1YsTUFBTSxDQUFDSyxNQUFNLEVBQUVLLENBQUMsR0FBR0EsQ0FBQyxHQUFHVCxHQUFHLEVBQUU7SUFDOUNLLE1BQU0sQ0FBQ0csSUFBSSxDQUFDVCxNQUFNLENBQUNXLEtBQUssQ0FBQ0QsQ0FBQyxFQUFFQSxDQUFDLEdBQUdULEdBQUcsQ0FBQyxDQUFDO0VBQ3ZDO0VBQ0EsT0FBT0ssTUFBTTtBQUNmLENBQUM7QUFFRCxJQUFNTSxXQUFXLEdBQUcsU0FBZEEsV0FBVyxHQUFTO0VBQ3hCLElBQU1DLHdCQUF3QixHQUFHLFNBQTNCQSx3QkFBd0IsR0FBUztJQUNyQyxJQUFNQyxNQUFNLEdBQUdDLGVBQVEsQ0FBQ0MsSUFBSTtJQUM1QixPQUFPLElBQUlDLE9BQU8sQ0FBQyxVQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBSztNQUN0QyxJQUFJTCxNQUFNLEVBQUU7UUFDVkMsZUFBUSxDQUFDSyxpQkFBaUIsQ0FBQ04sTUFBTSxDQUFDLENBQy9CTyxJQUFJLENBQUMsVUFBQ0MsR0FBRyxFQUFLO1VBQ2IsSUFBUUMsSUFBSSxHQUFLRCxHQUFHLENBQVpDLElBQUk7VUFDWkwsT0FBTyxDQUFDSyxJQUFJLENBQUM7UUFDZixDQUFDLENBQUMsQ0FDREMsS0FBSyxDQUFDLFVBQUNDLEtBQUssRUFBSztVQUNoQk4sTUFBTSxDQUFDTSxLQUFLLENBQUM7UUFDZixDQUFDLENBQUM7TUFDTjtJQUNGLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRCxJQUFNQyx3QkFBd0IsR0FBRyxTQUEzQkEsd0JBQXdCLENBQUlDLFFBQVEsRUFBSztJQUM3QyxJQUFJQyxVQUFVLEdBQUcsRUFBRTtJQUNuQkEsVUFBVSxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQyxFQUFFLEVBQUVILFFBQVEsQ0FBQztJQUN4QyxPQUFPLElBQUlWLE9BQU8sQ0FBQyxVQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBSztNQUN0QyxJQUFJUyxVQUFVLENBQUN2QixNQUFNLElBQUl1QixVQUFVLENBQUN2QixNQUFNLEdBQUcsRUFBRSxFQUFFO1FBQy9DVSxlQUFRLENBQUNLLGlCQUFpQixDQUFDUSxVQUFVLENBQUMsQ0FDbkNQLElBQUksQ0FBQyxVQUFDQyxHQUFHLEVBQUs7VUFDYixJQUFRQyxJQUFJLEdBQUtELEdBQUcsQ0FBWkMsSUFBSTtVQUNaTCxPQUFPLENBQUNLLElBQUksQ0FBQztRQUNmLENBQUMsQ0FBQyxDQUNEQyxLQUFLLENBQUMsVUFBQ0MsS0FBSyxFQUFLO1VBQ2hCTixNQUFNLENBQUNNLEtBQUssQ0FBQztRQUNmLENBQUMsQ0FBQztNQUNOLENBQUMsTUFBTTtRQUNMLElBQUluQixNQUFNLEdBQUdQLFNBQVMsQ0FBQzZCLFVBQVUsRUFBRSxFQUFFLENBQUM7UUFDdEMsS0FBSyxJQUFJbEIsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHSixNQUFNLENBQUNELE1BQU0sRUFBRUssQ0FBQyxFQUFFLEVBQUU7VUFDdENLLGVBQVEsQ0FBQ0ssaUJBQWlCLENBQUNkLE1BQU0sQ0FBQ0ksQ0FBQyxDQUFDLENBQUMsQ0FDbENXLElBQUksQ0FBQyxVQUFDQyxHQUFHLEVBQUs7WUFDYixJQUFRQyxJQUFJLEdBQUtELEdBQUcsQ0FBWkMsSUFBSTtZQUNaTCxPQUFPLENBQUNLLElBQUksQ0FBQztVQUNmLENBQUMsQ0FBQyxDQUNEQyxLQUFLLENBQUMsVUFBQ0MsS0FBSyxFQUFLO1lBQ2hCTixNQUFNLENBQUNNLEtBQUssQ0FBQztVQUNmLENBQUMsQ0FBQztRQUNOO01BQ0Y7SUFDRixDQUFDLENBQUM7RUFDSixDQUFDO0VBQ0QsSUFBTU0seUJBQXlCLEdBQUcsU0FBNUJBLHlCQUF5QixDQUFJQyxNQUFNLEVBQUs7SUFDNUMsT0FBTyxJQUFJZixPQUFPLENBQUMsVUFBQ0MsT0FBTyxFQUFFQyxNQUFNLEVBQUs7TUFDdENKLGVBQVEsQ0FBQ2tCLGNBQWMsbUJBQU1ELE1BQU0sRUFBRyxDQUNuQ1gsSUFBSSxDQUFDLFVBQUNDLEdBQUcsRUFBSztRQUNiLElBQVFDLElBQUksR0FBS0QsR0FBRyxDQUFaQyxJQUFJO1FBQ1pMLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDO01BQ2YsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQyxVQUFDQyxLQUFLLEVBQUs7UUFDaEJOLE1BQU0sQ0FBQ00sS0FBSyxDQUFDO01BQ2YsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUNELE9BQU87SUFDTFosd0JBQXdCLEVBQXhCQSx3QkFBd0I7SUFDeEJhLHdCQUF3QixFQUF4QkEsd0JBQXdCO0lBQ3hCSyx5QkFBeUIsRUFBekJBO0VBQ0YsQ0FBQztBQUNILENBQUM7QUFBQyxlQUNhbkIsV0FBVztBQUFBIiwiZmlsZSI6IjMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRU1DbGllbnQgfSBmcm9tICcuLi9pbmRleCc7XG5jb25zdCBfY2h1bmtBcnIgPSAob2xkQXJyLCBudW0pID0+IHtcbiAgb2xkQXJyLnNvcnQoKGEsIGIpID0+IHtcbiAgICByZXR1cm4gYSAtIGI7XG4gIH0pO1xuICBpZiAob2xkQXJyLmxlbmd0aCA8PSAwKSByZXR1cm4gb2xkQXJyO1xuICBsZXQgbmV3QXJyID0gW107XG4gIGlmIChNYXRoLmNlaWwob2xkQXJyLmxlbmd0aCAvIG51bSkgPD0gMSkge1xuICAgIG5ld0Fyci5wdXNoKG9sZEFycik7XG4gICAgcmV0dXJuIG5ld0FycjtcbiAgfVxuICBmb3IgKGxldCBpID0gMDsgaSA8IG9sZEFyci5sZW5ndGg7IGkgPSBpICsgbnVtKSB7XG4gICAgbmV3QXJyLnB1c2gob2xkQXJyLnNsaWNlKGksIGkgKyBudW0pKTtcbiAgfVxuICByZXR1cm4gbmV3QXJyO1xufTtcblxuY29uc3QgZW1Vc2VySW5vZnMgPSAoKSA9PiB7XG4gIGNvbnN0IGZldGNoVXNlckluZm9XaXRoTG9naW5JZCA9ICgpID0+IHtcbiAgICBjb25zdCB1c2VySWQgPSBFTUNsaWVudC51c2VyO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBpZiAodXNlcklkKSB7XG4gICAgICAgIEVNQ2xpZW50LmZldGNoVXNlckluZm9CeUlkKHVzZXJJZClcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IGRhdGEgfSA9IHJlcztcbiAgICAgICAgICAgIHJlc29sdmUoZGF0YSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuICBjb25zdCBmZXRjaE90aGVySW5mb0Zyb21TZXJ2ZXIgPSAodXNlckxpc3QpID0+IHtcbiAgICBsZXQgZnJpZW5kTGlzdCA9IFtdO1xuICAgIGZyaWVuZExpc3QgPSBPYmplY3QuYXNzaWduKFtdLCB1c2VyTGlzdCk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmIChmcmllbmRMaXN0Lmxlbmd0aCAmJiBmcmllbmRMaXN0Lmxlbmd0aCA8IDk5KSB7XG4gICAgICAgIEVNQ2xpZW50LmZldGNoVXNlckluZm9CeUlkKGZyaWVuZExpc3QpXG4gICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSByZXM7XG4gICAgICAgICAgICByZXNvbHZlKGRhdGEpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBuZXdBcnIgPSBfY2h1bmtBcnIoZnJpZW5kTGlzdCwgOTkpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5ld0Fyci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIEVNQ2xpZW50LmZldGNoVXNlckluZm9CeUlkKG5ld0FycltpXSlcbiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSByZXM7XG4gICAgICAgICAgICAgIHJlc29sdmUoZGF0YSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbiAgY29uc3QgdXBkYXRlVXNlckluZm9zRnJvbVNlcnZlciA9IChwYXJhbXMpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgRU1DbGllbnQudXBkYXRlVXNlckluZm8oeyAuLi5wYXJhbXMgfSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzO1xuICAgICAgICAgIHJlc29sdmUoZGF0YSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBmZXRjaFVzZXJJbmZvV2l0aExvZ2luSWQsXG4gICAgZmV0Y2hPdGhlckluZm9Gcm9tU2VydmVyLFxuICAgIHVwZGF0ZVVzZXJJbmZvc0Zyb21TZXJ2ZXIsXG4gIH07XG59O1xuZXhwb3J0IGRlZmF1bHQgZW1Vc2VySW5vZnM7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///31\n");

/***/ }),
/* 32 */
/*!********************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emApis/emContacts.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 33));\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar emContacts = function emContacts() {\n  var fetchContactsListFromServer = function fetchContactsListFromServer() {\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.getAllContacts().then(function (res) {\n        var data = res.data;\n        __f__(\"log\", '>>>>>获取全部好友列表', \" at EaseIM/emApis/emContacts.js:8\");\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var removeContactFromServer = function removeContactFromServer(contactId) {\n    if (contactId) {\n      _index.EMClient.deleteContact(contactId);\n    }\n  };\n  var addContact = function addContact(contactId, applyMsg) {\n    if (contactId) {\n      _index.EMClient.addContact(contactId, applyMsg);\n    }\n  };\n  var acceptContactInvite = function acceptContactInvite(contactId) {\n    if (contactId) {\n      _index.EMClient.acceptContactInvite(contactId);\n    }\n  };\n  var declineContactInvite = function declineContactInvite(contactId) {\n    if (contactId) {\n      _index.EMClient.declineContactInvite(contactId);\n    }\n  };\n  var getBlocklistFromServer = function getBlocklistFromServer() {\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.getBlocklist().then(function (res) {\n        var data = res.data;\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var addUsersToBlocklist = function addUsersToBlocklist(userList) {\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.addUsersToBlocklist({\n        name: (0, _toConsumableArray2.default)(userList)\n      }).then(function (res) {\n        var data = res.data;\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var removeUsersFromBlocklist = function removeUsersFromBlocklist(userList) {\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.removeUsersFromBlocklist({\n        name: (0, _toConsumableArray2.default)(userList)\n      }).then(function (res) {\n        var data = res.data;\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  return {\n    fetchContactsListFromServer: fetchContactsListFromServer,\n    removeContactFromServer: removeContactFromServer,\n    acceptContactInvite: acceptContactInvite,\n    declineContactInvite: declineContactInvite,\n    addContact: addContact,\n    getBlocklistFromServer: getBlocklistFromServer,\n    addUsersToBlocklist: addUsersToBlocklist,\n    removeUsersFromBlocklist: removeUsersFromBlocklist\n  };\n};\nvar _default = emContacts;\nexports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtQXBpcy9lbUNvbnRhY3RzLmpzIl0sIm5hbWVzIjpbImVtQ29udGFjdHMiLCJmZXRjaENvbnRhY3RzTGlzdEZyb21TZXJ2ZXIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIkVNQ2xpZW50IiwiZ2V0QWxsQ29udGFjdHMiLCJ0aGVuIiwicmVzIiwiZGF0YSIsImNhdGNoIiwiZXJyb3IiLCJyZW1vdmVDb250YWN0RnJvbVNlcnZlciIsImNvbnRhY3RJZCIsImRlbGV0ZUNvbnRhY3QiLCJhZGRDb250YWN0IiwiYXBwbHlNc2ciLCJhY2NlcHRDb250YWN0SW52aXRlIiwiZGVjbGluZUNvbnRhY3RJbnZpdGUiLCJnZXRCbG9ja2xpc3RGcm9tU2VydmVyIiwiZ2V0QmxvY2tsaXN0IiwiYWRkVXNlcnNUb0Jsb2NrbGlzdCIsInVzZXJMaXN0IiwibmFtZSIsInJlbW92ZVVzZXJzRnJvbUJsb2NrbGlzdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBLElBQU1BLFVBQVUsR0FBRyxTQUFiQSxVQUFVLEdBQVM7RUFDdkIsSUFBTUMsMkJBQTJCLEdBQUcsU0FBOUJBLDJCQUEyQixHQUFTO0lBQ3hDLE9BQU8sSUFBSUMsT0FBTyxDQUFDLFVBQUNDLE9BQU8sRUFBRUMsTUFBTSxFQUFLO01BQ3RDQyxlQUFRLENBQUNDLGNBQWMsRUFBRSxDQUN0QkMsSUFBSSxDQUFDLFVBQUNDLEdBQUcsRUFBSztRQUNiLElBQVFDLElBQUksR0FBS0QsR0FBRyxDQUFaQyxJQUFJO1FBQ1osYUFBWSxlQUFlO1FBQzNCTixPQUFPLENBQUNNLElBQUksQ0FBQztNQUNmLENBQUMsQ0FBQyxDQUNEQyxLQUFLLENBQUMsVUFBQ0MsS0FBSyxFQUFLO1FBQ2hCUCxNQUFNLENBQUNPLEtBQUssQ0FBQztNQUNmLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRCxJQUFNQyx1QkFBdUIsR0FBRyxTQUExQkEsdUJBQXVCLENBQUlDLFNBQVMsRUFBSztJQUM3QyxJQUFJQSxTQUFTLEVBQUU7TUFDYlIsZUFBUSxDQUFDUyxhQUFhLENBQUNELFNBQVMsQ0FBQztJQUNuQztFQUNGLENBQUM7RUFDRCxJQUFNRSxVQUFVLEdBQUcsU0FBYkEsVUFBVSxDQUFJRixTQUFTLEVBQUVHLFFBQVEsRUFBSztJQUMxQyxJQUFJSCxTQUFTLEVBQUU7TUFDYlIsZUFBUSxDQUFDVSxVQUFVLENBQUNGLFNBQVMsRUFBRUcsUUFBUSxDQUFDO0lBQzFDO0VBQ0YsQ0FBQztFQUNELElBQU1DLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBbUIsQ0FBSUosU0FBUyxFQUFLO0lBQ3pDLElBQUlBLFNBQVMsRUFBRTtNQUNiUixlQUFRLENBQUNZLG1CQUFtQixDQUFDSixTQUFTLENBQUM7SUFDekM7RUFDRixDQUFDO0VBQ0QsSUFBTUssb0JBQW9CLEdBQUcsU0FBdkJBLG9CQUFvQixDQUFJTCxTQUFTLEVBQUs7SUFDMUMsSUFBSUEsU0FBUyxFQUFFO01BQ2JSLGVBQVEsQ0FBQ2Esb0JBQW9CLENBQUNMLFNBQVMsQ0FBQztJQUMxQztFQUNGLENBQUM7RUFDRCxJQUFNTSxzQkFBc0IsR0FBRyxTQUF6QkEsc0JBQXNCLEdBQVM7SUFDbkMsT0FBTyxJQUFJakIsT0FBTyxDQUFDLFVBQUNDLE9BQU8sRUFBRUMsTUFBTSxFQUFLO01BQ3RDQyxlQUFRLENBQUNlLFlBQVksRUFBRSxDQUNwQmIsSUFBSSxDQUFDLFVBQUNDLEdBQUcsRUFBSztRQUNiLElBQVFDLElBQUksR0FBS0QsR0FBRyxDQUFaQyxJQUFJO1FBQ1pOLE9BQU8sQ0FBQ00sSUFBSSxDQUFDO01BQ2YsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQyxVQUFDQyxLQUFLLEVBQUs7UUFDaEJQLE1BQU0sQ0FBQ08sS0FBSyxDQUFDO01BQ2YsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUNELElBQU1VLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBbUIsQ0FBSUMsUUFBUSxFQUFLO0lBQ3hDLE9BQU8sSUFBSXBCLE9BQU8sQ0FBQyxVQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBSztNQUN0Q0MsZUFBUSxDQUFDZ0IsbUJBQW1CLENBQUM7UUFBRUUsSUFBSSxtQ0FBTUQsUUFBUTtNQUFFLENBQUMsQ0FBQyxDQUNsRGYsSUFBSSxDQUFDLFVBQUNDLEdBQUcsRUFBSztRQUNiLElBQVFDLElBQUksR0FBS0QsR0FBRyxDQUFaQyxJQUFJO1FBQ1pOLE9BQU8sQ0FBQ00sSUFBSSxDQUFDO01BQ2YsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQyxVQUFDQyxLQUFLLEVBQUs7UUFDaEJQLE1BQU0sQ0FBQ08sS0FBSyxDQUFDO01BQ2YsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUNELElBQU1hLHdCQUF3QixHQUFHLFNBQTNCQSx3QkFBd0IsQ0FBSUYsUUFBUSxFQUFLO0lBQzdDLE9BQU8sSUFBSXBCLE9BQU8sQ0FBQyxVQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBSztNQUN0Q0MsZUFBUSxDQUFDbUIsd0JBQXdCLENBQUM7UUFBRUQsSUFBSSxtQ0FBTUQsUUFBUTtNQUFFLENBQUMsQ0FBQyxDQUN2RGYsSUFBSSxDQUFDLFVBQUNDLEdBQUcsRUFBSztRQUNiLElBQVFDLElBQUksR0FBS0QsR0FBRyxDQUFaQyxJQUFJO1FBQ1pOLE9BQU8sQ0FBQ00sSUFBSSxDQUFDO01BQ2YsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQyxVQUFDQyxLQUFLLEVBQUs7UUFDaEJQLE1BQU0sQ0FBQ08sS0FBSyxDQUFDO01BQ2YsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUNELE9BQU87SUFDTFYsMkJBQTJCLEVBQTNCQSwyQkFBMkI7SUFDM0JXLHVCQUF1QixFQUF2QkEsdUJBQXVCO0lBQ3ZCSyxtQkFBbUIsRUFBbkJBLG1CQUFtQjtJQUNuQkMsb0JBQW9CLEVBQXBCQSxvQkFBb0I7SUFDcEJILFVBQVUsRUFBVkEsVUFBVTtJQUNWSSxzQkFBc0IsRUFBdEJBLHNCQUFzQjtJQUN0QkUsbUJBQW1CLEVBQW5CQSxtQkFBbUI7SUFDbkJHLHdCQUF3QixFQUF4QkE7RUFDRixDQUFDO0FBQ0gsQ0FBQztBQUFDLGVBQ2F4QixVQUFVO0FBQUEsMkIiLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFTUNsaWVudCB9IGZyb20gJy4uL2luZGV4JztcbmNvbnN0IGVtQ29udGFjdHMgPSAoKSA9PiB7XG4gIGNvbnN0IGZldGNoQ29udGFjdHNMaXN0RnJvbVNlcnZlciA9ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgRU1DbGllbnQuZ2V0QWxsQ29udGFjdHMoKVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSByZXM7XG4gICAgICAgICAgY29uc29sZS5sb2coJz4+Pj4+6I635Y+W5YWo6YOo5aW95Y+L5YiX6KGoJyk7XG4gICAgICAgICAgcmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuICBjb25zdCByZW1vdmVDb250YWN0RnJvbVNlcnZlciA9IChjb250YWN0SWQpID0+IHtcbiAgICBpZiAoY29udGFjdElkKSB7XG4gICAgICBFTUNsaWVudC5kZWxldGVDb250YWN0KGNvbnRhY3RJZCk7XG4gICAgfVxuICB9O1xuICBjb25zdCBhZGRDb250YWN0ID0gKGNvbnRhY3RJZCwgYXBwbHlNc2cpID0+IHtcbiAgICBpZiAoY29udGFjdElkKSB7XG4gICAgICBFTUNsaWVudC5hZGRDb250YWN0KGNvbnRhY3RJZCwgYXBwbHlNc2cpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgYWNjZXB0Q29udGFjdEludml0ZSA9IChjb250YWN0SWQpID0+IHtcbiAgICBpZiAoY29udGFjdElkKSB7XG4gICAgICBFTUNsaWVudC5hY2NlcHRDb250YWN0SW52aXRlKGNvbnRhY3RJZCk7XG4gICAgfVxuICB9O1xuICBjb25zdCBkZWNsaW5lQ29udGFjdEludml0ZSA9IChjb250YWN0SWQpID0+IHtcbiAgICBpZiAoY29udGFjdElkKSB7XG4gICAgICBFTUNsaWVudC5kZWNsaW5lQ29udGFjdEludml0ZShjb250YWN0SWQpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgZ2V0QmxvY2tsaXN0RnJvbVNlcnZlciA9ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgRU1DbGllbnQuZ2V0QmxvY2tsaXN0KClcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzO1xuICAgICAgICAgIHJlc29sdmUoZGF0YSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfTtcbiAgY29uc3QgYWRkVXNlcnNUb0Jsb2NrbGlzdCA9ICh1c2VyTGlzdCkgPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBFTUNsaWVudC5hZGRVc2Vyc1RvQmxvY2tsaXN0KHsgbmFtZTogWy4uLnVzZXJMaXN0XSB9KVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSByZXM7XG4gICAgICAgICAgcmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuICBjb25zdCByZW1vdmVVc2Vyc0Zyb21CbG9ja2xpc3QgPSAodXNlckxpc3QpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgRU1DbGllbnQucmVtb3ZlVXNlcnNGcm9tQmxvY2tsaXN0KHsgbmFtZTogWy4uLnVzZXJMaXN0XSB9KVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSByZXM7XG4gICAgICAgICAgcmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuICByZXR1cm4ge1xuICAgIGZldGNoQ29udGFjdHNMaXN0RnJvbVNlcnZlcixcbiAgICByZW1vdmVDb250YWN0RnJvbVNlcnZlcixcbiAgICBhY2NlcHRDb250YWN0SW52aXRlLFxuICAgIGRlY2xpbmVDb250YWN0SW52aXRlLFxuICAgIGFkZENvbnRhY3QsXG4gICAgZ2V0QmxvY2tsaXN0RnJvbVNlcnZlcixcbiAgICBhZGRVc2Vyc1RvQmxvY2tsaXN0LFxuICAgIHJlbW92ZVVzZXJzRnJvbUJsb2NrbGlzdCxcbiAgfTtcbn07XG5leHBvcnQgZGVmYXVsdCBlbUNvbnRhY3RzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///32\n");

/***/ }),
/* 33 */
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles.js */ 34);
var iterableToArray = __webpack_require__(/*! ./iterableToArray.js */ 35);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 23);
var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread.js */ 36);
function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}
module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 34 */
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 24);
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}
module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 35 */
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 36 */
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 37 */
/*!******************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emApis/emGroups.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));\nvar _EaseIM = __webpack_require__(/*! @/EaseIM */ 16);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar emGroups = function emGroups() {\n  var fetchJoinedGroupListFromServer = function fetchJoinedGroupListFromServer() {\n    var pageNum = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n    return new Promise(function (resolve, reject) {\n      __f__(\"log\", '>>>>开始获取加入的群组列表', \" at EaseIM/emApis/emGroups.js:5\");\n      _EaseIM.EMClient.getJoinedGroups({\n        pageNum: pageNum,\n        pageSize: pageSize,\n        needAffiliations: true,\n        needRole: true\n      }).then(function (res) {\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var createNewGroup = function createNewGroup(params) {\n    return new Promise(function (resolve, reject) {\n      __f__(\"log\", '>>>>开始创建群组', \" at EaseIM/emApis/emGroups.js:22\");\n      _EaseIM.EMClient.createGroup({\n        data: _objectSpread({}, params)\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var getGroupInfosFromServer = function getGroupInfosFromServer(groupId) {\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.getGroupInfo({\n        groupId: groupId\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var getGroupMembersFromServer = function getGroupMembersFromServer(groupId) {\n    //暂且仅取前100个群成员\n    var pageNum = 1,\n      pageSize = 100;\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.listGroupMembers({\n        pageNum: pageNum,\n        pageSize: pageSize,\n        groupId: groupId\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var inviteUsersToGroup = function inviteUsersToGroup(groupId, memberIdList) {\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.inviteUsersToGroup({\n        groupId: groupId,\n        users: memberIdList\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var leaveGroupFromServer = function leaveGroupFromServer(groupId) {\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.leaveGroup({\n        groupId: groupId\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var destroyGroupFromServer = function destroyGroupFromServer(groupId) {\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.destroyGroup({\n        groupId: groupId\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var acceptGroupInvite = function acceptGroupInvite(invitee, groupId) {\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.acceptGroupInvite({\n        groupId: groupId,\n        invitee: invitee\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var rejectGroupInvite = function rejectGroupInvite(invitee, groupId) {\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.rejectGroupInvite({\n        groupId: groupId,\n        invitee: invitee\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var joinPublicGroup = function joinPublicGroup(groupId) {\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.joinGroup({\n        groupId: groupId,\n        message: 'I want to join the group'\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var modifyGroupInfo = function modifyGroupInfo(groupId, params) {\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.modifyGroup(_objectSpread({\n        groupId: groupId\n      }, params)).then(function (res) {\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  //分页获取群组列表\n  var listGroupMembersFromServer = function listGroupMembersFromServer(params) {\n    var _params$pageNum = params.pageNum,\n      pageNum = _params$pageNum === void 0 ? 1 : _params$pageNum,\n      _params$pageSize = params.pageSize,\n      pageSize = _params$pageSize === void 0 ? 100 : _params$pageSize,\n      groupId = params.groupId;\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.listGroupMembers(_objectSpread({}, params)).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  /* 群组属性相关 */\n  //获取单个用户属性\n  var getSingleGroupAttributesFromServer = function getSingleGroupAttributesFromServer(groupId, userId) {\n    var options = {\n      groupId: groupId,\n      userId: userId\n    };\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.getGroupMemberAttributes(_objectSpread({}, options)).then(function (res) {\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  //设置单个群组属性\n  var setSingleGroupAttributesFromServer = function setSingleGroupAttributesFromServer(params) {\n    var groupId = params.groupId,\n      userId = params.userId,\n      memberAttributes = params.memberAttributes;\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.setGroupMemberAttributes({\n        groupId: groupId,\n        userId: userId,\n        memberAttributes: _objectSpread({}, memberAttributes)\n      }).then(function (res) {\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  //根据key获取多个群组成员自定义属性\n  var getMultiGroupAttributesFromServer = function getMultiGroupAttributesFromServer(params) {\n    var groupId = params.groupId,\n      userIds = params.userIds,\n      keys = params.keys;\n    return new Promise(function (resolve, reject) {\n      _EaseIM.EMClient.getGroupMembersAttributes({\n        groupId: groupId,\n        userIds: userIds,\n        keys: keys\n      }).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  return {\n    fetchJoinedGroupListFromServer: fetchJoinedGroupListFromServer,\n    createNewGroup: createNewGroup,\n    getGroupInfosFromServer: getGroupInfosFromServer,\n    getGroupMembersFromServer: getGroupMembersFromServer,\n    inviteUsersToGroup: inviteUsersToGroup,\n    leaveGroupFromServer: leaveGroupFromServer,\n    destroyGroupFromServer: destroyGroupFromServer,\n    acceptGroupInvite: acceptGroupInvite,\n    rejectGroupInvite: rejectGroupInvite,\n    joinPublicGroup: joinPublicGroup,\n    modifyGroupInfo: modifyGroupInfo,\n    listGroupMembersFromServer: listGroupMembersFromServer,\n    getSingleGroupAttributesFromServer: getSingleGroupAttributesFromServer,\n    getMultiGroupAttributesFromServer: getMultiGroupAttributesFromServer,\n    setSingleGroupAttributesFromServer: setSingleGroupAttributesFromServer\n  };\n};\nvar _default = emGroups;\nexports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///37\n");

/***/ }),
/* 38 */
/*!*******************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emApis/emReadAck.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar emSendReadAck = function emSendReadAck() {\n  // 处理未读消息回执\n  var sendReadAckMsg = function sendReadAckMsg(receivemsg) {\n    var chatType = receivemsg.chatType,\n      from = receivemsg.from,\n      id = receivemsg.id;\n    var option = {\n      type: 'read',\n      // 消息是否已读。\n      chatType: chatType,\n      // 会话类型，这里为单聊。\n      to: from,\n      // 消息接收方的用户 ID。\n      id: id // 需要发送已读回执的消息 ID。\n    };\n\n    var msg = _index.EaseSDK.message.create(option);\n    _index.EMClient.send(msg);\n  };\n  return {\n    sendReadAckMsg: sendReadAckMsg\n  };\n};\nvar _default = emSendReadAck;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtQXBpcy9lbVJlYWRBY2suanMiXSwibmFtZXMiOlsiZW1TZW5kUmVhZEFjayIsInNlbmRSZWFkQWNrTXNnIiwicmVjZWl2ZW1zZyIsImNoYXRUeXBlIiwiZnJvbSIsImlkIiwib3B0aW9uIiwidHlwZSIsInRvIiwibXNnIiwiRWFzZVNESyIsIm1lc3NhZ2UiLCJjcmVhdGUiLCJFTUNsaWVudCIsInNlbmQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EsSUFBTUEsYUFBYSxHQUFHLFNBQWhCQSxhQUFhLEdBQVM7RUFDMUI7RUFDQSxJQUFNQyxjQUFjLEdBQUcsU0FBakJBLGNBQWMsQ0FBSUMsVUFBVSxFQUFLO0lBQ3JDLElBQVFDLFFBQVEsR0FBZUQsVUFBVSxDQUFqQ0MsUUFBUTtNQUFFQyxJQUFJLEdBQVNGLFVBQVUsQ0FBdkJFLElBQUk7TUFBRUMsRUFBRSxHQUFLSCxVQUFVLENBQWpCRyxFQUFFO0lBQzFCLElBQUlDLE1BQU0sR0FBRztNQUNYQyxJQUFJLEVBQUUsTUFBTTtNQUFFO01BQ2RKLFFBQVEsRUFBRUEsUUFBUTtNQUFFO01BQ3BCSyxFQUFFLEVBQUVKLElBQUk7TUFBRTtNQUNWQyxFQUFFLEVBQUVBLEVBQUUsQ0FBRTtJQUNWLENBQUM7O0lBQ0QsSUFBSUksR0FBRyxHQUFHQyxjQUFPLENBQUNDLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDTixNQUFNLENBQUM7SUFDeENPLGVBQVEsQ0FBQ0MsSUFBSSxDQUFDTCxHQUFHLENBQUM7RUFDcEIsQ0FBQztFQUNELE9BQU87SUFDTFIsY0FBYyxFQUFkQTtFQUNGLENBQUM7QUFDSCxDQUFDO0FBQUMsZUFFYUQsYUFBYTtBQUFBIiwiZmlsZSI6IjM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWFzZVNESywgRU1DbGllbnQgfSBmcm9tICcuLi9pbmRleCc7XG5jb25zdCBlbVNlbmRSZWFkQWNrID0gKCkgPT4ge1xuICAvLyDlpITnkIbmnKror7vmtojmga/lm57miadcbiAgY29uc3Qgc2VuZFJlYWRBY2tNc2cgPSAocmVjZWl2ZW1zZykgPT4ge1xuICAgIGNvbnN0IHsgY2hhdFR5cGUsIGZyb20sIGlkIH0gPSByZWNlaXZlbXNnO1xuICAgIGxldCBvcHRpb24gPSB7XG4gICAgICB0eXBlOiAncmVhZCcsIC8vIOa2iOaBr+aYr+WQpuW3suivu+OAglxuICAgICAgY2hhdFR5cGU6IGNoYXRUeXBlLCAvLyDkvJror53nsbvlnovvvIzov5nph4zkuLrljZXogYrjgIJcbiAgICAgIHRvOiBmcm9tLCAvLyDmtojmga/mjqXmlLbmlrnnmoTnlKjmiLcgSUTjgIJcbiAgICAgIGlkOiBpZCwgLy8g6ZyA6KaB5Y+R6YCB5bey6K+75Zue5omn55qE5raI5oGvIElE44CCXG4gICAgfTtcbiAgICBsZXQgbXNnID0gRWFzZVNESy5tZXNzYWdlLmNyZWF0ZShvcHRpb24pO1xuICAgIEVNQ2xpZW50LnNlbmQobXNnKTtcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBzZW5kUmVhZEFja01zZyxcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGVtU2VuZFJlYWRBY2s7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///38\n");

/***/ }),
/* 39 */
/*!************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emApis/emConversation.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar _constant = __webpack_require__(/*! ../constant */ 40);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar emConversation = function emConversation() {\n  //从服务端获取置顶会话列表\n  var fetchPinConversationFromServer = function fetchPinConversationFromServer() {\n    var pageSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n    var cursor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.getServerPinnedConversations({\n        pageSize: pageSize,\n        cursor: cursor\n      }).then(function (res) {\n        __f__(\"log\", '>>>>置顶会话列表数据获取成功', \" at EaseIM/emApis/emConversation.js:9\");\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  //置顶会话列表\n  var pinConversationItem = function pinConversationItem(params) {\n    var conversationId = params.conversationId,\n      conversationType = params.conversationType,\n      isPinned = params.isPinned;\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.pinConversation({\n        conversationId: conversationId,\n        conversationType: conversationType,\n        isPinned: isPinned\n      }).then(function (res) {\n        __f__(\"log\", '>>>>置顶会话列表添加成功', \" at EaseIM/emApis/emConversation.js:27\");\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  //从服务端获取会话列表\n  var fetchConversationFromServer = function fetchConversationFromServer() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      pageSize: 20,\n      cursor: ''\n    };\n    return new Promise(function (resolve, reject) {\n      //支持分页这里写死只取二十条\n      _index.EMClient.getServerConversations(_objectSpread({}, options)).then(function (res) {\n        __f__(\"log\", '>>>>会话列表数据获取成功', \" at EaseIM/emApis/emConversation.js:43\");\n        var result = res.data.conversations;\n        resolve(result);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  //从服务端删除会话\n  var removeConversationFromServer = function removeConversationFromServer(channel) {\n    var chatType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constant.CHAT_TYPE.SINGLE_CHAT;\n    var deleteRoam = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!channel) return;\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.deleteConversation({\n        channel: channel,\n        chatType: chatType,\n        deleteRoam: deleteRoam\n      }).then(function (res) {\n        __f__(\"log\", '>>>>会话删除成功', \" at EaseIM/emApis/emConversation.js:62\");\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  //发送会话已读回执\n  var sendChannelAck = function sendChannelAck(targetId) {\n    var chatType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constant.CHAT_TYPE.SINGLE_CHAT;\n    if (!targetId) return;\n    var option = {\n      chatType: chatType,\n      // 会话类型，设置为单聊。\n      type: 'channel',\n      // 消息类型。\n      to: targetId // 接收消息对象的用户 ID。\n    };\n\n    var msg = _index.EaseSDK.message.create(option);\n    _index.EMClient.send(msg);\n  };\n  return {\n    fetchPinConversationFromServer: fetchPinConversationFromServer,\n    pinConversationItem: pinConversationItem,\n    fetchConversationFromServer: fetchConversationFromServer,\n    removeConversationFromServer: removeConversationFromServer,\n    sendChannelAck: sendChannelAck\n  };\n};\nvar _default = emConversation;\nexports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtQXBpcy9lbUNvbnZlcnNhdGlvbi5qcyJdLCJuYW1lcyI6WyJlbUNvbnZlcnNhdGlvbiIsImZldGNoUGluQ29udmVyc2F0aW9uRnJvbVNlcnZlciIsInBhZ2VTaXplIiwiY3Vyc29yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJFTUNsaWVudCIsImdldFNlcnZlclBpbm5lZENvbnZlcnNhdGlvbnMiLCJ0aGVuIiwicmVzIiwiY2F0Y2giLCJlcnJvciIsInBpbkNvbnZlcnNhdGlvbkl0ZW0iLCJwYXJhbXMiLCJjb252ZXJzYXRpb25JZCIsImNvbnZlcnNhdGlvblR5cGUiLCJpc1Bpbm5lZCIsInBpbkNvbnZlcnNhdGlvbiIsImZldGNoQ29udmVyc2F0aW9uRnJvbVNlcnZlciIsIm9wdGlvbnMiLCJnZXRTZXJ2ZXJDb252ZXJzYXRpb25zIiwicmVzdWx0IiwiZGF0YSIsImNvbnZlcnNhdGlvbnMiLCJyZW1vdmVDb252ZXJzYXRpb25Gcm9tU2VydmVyIiwiY2hhbm5lbCIsImNoYXRUeXBlIiwiQ0hBVF9UWVBFIiwiU0lOR0xFX0NIQVQiLCJkZWxldGVSb2FtIiwiZGVsZXRlQ29udmVyc2F0aW9uIiwic2VuZENoYW5uZWxBY2siLCJ0YXJnZXRJZCIsIm9wdGlvbiIsInR5cGUiLCJ0byIsIm1zZyIsIkVhc2VTREsiLCJtZXNzYWdlIiwiY3JlYXRlIiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQXdDO0FBQUE7QUFDeEMsSUFBTUEsY0FBYyxHQUFHLFNBQWpCQSxjQUFjLEdBQVM7RUFDM0I7RUFDQSxJQUFNQyw4QkFBOEIsR0FBRyxTQUFqQ0EsOEJBQThCLEdBQW1DO0lBQUEsSUFBL0JDLFFBQVEsdUVBQUcsRUFBRTtJQUFBLElBQUVDLE1BQU0sdUVBQUcsRUFBRTtJQUNoRSxPQUFPLElBQUlDLE9BQU8sQ0FBQyxVQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBSztNQUN0Q0MsZUFBUSxDQUFDQyw0QkFBNEIsQ0FBQztRQUFFTixRQUFRLEVBQVJBLFFBQVE7UUFBRUMsTUFBTSxFQUFOQTtNQUFPLENBQUMsQ0FBQyxDQUN4RE0sSUFBSSxDQUFDLFVBQUNDLEdBQUcsRUFBSztRQUNiLGFBQVksa0JBQWtCO1FBQzlCTCxPQUFPLENBQUNLLEdBQUcsQ0FBQztNQUNkLENBQUMsQ0FBQyxDQUNEQyxLQUFLLENBQUMsVUFBQ0MsS0FBSyxFQUFLO1FBQ2hCTixNQUFNLENBQUNNLEtBQUssQ0FBQztNQUNmLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRDtFQUNBLElBQU1DLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBbUIsQ0FBSUMsTUFBTSxFQUFLO0lBQ3RDLElBQVFDLGNBQWMsR0FBaUNELE1BQU0sQ0FBckRDLGNBQWM7TUFBRUMsZ0JBQWdCLEdBQWVGLE1BQU0sQ0FBckNFLGdCQUFnQjtNQUFFQyxRQUFRLEdBQUtILE1BQU0sQ0FBbkJHLFFBQVE7SUFDbEQsT0FBTyxJQUFJYixPQUFPLENBQUMsVUFBQ0MsT0FBTyxFQUFFQyxNQUFNLEVBQUs7TUFDdENDLGVBQVEsQ0FBQ1csZUFBZSxDQUFDO1FBQ3ZCSCxjQUFjLEVBQWRBLGNBQWM7UUFDZEMsZ0JBQWdCLEVBQWhCQSxnQkFBZ0I7UUFDaEJDLFFBQVEsRUFBUkE7TUFDRixDQUFDLENBQUMsQ0FDQ1IsSUFBSSxDQUFDLFVBQUNDLEdBQUcsRUFBSztRQUNiLGFBQVksZ0JBQWdCO1FBQzVCTCxPQUFPLENBQUNLLEdBQUcsQ0FBQztNQUNkLENBQUMsQ0FBQyxDQUNEQyxLQUFLLENBQUMsVUFBQ0MsS0FBSyxFQUFLO1FBQ2hCTixNQUFNLENBQUNNLEtBQUssQ0FBQztNQUNmLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRDtFQUNBLElBQU1PLDJCQUEyQixHQUFHLFNBQTlCQSwyQkFBMkIsR0FFNUI7SUFBQSxJQURIQyxPQUFPLHVFQUFHO01BQUVsQixRQUFRLEVBQUUsRUFBRTtNQUFFQyxNQUFNLEVBQUU7SUFBRyxDQUFDO0lBRXRDLE9BQU8sSUFBSUMsT0FBTyxDQUFDLFVBQUNDLE9BQU8sRUFBRUMsTUFBTSxFQUFLO01BQ3RDO01BQ0FDLGVBQVEsQ0FBQ2Msc0JBQXNCLG1CQUFNRCxPQUFPLEVBQUcsQ0FDNUNYLElBQUksQ0FBQyxVQUFDQyxHQUFHLEVBQUs7UUFDYixhQUFZLGdCQUFnQjtRQUM1QixJQUFNWSxNQUFNLEdBQUdaLEdBQUcsQ0FBQ2EsSUFBSSxDQUFDQyxhQUFhO1FBQ3JDbkIsT0FBTyxDQUFDaUIsTUFBTSxDQUFDO01BQ2pCLENBQUMsQ0FBQyxDQUNEWCxLQUFLLENBQUMsVUFBQ0MsS0FBSyxFQUFLO1FBQ2hCTixNQUFNLENBQUNNLEtBQUssQ0FBQztNQUNmLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRDtFQUNBLElBQU1hLDRCQUE0QixHQUFHLFNBQS9CQSw0QkFBNEIsQ0FDaENDLE9BQU8sRUFHSjtJQUFBLElBRkhDLFFBQVEsdUVBQUdDLG1CQUFTLENBQUNDLFdBQVc7SUFBQSxJQUNoQ0MsVUFBVSx1RUFBRyxLQUFLO0lBRWxCLElBQUksQ0FBQ0osT0FBTyxFQUFFO0lBQ2QsT0FBTyxJQUFJdEIsT0FBTyxDQUFDLFVBQUNDLE9BQU8sRUFBRUMsTUFBTSxFQUFLO01BQ3RDQyxlQUFRLENBQUN3QixrQkFBa0IsQ0FBQztRQUFFTCxPQUFPLEVBQVBBLE9BQU87UUFBRUMsUUFBUSxFQUFSQSxRQUFRO1FBQUVHLFVBQVUsRUFBVkE7TUFBVyxDQUFDLENBQUMsQ0FDM0RyQixJQUFJLENBQUMsVUFBQ0MsR0FBRyxFQUFLO1FBQ2IsYUFBWSxZQUFZO1FBQ3hCTCxPQUFPLENBQUNLLEdBQUcsQ0FBQztNQUNkLENBQUMsQ0FBQyxDQUNEQyxLQUFLLENBQUMsVUFBQ0MsS0FBSyxFQUFLO1FBQ2hCTixNQUFNLENBQUNNLEtBQUssQ0FBQztNQUNmLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRDtFQUNBLElBQU1vQixjQUFjLEdBQUcsU0FBakJBLGNBQWMsQ0FBSUMsUUFBUSxFQUF1QztJQUFBLElBQXJDTixRQUFRLHVFQUFHQyxtQkFBUyxDQUFDQyxXQUFXO0lBQ2hFLElBQUksQ0FBQ0ksUUFBUSxFQUFFO0lBQ2YsSUFBSUMsTUFBTSxHQUFHO01BQ1hQLFFBQVEsRUFBRUEsUUFBUTtNQUFFO01BQ3BCUSxJQUFJLEVBQUUsU0FBUztNQUFFO01BQ2pCQyxFQUFFLEVBQUVILFFBQVEsQ0FBRTtJQUNoQixDQUFDOztJQUNELElBQU1JLEdBQUcsR0FBR0MsY0FBTyxDQUFDQyxPQUFPLENBQUNDLE1BQU0sQ0FBQ04sTUFBTSxDQUFDO0lBQzFDM0IsZUFBUSxDQUFDa0MsSUFBSSxDQUFDSixHQUFHLENBQUM7RUFDcEIsQ0FBQztFQUNELE9BQU87SUFDTHBDLDhCQUE4QixFQUE5QkEsOEJBQThCO0lBQzlCWSxtQkFBbUIsRUFBbkJBLG1CQUFtQjtJQUNuQk0sMkJBQTJCLEVBQTNCQSwyQkFBMkI7SUFDM0JNLDRCQUE0QixFQUE1QkEsNEJBQTRCO0lBQzVCTyxjQUFjLEVBQWRBO0VBQ0YsQ0FBQztBQUNILENBQUM7QUFBQyxlQUVhaEMsY0FBYztBQUFBLDJCIiwiZmlsZSI6IjM5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWFzZVNESywgRU1DbGllbnQgfSBmcm9tICcuLi9pbmRleCc7XG5pbXBvcnQgeyBDSEFUX1RZUEUgfSBmcm9tICcuLi9jb25zdGFudCc7XG5jb25zdCBlbUNvbnZlcnNhdGlvbiA9ICgpID0+IHtcbiAgLy/ku47mnI3liqHnq6/ojrflj5bnva7pobbkvJror53liJfooahcbiAgY29uc3QgZmV0Y2hQaW5Db252ZXJzYXRpb25Gcm9tU2VydmVyID0gKHBhZ2VTaXplID0gNTAsIGN1cnNvciA9ICcnKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIEVNQ2xpZW50LmdldFNlcnZlclBpbm5lZENvbnZlcnNhdGlvbnMoeyBwYWdlU2l6ZSwgY3Vyc29yIH0pXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnPj4+Pue9rumhtuS8muivneWIl+ihqOaVsOaNruiOt+WPluaIkOWKnycpO1xuICAgICAgICAgIHJlc29sdmUocmVzKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuICAvL+e9rumhtuS8muivneWIl+ihqFxuICBjb25zdCBwaW5Db252ZXJzYXRpb25JdGVtID0gKHBhcmFtcykgPT4ge1xuICAgIGNvbnN0IHsgY29udmVyc2F0aW9uSWQsIGNvbnZlcnNhdGlvblR5cGUsIGlzUGlubmVkIH0gPSBwYXJhbXM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIEVNQ2xpZW50LnBpbkNvbnZlcnNhdGlvbih7XG4gICAgICAgIGNvbnZlcnNhdGlvbklkLFxuICAgICAgICBjb252ZXJzYXRpb25UeXBlLFxuICAgICAgICBpc1Bpbm5lZCxcbiAgICAgIH0pXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnPj4+Pue9rumhtuS8muivneWIl+ihqOa3u+WKoOaIkOWKnycpO1xuICAgICAgICAgIHJlc29sdmUocmVzKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuICAvL+S7juacjeWKoeerr+iOt+WPluS8muivneWIl+ihqFxuICBjb25zdCBmZXRjaENvbnZlcnNhdGlvbkZyb21TZXJ2ZXIgPSAoXG4gICAgb3B0aW9ucyA9IHsgcGFnZVNpemU6IDIwLCBjdXJzb3I6ICcnIH1cbiAgKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIC8v5pSv5oyB5YiG6aG16L+Z6YeM5YaZ5q275Y+q5Y+W5LqM5Y2B5p2hXG4gICAgICBFTUNsaWVudC5nZXRTZXJ2ZXJDb252ZXJzYXRpb25zKHsgLi4ub3B0aW9ucyB9KVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJz4+Pj7kvJror53liJfooajmlbDmja7ojrflj5bmiJDlip8nKTtcbiAgICAgICAgICBjb25zdCByZXN1bHQgPSByZXMuZGF0YS5jb252ZXJzYXRpb25zO1xuICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuICAvL+S7juacjeWKoeerr+WIoOmZpOS8muivnVxuICBjb25zdCByZW1vdmVDb252ZXJzYXRpb25Gcm9tU2VydmVyID0gKFxuICAgIGNoYW5uZWwsXG4gICAgY2hhdFR5cGUgPSBDSEFUX1RZUEUuU0lOR0xFX0NIQVQsXG4gICAgZGVsZXRlUm9hbSA9IGZhbHNlXG4gICkgPT4ge1xuICAgIGlmICghY2hhbm5lbCkgcmV0dXJuO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBFTUNsaWVudC5kZWxldGVDb252ZXJzYXRpb24oeyBjaGFubmVsLCBjaGF0VHlwZSwgZGVsZXRlUm9hbSB9KVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJz4+Pj7kvJror53liKDpmaTmiJDlip8nKTtcbiAgICAgICAgICByZXNvbHZlKHJlcyk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfTtcbiAgLy/lj5HpgIHkvJror53lt7Lor7vlm57miadcbiAgY29uc3Qgc2VuZENoYW5uZWxBY2sgPSAodGFyZ2V0SWQsIGNoYXRUeXBlID0gQ0hBVF9UWVBFLlNJTkdMRV9DSEFUKSA9PiB7XG4gICAgaWYgKCF0YXJnZXRJZCkgcmV0dXJuO1xuICAgIGxldCBvcHRpb24gPSB7XG4gICAgICBjaGF0VHlwZTogY2hhdFR5cGUsIC8vIOS8muivneexu+Wei++8jOiuvue9ruS4uuWNleiBiuOAglxuICAgICAgdHlwZTogJ2NoYW5uZWwnLCAvLyDmtojmga/nsbvlnovjgIJcbiAgICAgIHRvOiB0YXJnZXRJZCwgLy8g5o6l5pS25raI5oGv5a+56LGh55qE55So5oi3IElE44CCXG4gICAgfTtcbiAgICBjb25zdCBtc2cgPSBFYXNlU0RLLm1lc3NhZ2UuY3JlYXRlKG9wdGlvbik7XG4gICAgRU1DbGllbnQuc2VuZChtc2cpO1xuICB9O1xuICByZXR1cm4ge1xuICAgIGZldGNoUGluQ29udmVyc2F0aW9uRnJvbVNlcnZlcixcbiAgICBwaW5Db252ZXJzYXRpb25JdGVtLFxuICAgIGZldGNoQ29udmVyc2F0aW9uRnJvbVNlcnZlcixcbiAgICByZW1vdmVDb252ZXJzYXRpb25Gcm9tU2VydmVyLFxuICAgIHNlbmRDaGFubmVsQWNrLFxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZW1Db252ZXJzYXRpb247XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n");

/***/ }),
/* 40 */
/*!*****************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/constant/index.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SESSION_MESSAGE_TYPE = exports.MESSAGE_TYPE = exports.INFORM_TYPE = exports.HANDLER_EVENT_NAME = exports.GROUP_ROLE_TYPE_NAME = exports.GROUP_ROLE_TYPE = exports.EMOJIOBJ = exports.EMOJI = exports.CUSTOM_TYPE = exports.CONNECT_CALLBACK_TYPE = exports.CHAT_TYPE = void 0;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));\nvar _GROUP_ROLE_TYPE;\nvar CHAT_TYPE = {\n  SINGLE_CHAT: 'singleChat',\n  GROUP_CHAT: 'groupChat'\n};\nexports.CHAT_TYPE = CHAT_TYPE;\nvar INFORM_TYPE = {\n  CONTACTS: 'contacts',\n  GROUPS: 'groups'\n};\nexports.INFORM_TYPE = INFORM_TYPE;\nvar HANDLER_EVENT_NAME = {\n  CONNECT_EVENT: 'connectEvent',\n  MESSAGES_EVENT: 'messagesEvent',\n  CONTACTS_EVENT: 'contactsEvent',\n  GROUP_EVENT: 'groupEvent',\n  ERROR_EVENT: 'errorEvent'\n};\nexports.HANDLER_EVENT_NAME = HANDLER_EVENT_NAME;\nvar CONNECT_CALLBACK_TYPE = {\n  CONNECT_CALLBACK: 'connected',\n  DISCONNECT_CALLBACK: 'disconnected',\n  RECONNECTING_CALLBACK: 'reconnecting',\n  ERROR_CALLBACK: 'onerror'\n};\nexports.CONNECT_CALLBACK_TYPE = CONNECT_CALLBACK_TYPE;\nvar SESSION_MESSAGE_TYPE = {\n  img: '[图片]',\n  file: '[文件]',\n  audio: '[语音]',\n  loc: '[位置]'\n};\nexports.SESSION_MESSAGE_TYPE = SESSION_MESSAGE_TYPE;\nvar CUSTOM_TYPE = {\n  userCard: '个人名片'\n};\nexports.CUSTOM_TYPE = CUSTOM_TYPE;\nvar MESSAGE_TYPE = {\n  IMAGE: 'img',\n  TEXT: 'txt',\n  LOCATION: 'location',\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  EMOJI: 'emoji',\n  FILE: 'file',\n  CUSTOM: 'custom'\n};\nexports.MESSAGE_TYPE = MESSAGE_TYPE;\nvar EMOJI = {\n  path: '@/static/images/faces',\n  map: {\n    '[):]': 'ee_1.png',\n    '[:D]': 'ee_2.png',\n    '[;)]': 'ee_3.png',\n    '[:-o]': 'ee_4.png',\n    '[:p]': 'ee_5.png',\n    '[(H)]': 'ee_6.png',\n    '[:@]': 'ee_7.png',\n    '[:s]': 'ee_8.png',\n    '[:$]': 'ee_9.png',\n    '[:(]': 'ee_10.png',\n    \"[:'(]\": 'ee_11.png',\n    '[<o)]': 'ee_12.png',\n    '[(a)]': 'ee_13.png',\n    '[8o|]': 'ee_14.png',\n    '[8-|]': 'ee_15.png',\n    '[+o(]': 'ee_16.png',\n    '[|-)]': 'ee_17.png',\n    '[:|]': 'ee_18.png',\n    '[*-)]': 'ee_19.png',\n    '[:-#]': 'ee_20.png',\n    '[^o)]': 'ee_21.png',\n    '[:-*]': 'ee_22.png',\n    '[8-)]': 'ee_23.png',\n    '[del]': 'btn_del.png',\n    '[(|)]': 'ee_24.png',\n    '[(u)]': 'ee_25.png',\n    '[(S)]': 'ee_26.png',\n    '[(*)]': 'ee_27.png',\n    '[(#)]': 'ee_28.png',\n    '[(R)]': 'ee_29.png',\n    '[({)]': 'ee_30.png',\n    '[(})]': 'ee_31.png',\n    '[(k)]': 'ee_32.png',\n    '[(F)]': 'ee_33.png',\n    '[(W)]': 'ee_34.png',\n    '[(D)]': 'ee_35.png'\n  }\n};\nexports.EMOJI = EMOJI;\nvar EMOJIOBJ = {\n  // 相对 emoji.js 路径\n  path: '/static/images/faces',\n  map1: {\n    '[):]': 'ee_1.png',\n    '[:D]': 'ee_2.png',\n    '[;)]': 'ee_3.png',\n    '[:-o]': 'ee_4.png',\n    '[:p]': 'ee_5.png',\n    '[(H)]': 'ee_6.png',\n    '[:@]': 'ee_7.png'\n  },\n  map2: {\n    '[:s]': 'ee_8.png',\n    '[:$]': 'ee_9.png',\n    '[:(]': 'ee_10.png',\n    \"[:'(]\": 'ee_11.png',\n    '[<o)]': 'ee_12.png',\n    '[(a)]': 'ee_13.png',\n    '[8o|]': 'ee_14.png'\n  },\n  map3: {\n    '[8-|]': 'ee_15.png',\n    '[+o(]': 'ee_16.png',\n    '[|-)]': 'ee_17.png',\n    '[:|]': 'ee_18.png',\n    '[*-)]': 'ee_19.png',\n    '[:-#]': 'ee_20.png',\n    '[del]': 'del.png'\n  },\n  map4: {\n    '[^o)]': 'ee_21.png',\n    '[:-*]': 'ee_22.png',\n    '[8-)]': 'ee_23.png',\n    '[(|)]': 'ee_24.png',\n    '[(u)]': 'ee_25.png',\n    '[(S)]': 'ee_26.png',\n    '[(*)]': 'ee_27.png'\n  },\n  map5: {\n    '[(#)]': 'ee_28.png',\n    '[(R)]': 'ee_29.png',\n    '[({)]': 'ee_30.png',\n    '[(})]': 'ee_31.png',\n    '[(k)]': 'ee_32.png',\n    '[(F)]': 'ee_33.png',\n    '[(W)]': 'ee_34.png',\n    '[(D)]': 'ee_35.png'\n  },\n  map6: {\n    '[del]': 'del.png'\n  }\n};\nexports.EMOJIOBJ = EMOJIOBJ;\nvar GROUP_ROLE_TYPE_NAME = {\n  OWNER: 'owner',\n  ADMIN: 'admin',\n  MEMBER: 'member'\n};\nexports.GROUP_ROLE_TYPE_NAME = GROUP_ROLE_TYPE_NAME;\nvar GROUP_ROLE_TYPE = (_GROUP_ROLE_TYPE = {}, (0, _defineProperty2.default)(_GROUP_ROLE_TYPE, GROUP_ROLE_TYPE_NAME.OWNER, 0), (0, _defineProperty2.default)(_GROUP_ROLE_TYPE, GROUP_ROLE_TYPE_NAME.ADMIN, 1), (0, _defineProperty2.default)(_GROUP_ROLE_TYPE, GROUP_ROLE_TYPE_NAME.MEMBER, 2), _GROUP_ROLE_TYPE);\nexports.GROUP_ROLE_TYPE = GROUP_ROLE_TYPE;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///40\n");

/***/ }),
/* 41 */
/*!********************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emApis/emMessages.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar _utils = __webpack_require__(/*! @/EaseIM/utils */ 42);\nvar _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 46));\nvar emMessages = function emMessages() {\n  var reportMessages = function reportMessages(params) {\n    var reportType = params.reportType,\n      reportReason = params.reportReason,\n      messageId = params.messageId;\n    return new Promise(function (resolve, reject) {\n      _index.EMClient.reportMessage({\n        reportType: reportType,\n        // 举报类型\n        reportReason: reportReason,\n        // 举报原因。\n        messageId: messageId // 上报消息id\n      }).then(function (res) {\n        resolve(res);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  };\n  var fetchHistoryMessagesFromServer = function fetchHistoryMessagesFromServer(params) {\n    var targetId = params.targetId,\n      cursor = params.cursor,\n      chatType = params.chatType;\n    return new Promise(function (resolve, reject) {\n      var options = {\n        // 对方的用户 ID 或者群组 ID 或聊天室 ID。\n        targetId: targetId,\n        // 每页期望获取的消息条数。取值范围为 [1,50]，默认值为 20。\n        pageSize: 20,\n        // 查询的起始消息 ID。若该参数设置为 `-1`、`null` 或空字符串，从最新消息开始。\n        cursor: cursor || -1,\n        // 会话类型：（默认） `singleChat`：单聊；`groupChat`：群聊。\n        chatType: chatType,\n        // 消息搜索方向：（默认）`up`：按服务器收到消息的时间的逆序获取；`down`：按服务器收到消息的时间的正序获取。\n        searchDirection: 'up'\n      };\n      _index.EMClient.getHistoryMessages(options).then(function (res) {\n        resolve(res);\n      }).catch(function (e) {\n        // 获取失败。\n        reject(e);\n      });\n    });\n  };\n  var sendDisplayMessages = function sendDisplayMessages(messageBody) {\n    messageBody.from = _index.EMClient.user;\n    var key = (0, _utils.getEMKey)(_index.EMClient.user, messageBody.from, messageBody.to, messageBody.chatType);\n    __f__(\"log\", '>>>>要发送的消息key', key, \" at EaseIM/emApis/emMessages.js:54\");\n    return new Promise(function (resolve, reject) {\n      var message = _index.EaseSDK.message.create(messageBody);\n      __f__(\"log\", '>>>>构建的消息msg', message, \" at EaseIM/emApis/emMessages.js:57\");\n      _index.EMClient.send(message).then(function (res) {\n        resolve(res);\n        message.id = res.serverMsgId;\n        //   store.commit('UPDATE_MESSAGE_COLLECTION', {\n        //     key,\n        //     message,\n        //   });\n        //   store.commit('UPDATE_CONVERSATION_ITEM', {\n        //     conversationId: messageBody.to,\n        //     lastMessage: message,\n        //   });\n      }).catch(function (err) {\n        reject(err);\n        __f__(\"log\", '>>>>>发送失败', err, \" at EaseIM/emApis/emMessages.js:73\");\n      });\n    });\n  };\n  return {\n    reportMessages: reportMessages,\n    fetchHistoryMessagesFromServer: fetchHistoryMessagesFromServer,\n    sendDisplayMessages: sendDisplayMessages\n  };\n};\nvar _default = emMessages;\nexports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtQXBpcy9lbU1lc3NhZ2VzLmpzIl0sIm5hbWVzIjpbImVtTWVzc2FnZXMiLCJyZXBvcnRNZXNzYWdlcyIsInBhcmFtcyIsInJlcG9ydFR5cGUiLCJyZXBvcnRSZWFzb24iLCJtZXNzYWdlSWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIkVNQ2xpZW50IiwicmVwb3J0TWVzc2FnZSIsInRoZW4iLCJyZXMiLCJjYXRjaCIsImVycm9yIiwiZmV0Y2hIaXN0b3J5TWVzc2FnZXNGcm9tU2VydmVyIiwidGFyZ2V0SWQiLCJjdXJzb3IiLCJjaGF0VHlwZSIsIm9wdGlvbnMiLCJwYWdlU2l6ZSIsInNlYXJjaERpcmVjdGlvbiIsImdldEhpc3RvcnlNZXNzYWdlcyIsImUiLCJzZW5kRGlzcGxheU1lc3NhZ2VzIiwibWVzc2FnZUJvZHkiLCJmcm9tIiwidXNlciIsImtleSIsImdldEVNS2V5IiwidG8iLCJtZXNzYWdlIiwiRWFzZVNESyIsImNyZWF0ZSIsInNlbmQiLCJpZCIsInNlcnZlck1zZ0lkIiwiZXJyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsVUFBVSxHQUFHLFNBQWJBLFVBQVUsR0FBUztFQUN2QixJQUFNQyxjQUFjLEdBQUcsU0FBakJBLGNBQWMsQ0FBSUMsTUFBTSxFQUFLO0lBQ2pDLElBQVFDLFVBQVUsR0FBOEJELE1BQU0sQ0FBOUNDLFVBQVU7TUFBRUMsWUFBWSxHQUFnQkYsTUFBTSxDQUFsQ0UsWUFBWTtNQUFFQyxTQUFTLEdBQUtILE1BQU0sQ0FBcEJHLFNBQVM7SUFDM0MsT0FBTyxJQUFJQyxPQUFPLENBQUMsVUFBQ0MsT0FBTyxFQUFFQyxNQUFNLEVBQUs7TUFDdENDLGVBQVEsQ0FBQ0MsYUFBYSxDQUFDO1FBQ3JCUCxVQUFVLEVBQUVBLFVBQVU7UUFBRTtRQUN4QkMsWUFBWSxFQUFFQSxZQUFZO1FBQUU7UUFDNUJDLFNBQVMsRUFBRUEsU0FBUyxDQUFFO01BQ3hCLENBQUMsQ0FBQyxDQUNDTSxJQUFJLENBQUMsVUFBQ0MsR0FBRyxFQUFLO1FBQ2JMLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDO01BQ2QsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQyxVQUFDQyxLQUFLLEVBQUs7UUFDaEJOLE1BQU0sQ0FBQ00sS0FBSyxDQUFDO01BQ2YsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQUNELElBQU1DLDhCQUE4QixHQUFHLFNBQWpDQSw4QkFBOEIsQ0FBSWIsTUFBTSxFQUFLO0lBQ2pELElBQVFjLFFBQVEsR0FBdUJkLE1BQU0sQ0FBckNjLFFBQVE7TUFBRUMsTUFBTSxHQUFlZixNQUFNLENBQTNCZSxNQUFNO01BQUVDLFFBQVEsR0FBS2hCLE1BQU0sQ0FBbkJnQixRQUFRO0lBQ2xDLE9BQU8sSUFBSVosT0FBTyxDQUFDLFVBQUNDLE9BQU8sRUFBRUMsTUFBTSxFQUFLO01BQ3RDLElBQUlXLE9BQU8sR0FBRztRQUNaO1FBQ0FILFFBQVEsRUFBRUEsUUFBUTtRQUNsQjtRQUNBSSxRQUFRLEVBQUUsRUFBRTtRQUNaO1FBQ0FILE1BQU0sRUFBRUEsTUFBTSxJQUFJLENBQUMsQ0FBQztRQUNwQjtRQUNBQyxRQUFRLEVBQUVBLFFBQVE7UUFDbEI7UUFDQUcsZUFBZSxFQUFFO01BQ25CLENBQUM7TUFDRFosZUFBUSxDQUFDYSxrQkFBa0IsQ0FBQ0gsT0FBTyxDQUFDLENBQ2pDUixJQUFJLENBQUMsVUFBQ0MsR0FBRyxFQUFLO1FBQ2JMLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDO01BQ2QsQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQyxVQUFDVSxDQUFDLEVBQUs7UUFDWjtRQUNBZixNQUFNLENBQUNlLENBQUMsQ0FBQztNQUNYLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRCxJQUFNQyxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQW1CLENBQUlDLFdBQVcsRUFBSztJQUMzQ0EsV0FBVyxDQUFDQyxJQUFJLEdBQUdqQixlQUFRLENBQUNrQixJQUFJO0lBQ2hDLElBQU1DLEdBQUcsR0FBRyxJQUFBQyxlQUFRLEVBQ2xCcEIsZUFBUSxDQUFDa0IsSUFBSSxFQUNiRixXQUFXLENBQUNDLElBQUksRUFDaEJELFdBQVcsQ0FBQ0ssRUFBRSxFQUNkTCxXQUFXLENBQUNQLFFBQVEsQ0FDckI7SUFDRCxhQUFZLGVBQWUsRUFBRVUsR0FBRztJQUNoQyxPQUFPLElBQUl0QixPQUFPLENBQUMsVUFBQ0MsT0FBTyxFQUFFQyxNQUFNLEVBQUs7TUFDdEMsSUFBTXVCLE9BQU8sR0FBR0MsY0FBTyxDQUFDRCxPQUFPLENBQUNFLE1BQU0sQ0FBQ1IsV0FBVyxDQUFDO01BQ25ELGFBQVksY0FBYyxFQUFFTSxPQUFPO01BQ25DdEIsZUFBUSxDQUFDeUIsSUFBSSxDQUFDSCxPQUFPLENBQUMsQ0FDbkJwQixJQUFJLENBQUMsVUFBQ0MsR0FBRyxFQUFLO1FBQ2JMLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDO1FBQ1ptQixPQUFPLENBQUNJLEVBQUUsR0FBR3ZCLEdBQUcsQ0FBQ3dCLFdBQVc7UUFDNUI7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtNQUNGLENBQUMsQ0FBQyxDQUNEdkIsS0FBSyxDQUFDLFVBQUN3QixHQUFHLEVBQUs7UUFDZDdCLE1BQU0sQ0FBQzZCLEdBQUcsQ0FBQztRQUNYLGFBQVksV0FBVyxFQUFFQSxHQUFHO01BQzlCLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRCxPQUFPO0lBQ0xwQyxjQUFjLEVBQWRBLGNBQWM7SUFDZGMsOEJBQThCLEVBQTlCQSw4QkFBOEI7SUFDOUJTLG1CQUFtQixFQUFuQkE7RUFDRixDQUFDO0FBQ0gsQ0FBQztBQUFDLGVBQ2F4QixVQUFVO0FBQUEsMkIiLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFYXNlU0RLLCBFTUNsaWVudCB9IGZyb20gJy4uL2luZGV4JztcbmltcG9ydCB7IGdldEVNS2V5IH0gZnJvbSAnQC9FYXNlSU0vdXRpbHMnO1xuaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnO1xuY29uc3QgZW1NZXNzYWdlcyA9ICgpID0+IHtcbiAgY29uc3QgcmVwb3J0TWVzc2FnZXMgPSAocGFyYW1zKSA9PiB7XG4gICAgY29uc3QgeyByZXBvcnRUeXBlLCByZXBvcnRSZWFzb24sIG1lc3NhZ2VJZCB9ID0gcGFyYW1zO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBFTUNsaWVudC5yZXBvcnRNZXNzYWdlKHtcbiAgICAgICAgcmVwb3J0VHlwZTogcmVwb3J0VHlwZSwgLy8g5Li+5oql57G75Z6LXG4gICAgICAgIHJlcG9ydFJlYXNvbjogcmVwb3J0UmVhc29uLCAvLyDkuL7miqXljp/lm6DjgIJcbiAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQsIC8vIOS4iuaKpea2iOaBr2lkXG4gICAgICB9KVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgcmVzb2x2ZShyZXMpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IGZldGNoSGlzdG9yeU1lc3NhZ2VzRnJvbVNlcnZlciA9IChwYXJhbXMpID0+IHtcbiAgICBjb25zdCB7IHRhcmdldElkLCBjdXJzb3IsIGNoYXRUeXBlIH0gPSBwYXJhbXM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCBvcHRpb25zID0ge1xuICAgICAgICAvLyDlr7nmlrnnmoTnlKjmiLcgSUQg5oiW6ICF576k57uEIElEIOaIluiBiuWkqeWupCBJROOAglxuICAgICAgICB0YXJnZXRJZDogdGFyZ2V0SWQsXG4gICAgICAgIC8vIOavj+mhteacn+acm+iOt+WPlueahOa2iOaBr+adoeaVsOOAguWPluWAvOiMg+WbtOS4uiBbMSw1MF3vvIzpu5jorqTlgLzkuLogMjDjgIJcbiAgICAgICAgcGFnZVNpemU6IDIwLFxuICAgICAgICAvLyDmn6Xor6LnmoTotbflp4vmtojmga8gSUTjgILoi6Xor6Xlj4LmlbDorr7nva7kuLogYC0xYOOAgWBudWxsYCDmiJbnqbrlrZfnrKbkuLLvvIzku47mnIDmlrDmtojmga/lvIDlp4vjgIJcbiAgICAgICAgY3Vyc29yOiBjdXJzb3IgfHwgLTEsXG4gICAgICAgIC8vIOS8muivneexu+Wei++8mu+8iOm7mOiupO+8iSBgc2luZ2xlQ2hhdGDvvJrljZXogYrvvJtgZ3JvdXBDaGF0YO+8mue+pOiBiuOAglxuICAgICAgICBjaGF0VHlwZTogY2hhdFR5cGUsXG4gICAgICAgIC8vIOa2iOaBr+aQnOe0ouaWueWQke+8mu+8iOm7mOiupO+8iWB1cGDvvJrmjInmnI3liqHlmajmlLbliLDmtojmga/nmoTml7bpl7TnmoTpgIbluo/ojrflj5bvvJtgZG93bmDvvJrmjInmnI3liqHlmajmlLbliLDmtojmga/nmoTml7bpl7TnmoTmraPluo/ojrflj5bjgIJcbiAgICAgICAgc2VhcmNoRGlyZWN0aW9uOiAndXAnLFxuICAgICAgfTtcbiAgICAgIEVNQ2xpZW50LmdldEhpc3RvcnlNZXNzYWdlcyhvcHRpb25zKVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgcmVzb2x2ZShyZXMpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAvLyDojrflj5blpLHotKXjgIJcbiAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuICBjb25zdCBzZW5kRGlzcGxheU1lc3NhZ2VzID0gKG1lc3NhZ2VCb2R5KSA9PiB7XG4gICAgbWVzc2FnZUJvZHkuZnJvbSA9IEVNQ2xpZW50LnVzZXI7XG4gICAgY29uc3Qga2V5ID0gZ2V0RU1LZXkoXG4gICAgICBFTUNsaWVudC51c2VyLFxuICAgICAgbWVzc2FnZUJvZHkuZnJvbSxcbiAgICAgIG1lc3NhZ2VCb2R5LnRvLFxuICAgICAgbWVzc2FnZUJvZHkuY2hhdFR5cGVcbiAgICApO1xuICAgIGNvbnNvbGUubG9nKCc+Pj4+6KaB5Y+R6YCB55qE5raI5oGva2V5Jywga2V5KTtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29uc3QgbWVzc2FnZSA9IEVhc2VTREsubWVzc2FnZS5jcmVhdGUobWVzc2FnZUJvZHkpO1xuICAgICAgY29uc29sZS5sb2coJz4+Pj7mnoTlu7rnmoTmtojmga9tc2cnLCBtZXNzYWdlKTtcbiAgICAgIEVNQ2xpZW50LnNlbmQobWVzc2FnZSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgIHJlc29sdmUocmVzKTtcbiAgICAgICAgICBtZXNzYWdlLmlkID0gcmVzLnNlcnZlck1zZ0lkO1xuICAgICAgICAgIC8vICAgc3RvcmUuY29tbWl0KCdVUERBVEVfTUVTU0FHRV9DT0xMRUNUSU9OJywge1xuICAgICAgICAgIC8vICAgICBrZXksXG4gICAgICAgICAgLy8gICAgIG1lc3NhZ2UsXG4gICAgICAgICAgLy8gICB9KTtcbiAgICAgICAgICAvLyAgIHN0b3JlLmNvbW1pdCgnVVBEQVRFX0NPTlZFUlNBVElPTl9JVEVNJywge1xuICAgICAgICAgIC8vICAgICBjb252ZXJzYXRpb25JZDogbWVzc2FnZUJvZHkudG8sXG4gICAgICAgICAgLy8gICAgIGxhc3RNZXNzYWdlOiBtZXNzYWdlLFxuICAgICAgICAgIC8vICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgY29uc29sZS5sb2coJz4+Pj4+5Y+R6YCB5aSx6LSlJywgZXJyKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIHJldHVybiB7XG4gICAgcmVwb3J0TWVzc2FnZXMsXG4gICAgZmV0Y2hIaXN0b3J5TWVzc2FnZXNGcm9tU2VydmVyLFxuICAgIHNlbmREaXNwbGF5TWVzc2FnZXMsXG4gIH07XG59O1xuZXhwb3J0IGRlZmF1bHQgZW1NZXNzYWdlcztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///41\n");

/***/ }),
/* 42 */
/*!**************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/utils/index.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"convertGroupDetailsToGroupList\", {\n  enumerable: true,\n  get: function get() {\n    return _convertGroupDetailsToGroupList.default;\n  }\n});\nObject.defineProperty(exports, \"getEMKey\", {\n  enumerable: true,\n  get: function get() {\n    return _getEMKey.default;\n  }\n});\nObject.defineProperty(exports, \"paseEmoji\", {\n  enumerable: true,\n  get: function get() {\n    return _paseEmoji.default;\n  }\n});\nvar _paseEmoji = _interopRequireDefault(__webpack_require__(/*! ./paseEmoji */ 43));\nvar _getEMKey = _interopRequireDefault(__webpack_require__(/*! ./getEMKey */ 44));\nvar _convertGroupDetailsToGroupList = _interopRequireDefault(__webpack_require__(/*! ./convertGroupDetailsToGroupList */ 45));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL3V0aWxzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQSIsImZpbGUiOiI0Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXNlRW1vamkgZnJvbSAnLi9wYXNlRW1vamknO1xuaW1wb3J0IGdldEVNS2V5IGZyb20gJy4vZ2V0RU1LZXknO1xuaW1wb3J0IGNvbnZlcnRHcm91cERldGFpbHNUb0dyb3VwTGlzdCBmcm9tICcuL2NvbnZlcnRHcm91cERldGFpbHNUb0dyb3VwTGlzdCc7XG5leHBvcnQgeyBwYXNlRW1vamksIGdldEVNS2V5LCBjb252ZXJ0R3JvdXBEZXRhaWxzVG9Hcm91cExpc3QgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///42\n");

/***/ }),
/* 43 */
/*!******************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/utils/paseEmoji.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar Emoji = {\n  path: '../static/images/faces/',\n  map: {\n    '[):]': 'ee_1.png',\n    '[:D]': 'ee_2.png',\n    '[;)]': 'ee_3.png',\n    '[:-o]': 'ee_4.png',\n    '[:p]': 'ee_5.png',\n    '[(H)]': 'ee_6.png',\n    '[:@]': 'ee_7.png',\n    '[:s]': 'ee_8.png',\n    '[:$]': 'ee_9.png',\n    '[:(]': 'ee_10.png',\n    \"[:'(]\": 'ee_11.png',\n    '[<o)]': 'ee_12.png',\n    '[(a)]': 'ee_13.png',\n    '[8o|]': 'ee_14.png',\n    '[8-|]': 'ee_15.png',\n    '[+o(]': 'ee_16.png',\n    '[|-)]': 'ee_17.png',\n    '[:|]': 'ee_18.png',\n    '[*-)]': 'ee_19.png',\n    '[:-#]': 'ee_20.png',\n    '[^o)]': 'ee_21.png',\n    '[:-*]': 'ee_22.png',\n    '[8-)]': 'ee_23.png',\n    '[del]': 'btn_del.png',\n    '[(|)]': 'ee_24.png',\n    '[(u)]': 'ee_25.png',\n    '[(S)]': 'ee_26.png',\n    '[(*)]': 'ee_27.png',\n    '[(#)]': 'ee_28.png',\n    '[(R)]': 'ee_29.png',\n    '[({)]': 'ee_30.png',\n    '[(})]': 'ee_31.png',\n    '[(k)]': 'ee_32.png',\n    '[(F)]': 'ee_33.png',\n    '[(W)]': 'ee_34.png',\n    '[(D)]': 'ee_35.png'\n  }\n};\nvar parseEmoji = function parseEmoji(msg) {\n  if (typeof Emoji === 'undefined' || typeof Emoji.map === 'undefined') {\n    return msg;\n  }\n  var emoji = Emoji,\n    reg = null;\n  var msgList = [];\n  var objList = [];\n  for (var face in emoji.map) {\n    if (emoji.map.hasOwnProperty(face)) {\n      while (msg.indexOf(face) > -1) {\n        msg = msg.replace(face, '^' + emoji.map[face] + '^');\n      }\n    }\n  }\n  var ary = msg.split('^');\n  var reg = /^e.*g$/;\n  for (var i = 0; i < ary.length; i++) {\n    if (ary[i] != '') {\n      msgList.push(ary[i]);\n    }\n  }\n  for (var i = 0; i < msgList.length; i++) {\n    if (reg.test(msgList[i])) {\n      var obj = {};\n      obj.data = msgList[i];\n      obj.type = 'emoji';\n      objList.push(obj);\n    } else {\n      var obj = {};\n      obj.data = msgList[i];\n      obj.type = 'txt';\n      objList.push(obj);\n    }\n  }\n  return objList;\n};\nvar _default = parseEmoji;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL3V0aWxzL3Bhc2VFbW9qaS5qcyJdLCJuYW1lcyI6WyJFbW9qaSIsInBhdGgiLCJtYXAiLCJwYXJzZUVtb2ppIiwibXNnIiwiZW1vamkiLCJyZWciLCJtc2dMaXN0Iiwib2JqTGlzdCIsImZhY2UiLCJoYXNPd25Qcm9wZXJ0eSIsImluZGV4T2YiLCJyZXBsYWNlIiwiYXJ5Iiwic3BsaXQiLCJpIiwibGVuZ3RoIiwicHVzaCIsInRlc3QiLCJvYmoiLCJkYXRhIiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsS0FBSyxHQUFHO0VBQ1pDLElBQUksRUFBRSx5QkFBeUI7RUFDL0JDLEdBQUcsRUFBRTtJQUNILE1BQU0sRUFBRSxVQUFVO0lBQ2xCLE1BQU0sRUFBRSxVQUFVO0lBQ2xCLE1BQU0sRUFBRSxVQUFVO0lBQ2xCLE9BQU8sRUFBRSxVQUFVO0lBQ25CLE1BQU0sRUFBRSxVQUFVO0lBQ2xCLE9BQU8sRUFBRSxVQUFVO0lBQ25CLE1BQU0sRUFBRSxVQUFVO0lBQ2xCLE1BQU0sRUFBRSxVQUFVO0lBQ2xCLE1BQU0sRUFBRSxVQUFVO0lBQ2xCLE1BQU0sRUFBRSxXQUFXO0lBQ25CLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE1BQU0sRUFBRSxXQUFXO0lBQ25CLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxhQUFhO0lBQ3RCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRSxXQUFXO0lBQ3BCLE9BQU8sRUFBRTtFQUNYO0FBQ0YsQ0FBQztBQUVELElBQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFVLENBQUlDLEdBQUcsRUFBSztFQUMxQixJQUFJLE9BQU9KLEtBQUssS0FBSyxXQUFXLElBQUksT0FBT0EsS0FBSyxDQUFDRSxHQUFHLEtBQUssV0FBVyxFQUFFO0lBQ3BFLE9BQU9FLEdBQUc7RUFDWjtFQUVBLElBQUlDLEtBQUssR0FBR0wsS0FBSztJQUNmTSxHQUFHLEdBQUcsSUFBSTtFQUNaLElBQUlDLE9BQU8sR0FBRyxFQUFFO0VBQ2hCLElBQUlDLE9BQU8sR0FBRyxFQUFFO0VBRWhCLEtBQUssSUFBSUMsSUFBSSxJQUFJSixLQUFLLENBQUNILEdBQUcsRUFBRTtJQUMxQixJQUFJRyxLQUFLLENBQUNILEdBQUcsQ0FBQ1EsY0FBYyxDQUFDRCxJQUFJLENBQUMsRUFBRTtNQUNsQyxPQUFPTCxHQUFHLENBQUNPLE9BQU8sQ0FBQ0YsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7UUFDN0JMLEdBQUcsR0FBR0EsR0FBRyxDQUFDUSxPQUFPLENBQUNILElBQUksRUFBRSxHQUFHLEdBQUdKLEtBQUssQ0FBQ0gsR0FBRyxDQUFDTyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUM7TUFDdEQ7SUFDRjtFQUNGO0VBRUEsSUFBSUksR0FBRyxHQUFHVCxHQUFHLENBQUNVLEtBQUssQ0FBQyxHQUFHLENBQUM7RUFDeEIsSUFBSVIsR0FBRyxHQUFHLFFBQVE7RUFFbEIsS0FBSyxJQUFJUyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLEdBQUcsQ0FBQ0csTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtJQUNuQyxJQUFJRixHQUFHLENBQUNFLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtNQUNoQlIsT0FBTyxDQUFDVSxJQUFJLENBQUNKLEdBQUcsQ0FBQ0UsQ0FBQyxDQUFDLENBQUM7SUFDdEI7RUFDRjtFQUVBLEtBQUssSUFBSUEsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHUixPQUFPLENBQUNTLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUU7SUFDdkMsSUFBSVQsR0FBRyxDQUFDWSxJQUFJLENBQUNYLE9BQU8sQ0FBQ1EsQ0FBQyxDQUFDLENBQUMsRUFBRTtNQUN4QixJQUFJSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO01BQ1pBLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHYixPQUFPLENBQUNRLENBQUMsQ0FBQztNQUNyQkksR0FBRyxDQUFDRSxJQUFJLEdBQUcsT0FBTztNQUNsQmIsT0FBTyxDQUFDUyxJQUFJLENBQUNFLEdBQUcsQ0FBQztJQUNuQixDQUFDLE1BQU07TUFDTCxJQUFJQSxHQUFHLEdBQUcsQ0FBQyxDQUFDO01BQ1pBLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHYixPQUFPLENBQUNRLENBQUMsQ0FBQztNQUNyQkksR0FBRyxDQUFDRSxJQUFJLEdBQUcsS0FBSztNQUNoQmIsT0FBTyxDQUFDUyxJQUFJLENBQUNFLEdBQUcsQ0FBQztJQUNuQjtFQUNGO0VBRUEsT0FBT1gsT0FBTztBQUNoQixDQUFDO0FBQUMsZUFDYUwsVUFBVTtBQUFBIiwiZmlsZSI6IjQzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRW1vamkgPSB7XG4gIHBhdGg6ICcuLi9zdGF0aWMvaW1hZ2VzL2ZhY2VzLycsXG4gIG1hcDoge1xuICAgICdbKTpdJzogJ2VlXzEucG5nJyxcbiAgICAnWzpEXSc6ICdlZV8yLnBuZycsXG4gICAgJ1s7KV0nOiAnZWVfMy5wbmcnLFxuICAgICdbOi1vXSc6ICdlZV80LnBuZycsXG4gICAgJ1s6cF0nOiAnZWVfNS5wbmcnLFxuICAgICdbKEgpXSc6ICdlZV82LnBuZycsXG4gICAgJ1s6QF0nOiAnZWVfNy5wbmcnLFxuICAgICdbOnNdJzogJ2VlXzgucG5nJyxcbiAgICAnWzokXSc6ICdlZV85LnBuZycsXG4gICAgJ1s6KF0nOiAnZWVfMTAucG5nJyxcbiAgICBcIls6JyhdXCI6ICdlZV8xMS5wbmcnLFxuICAgICdbPG8pXSc6ICdlZV8xMi5wbmcnLFxuICAgICdbKGEpXSc6ICdlZV8xMy5wbmcnLFxuICAgICdbOG98XSc6ICdlZV8xNC5wbmcnLFxuICAgICdbOC18XSc6ICdlZV8xNS5wbmcnLFxuICAgICdbK28oXSc6ICdlZV8xNi5wbmcnLFxuICAgICdbfC0pXSc6ICdlZV8xNy5wbmcnLFxuICAgICdbOnxdJzogJ2VlXzE4LnBuZycsXG4gICAgJ1sqLSldJzogJ2VlXzE5LnBuZycsXG4gICAgJ1s6LSNdJzogJ2VlXzIwLnBuZycsXG4gICAgJ1tebyldJzogJ2VlXzIxLnBuZycsXG4gICAgJ1s6LSpdJzogJ2VlXzIyLnBuZycsXG4gICAgJ1s4LSldJzogJ2VlXzIzLnBuZycsXG4gICAgJ1tkZWxdJzogJ2J0bl9kZWwucG5nJyxcbiAgICAnWyh8KV0nOiAnZWVfMjQucG5nJyxcbiAgICAnWyh1KV0nOiAnZWVfMjUucG5nJyxcbiAgICAnWyhTKV0nOiAnZWVfMjYucG5nJyxcbiAgICAnWygqKV0nOiAnZWVfMjcucG5nJyxcbiAgICAnWygjKV0nOiAnZWVfMjgucG5nJyxcbiAgICAnWyhSKV0nOiAnZWVfMjkucG5nJyxcbiAgICAnWyh7KV0nOiAnZWVfMzAucG5nJyxcbiAgICAnWyh9KV0nOiAnZWVfMzEucG5nJyxcbiAgICAnWyhrKV0nOiAnZWVfMzIucG5nJyxcbiAgICAnWyhGKV0nOiAnZWVfMzMucG5nJyxcbiAgICAnWyhXKV0nOiAnZWVfMzQucG5nJyxcbiAgICAnWyhEKV0nOiAnZWVfMzUucG5nJyxcbiAgfSxcbn07XG5cbmNvbnN0IHBhcnNlRW1vamkgPSAobXNnKSA9PiB7XG4gIGlmICh0eXBlb2YgRW1vamkgPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBFbW9qaS5tYXAgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG1zZztcbiAgfVxuXG4gIHZhciBlbW9qaSA9IEVtb2ppLFxuICAgIHJlZyA9IG51bGw7XG4gIHZhciBtc2dMaXN0ID0gW107XG4gIHZhciBvYmpMaXN0ID0gW107XG5cbiAgZm9yICh2YXIgZmFjZSBpbiBlbW9qaS5tYXApIHtcbiAgICBpZiAoZW1vamkubWFwLmhhc093blByb3BlcnR5KGZhY2UpKSB7XG4gICAgICB3aGlsZSAobXNnLmluZGV4T2YoZmFjZSkgPiAtMSkge1xuICAgICAgICBtc2cgPSBtc2cucmVwbGFjZShmYWNlLCAnXicgKyBlbW9qaS5tYXBbZmFjZV0gKyAnXicpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHZhciBhcnkgPSBtc2cuc3BsaXQoJ14nKTtcbiAgdmFyIHJlZyA9IC9eZS4qZyQvO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJ5Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGFyeVtpXSAhPSAnJykge1xuICAgICAgbXNnTGlzdC5wdXNoKGFyeVtpXSk7XG4gICAgfVxuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBtc2dMaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHJlZy50ZXN0KG1zZ0xpc3RbaV0pKSB7XG4gICAgICB2YXIgb2JqID0ge307XG4gICAgICBvYmouZGF0YSA9IG1zZ0xpc3RbaV07XG4gICAgICBvYmoudHlwZSA9ICdlbW9qaSc7XG4gICAgICBvYmpMaXN0LnB1c2gob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG9iaiA9IHt9O1xuICAgICAgb2JqLmRhdGEgPSBtc2dMaXN0W2ldO1xuICAgICAgb2JqLnR5cGUgPSAndHh0JztcbiAgICAgIG9iakxpc3QucHVzaChvYmopO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmpMaXN0O1xufTtcbmV4cG9ydCBkZWZhdWx0IHBhcnNlRW1vamk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///43\n");

/***/ }),
/* 44 */
/*!*****************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/utils/getEMKey.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/* 用以获取消息存储格式时的key */\nvar getEMKey = function getEMKey(loginId, fromId, toId, chatType) {\n  var key = '';\n  if (chatType === 'singleChat') {\n    if (loginId === fromId) {\n      key = toId;\n    } else {\n      key = fromId;\n    }\n  } else if (chatType === 'groupChat') {\n    key = toId;\n  }\n  return key;\n};\nvar _default = getEMKey;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL3V0aWxzL2dldEVNS2V5LmpzIl0sIm5hbWVzIjpbImdldEVNS2V5IiwibG9naW5JZCIsImZyb21JZCIsInRvSWQiLCJjaGF0VHlwZSIsImtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQSxJQUFNQSxRQUFRLEdBQUcsU0FBWEEsUUFBUSxDQUFJQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUs7RUFDcEQsSUFBSUMsR0FBRyxHQUFHLEVBQUU7RUFDWixJQUFJRCxRQUFRLEtBQUssWUFBWSxFQUFFO0lBQzdCLElBQUlILE9BQU8sS0FBS0MsTUFBTSxFQUFFO01BQ3RCRyxHQUFHLEdBQUdGLElBQUk7SUFDWixDQUFDLE1BQU07TUFDTEUsR0FBRyxHQUFHSCxNQUFNO0lBQ2Q7RUFDRixDQUFDLE1BQU0sSUFBSUUsUUFBUSxLQUFLLFdBQVcsRUFBRTtJQUNuQ0MsR0FBRyxHQUFHRixJQUFJO0VBQ1o7RUFDQSxPQUFPRSxHQUFHO0FBQ1osQ0FBQztBQUFDLGVBQ2FMLFFBQVE7QUFBQSIsImZpbGUiOiI0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIOeUqOS7peiOt+WPlua2iOaBr+WtmOWCqOagvOW8j+aXtueahGtleSAqL1xuY29uc3QgZ2V0RU1LZXkgPSAobG9naW5JZCwgZnJvbUlkLCB0b0lkLCBjaGF0VHlwZSkgPT4ge1xuICBsZXQga2V5ID0gJyc7XG4gIGlmIChjaGF0VHlwZSA9PT0gJ3NpbmdsZUNoYXQnKSB7XG4gICAgaWYgKGxvZ2luSWQgPT09IGZyb21JZCkge1xuICAgICAga2V5ID0gdG9JZDtcbiAgICB9IGVsc2Uge1xuICAgICAga2V5ID0gZnJvbUlkO1xuICAgIH1cbiAgfSBlbHNlIGlmIChjaGF0VHlwZSA9PT0gJ2dyb3VwQ2hhdCcpIHtcbiAgICBrZXkgPSB0b0lkO1xuICB9XG4gIHJldHVybiBrZXk7XG59O1xuZXhwb3J0IGRlZmF1bHQgZ2V0RU1LZXk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///44\n");

/***/ }),
/* 45 */
/*!***************************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/utils/convertGroupDetailsToGroupList.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convertGroupDetailsToGroupList;\nfunction convertGroupDetailsToGroupList(detailsData) {\n  var groupListData = {};\n  // 转换重合字段名\n  groupListData.groupName = detailsData.name;\n  groupListData.groupId = detailsData.id;\n  groupListData.maxUsers = detailsData.maxusers;\n  groupListData.allowInvites = detailsData.allowinvites;\n  groupListData.affiliationsCount = detailsData.affiliations_count;\n  //将返回群列表里面的不存在的属性从群详情新增。\n  groupListData.shieldgroup = detailsData.shieldgroup;\n  groupListData.affiliations = detailsData.affiliations;\n  groupListData.mute = detailsData.mute;\n  groupListData.custom = detailsData.custom;\n  groupListData.created = detailsData.created;\n  groupListData.owner = detailsData.owner;\n  groupListData.membersonly = detailsData.membersonly;\n  //两个数据结构重合的属性值\n  groupListData.description = detailsData.description;\n  groupListData.disabled = detailsData.disabled;\n  groupListData.public = detailsData.public;\n  return groupListData;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL3V0aWxzL2NvbnZlcnRHcm91cERldGFpbHNUb0dyb3VwTGlzdC5qcyJdLCJuYW1lcyI6WyJjb252ZXJ0R3JvdXBEZXRhaWxzVG9Hcm91cExpc3QiLCJkZXRhaWxzRGF0YSIsImdyb3VwTGlzdERhdGEiLCJncm91cE5hbWUiLCJuYW1lIiwiZ3JvdXBJZCIsImlkIiwibWF4VXNlcnMiLCJtYXh1c2VycyIsImFsbG93SW52aXRlcyIsImFsbG93aW52aXRlcyIsImFmZmlsaWF0aW9uc0NvdW50IiwiYWZmaWxpYXRpb25zX2NvdW50Iiwic2hpZWxkZ3JvdXAiLCJhZmZpbGlhdGlvbnMiLCJtdXRlIiwiY3VzdG9tIiwiY3JlYXRlZCIsIm93bmVyIiwibWVtYmVyc29ubHkiLCJkZXNjcmlwdGlvbiIsImRpc2FibGVkIiwicHVibGljIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZSxTQUFTQSw4QkFBOEIsQ0FBQ0MsV0FBVyxFQUFFO0VBQ2xFLElBQU1DLGFBQWEsR0FBRyxDQUFDLENBQUM7RUFDeEI7RUFDQUEsYUFBYSxDQUFDQyxTQUFTLEdBQUdGLFdBQVcsQ0FBQ0csSUFBSTtFQUMxQ0YsYUFBYSxDQUFDRyxPQUFPLEdBQUdKLFdBQVcsQ0FBQ0ssRUFBRTtFQUN0Q0osYUFBYSxDQUFDSyxRQUFRLEdBQUdOLFdBQVcsQ0FBQ08sUUFBUTtFQUM3Q04sYUFBYSxDQUFDTyxZQUFZLEdBQUdSLFdBQVcsQ0FBQ1MsWUFBWTtFQUNyRFIsYUFBYSxDQUFDUyxpQkFBaUIsR0FBR1YsV0FBVyxDQUFDVyxrQkFBa0I7RUFDaEU7RUFDQVYsYUFBYSxDQUFDVyxXQUFXLEdBQUdaLFdBQVcsQ0FBQ1ksV0FBVztFQUNuRFgsYUFBYSxDQUFDWSxZQUFZLEdBQUdiLFdBQVcsQ0FBQ2EsWUFBWTtFQUNyRFosYUFBYSxDQUFDYSxJQUFJLEdBQUdkLFdBQVcsQ0FBQ2MsSUFBSTtFQUNyQ2IsYUFBYSxDQUFDYyxNQUFNLEdBQUdmLFdBQVcsQ0FBQ2UsTUFBTTtFQUN6Q2QsYUFBYSxDQUFDZSxPQUFPLEdBQUdoQixXQUFXLENBQUNnQixPQUFPO0VBQzNDZixhQUFhLENBQUNnQixLQUFLLEdBQUdqQixXQUFXLENBQUNpQixLQUFLO0VBQ3ZDaEIsYUFBYSxDQUFDaUIsV0FBVyxHQUFHbEIsV0FBVyxDQUFDa0IsV0FBVztFQUNuRDtFQUNBakIsYUFBYSxDQUFDa0IsV0FBVyxHQUFHbkIsV0FBVyxDQUFDbUIsV0FBVztFQUNuRGxCLGFBQWEsQ0FBQ21CLFFBQVEsR0FBR3BCLFdBQVcsQ0FBQ29CLFFBQVE7RUFDN0NuQixhQUFhLENBQUNvQixNQUFNLEdBQUdyQixXQUFXLENBQUNxQixNQUFNO0VBRXpDLE9BQU9wQixhQUFhO0FBQ3RCIiwiZmlsZSI6IjQ1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29udmVydEdyb3VwRGV0YWlsc1RvR3JvdXBMaXN0KGRldGFpbHNEYXRhKSB7XG4gIGNvbnN0IGdyb3VwTGlzdERhdGEgPSB7fTtcbiAgLy8g6L2s5o2i6YeN5ZCI5a2X5q615ZCNXG4gIGdyb3VwTGlzdERhdGEuZ3JvdXBOYW1lID0gZGV0YWlsc0RhdGEubmFtZTtcbiAgZ3JvdXBMaXN0RGF0YS5ncm91cElkID0gZGV0YWlsc0RhdGEuaWQ7XG4gIGdyb3VwTGlzdERhdGEubWF4VXNlcnMgPSBkZXRhaWxzRGF0YS5tYXh1c2VycztcbiAgZ3JvdXBMaXN0RGF0YS5hbGxvd0ludml0ZXMgPSBkZXRhaWxzRGF0YS5hbGxvd2ludml0ZXM7XG4gIGdyb3VwTGlzdERhdGEuYWZmaWxpYXRpb25zQ291bnQgPSBkZXRhaWxzRGF0YS5hZmZpbGlhdGlvbnNfY291bnQ7XG4gIC8v5bCG6L+U5Zue576k5YiX6KGo6YeM6Z2i55qE5LiN5a2Y5Zyo55qE5bGe5oCn5LuO576k6K+m5oOF5paw5aKe44CCXG4gIGdyb3VwTGlzdERhdGEuc2hpZWxkZ3JvdXAgPSBkZXRhaWxzRGF0YS5zaGllbGRncm91cDtcbiAgZ3JvdXBMaXN0RGF0YS5hZmZpbGlhdGlvbnMgPSBkZXRhaWxzRGF0YS5hZmZpbGlhdGlvbnM7XG4gIGdyb3VwTGlzdERhdGEubXV0ZSA9IGRldGFpbHNEYXRhLm11dGU7XG4gIGdyb3VwTGlzdERhdGEuY3VzdG9tID0gZGV0YWlsc0RhdGEuY3VzdG9tO1xuICBncm91cExpc3REYXRhLmNyZWF0ZWQgPSBkZXRhaWxzRGF0YS5jcmVhdGVkO1xuICBncm91cExpc3REYXRhLm93bmVyID0gZGV0YWlsc0RhdGEub3duZXI7XG4gIGdyb3VwTGlzdERhdGEubWVtYmVyc29ubHkgPSBkZXRhaWxzRGF0YS5tZW1iZXJzb25seTtcbiAgLy/kuKTkuKrmlbDmja7nu5PmnoTph43lkIjnmoTlsZ7mgKflgLxcbiAgZ3JvdXBMaXN0RGF0YS5kZXNjcmlwdGlvbiA9IGRldGFpbHNEYXRhLmRlc2NyaXB0aW9uO1xuICBncm91cExpc3REYXRhLmRpc2FibGVkID0gZGV0YWlsc0RhdGEuZGlzYWJsZWQ7XG4gIGdyb3VwTGlzdERhdGEucHVibGljID0gZGV0YWlsc0RhdGEucHVibGljO1xuXG4gIHJldHVybiBncm91cExpc3REYXRhO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///45\n");

/***/ }),
/* 46 */
/*!*******************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/store/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 26));\nvar _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 47));\nvar _login = _interopRequireDefault(__webpack_require__(/*! ./modules/login */ 48));\n// 页面路径：store/index.js\n\n_vue.default.use(_vuex.default); //vue的插件机制\n\n//Vuex.Store 构造器选项\nvar store = new _vuex.default.Store({\n  modules: {\n    LoginStore: _login.default\n  }\n});\nvar _default = store;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvaW5kZXguanMiXSwibmFtZXMiOlsiVnVlIiwidXNlIiwiVnVleCIsInN0b3JlIiwiU3RvcmUiLCJtb2R1bGVzIiwiTG9naW5TdG9yZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBO0FBQ0E7QUFHQTtBQUxBOztBQUlBQSxZQUFHLENBQUNDLEdBQUcsQ0FBQ0MsYUFBSSxDQUFDLENBQUMsQ0FBQzs7QUFFZjtBQUNBLElBQU1DLEtBQUssR0FBRyxJQUFJRCxhQUFJLENBQUNFLEtBQUssQ0FBQztFQUMzQkMsT0FBTyxFQUFFO0lBQ1BDLFVBQVUsRUFBVkE7RUFDRjtBQUNGLENBQUMsQ0FBQztBQUFDLGVBQ1lILEtBQUs7QUFBQSIsImZpbGUiOiI0Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIOmhtemdoui3r+W+hO+8mnN0b3JlL2luZGV4LmpzXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7XG5pbXBvcnQgVnVleCBmcm9tICd2dWV4JztcblxuVnVlLnVzZShWdWV4KTsgLy92dWXnmoTmj5Lku7bmnLrliLZcbmltcG9ydCBMb2dpblN0b3JlIGZyb20gJy4vbW9kdWxlcy9sb2dpbic7XG4vL1Z1ZXguU3RvcmUg5p6E6YCg5Zmo6YCJ6aG5XG5jb25zdCBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHtcbiAgbW9kdWxlczoge1xuICAgIExvZ2luU3RvcmVcbiAgfSxcbn0pO1xuZXhwb3J0IGRlZmF1bHQgc3RvcmU7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///46\n");

/***/ }),
/* 47 */
/*!**************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vuex3/dist/vuex.common.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * vuex v3.6.2
 * (c) 2021 Evan You
 * @license MIT
 */


function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
function find (list, f) {
  return list.filter(f)[0]
}

/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */
function deepCopy (obj, cache) {
  if ( cache === void 0 ) cache = [];

  // just return if obj is immutable value
  if (obj === null || typeof obj !== 'object') {
    return obj
  }

  // if obj is hit, it is in circular structure
  var hit = find(cache, function (c) { return c.original === obj; });
  if (hit) {
    return hit.copy
  }

  var copy = Array.isArray(obj) ? [] : {};
  // put the copy into cache at first
  // because we want to refer it in recursive deepCopy
  cache.push({
    original: obj,
    copy: copy
  });

  Object.keys(obj).forEach(function (key) {
    copy[key] = deepCopy(obj[key], cache);
  });

  return copy
}

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((true)) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  var child = parent.getChild(key);

  if (!child) {
    if ((true)) {
      console.warn(
        "[vuex] trying to unregister module '" + key + "', which is " +
        "not registered"
      );
    }
    return
  }

  if (!child.runtime) {
    return
  }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  if (parent) {
    return parent.hasChild(key)
  }

  return false
};

function update (path, targetModule, newModule) {
  if ((true)) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((true)) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((true)) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((true)) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    ( true) &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((true)) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e);
        }
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e);
        }
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((true)) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  return this._modules.isRegistered(path)
};

Store.prototype[[104,111,116,85,112,100,97,116,101].map(function (item) {return String.fromCharCode(item)}).join('')] = function (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("development" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((true)) {
        if (moduleName in parentState) {
          console.warn(
            ("[vuex] state field \"" + moduleName + "\" was overridden by a module with the same name at \"" + (path.join('.')) + "\"")
          );
        }
      }
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((true)) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((true)) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((true)) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((true)) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (( true) && !isValidMap(states)) {
    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept another params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (( true) && !isValidMap(mutations)) {
    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (( true) && !isValidMap(getters)) {
    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (( true) && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (( true) && !isValidMap(actions)) {
    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (( true) && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

// Credits: borrowed code from fcomb/redux-logger

function createLogger (ref) {
  if ( ref === void 0 ) ref = {};
  var collapsed = ref.collapsed; if ( collapsed === void 0 ) collapsed = true;
  var filter = ref.filter; if ( filter === void 0 ) filter = function (mutation, stateBefore, stateAfter) { return true; };
  var transformer = ref.transformer; if ( transformer === void 0 ) transformer = function (state) { return state; };
  var mutationTransformer = ref.mutationTransformer; if ( mutationTransformer === void 0 ) mutationTransformer = function (mut) { return mut; };
  var actionFilter = ref.actionFilter; if ( actionFilter === void 0 ) actionFilter = function (action, state) { return true; };
  var actionTransformer = ref.actionTransformer; if ( actionTransformer === void 0 ) actionTransformer = function (act) { return act; };
  var logMutations = ref.logMutations; if ( logMutations === void 0 ) logMutations = true;
  var logActions = ref.logActions; if ( logActions === void 0 ) logActions = true;
  var logger = ref.logger; if ( logger === void 0 ) logger = console;

  return function (store) {
    var prevState = deepCopy(store.state);

    if (typeof logger === 'undefined') {
      return
    }

    if (logMutations) {
      store.subscribe(function (mutation, state) {
        var nextState = deepCopy(state);

        if (filter(mutation, prevState, nextState)) {
          var formattedTime = getFormattedTime();
          var formattedMutation = mutationTransformer(mutation);
          var message = "mutation " + (mutation.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState));
          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);
          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState));
          endMessage(logger);
        }

        prevState = nextState;
      });
    }

    if (logActions) {
      store.subscribeAction(function (action, state) {
        if (actionFilter(action, state)) {
          var formattedTime = getFormattedTime();
          var formattedAction = actionTransformer(action);
          var message = "action " + (action.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction);
          endMessage(logger);
        }
      });
    }
  }
}

function startMessage (logger, message, collapsed) {
  var startMessage = collapsed
    ? logger.groupCollapsed
    : logger.group;

  // render
  try {
    startMessage.call(logger, message);
  } catch (e) {
    logger.log(message);
  }
}

function endMessage (logger) {
  try {
    logger.groupEnd();
  } catch (e) {
    logger.log('—— log end ——');
  }
}

function getFormattedTime () {
  var time = new Date();
  return (" @ " + (pad(time.getHours(), 2)) + ":" + (pad(time.getMinutes(), 2)) + ":" + (pad(time.getSeconds(), 2)) + "." + (pad(time.getMilliseconds(), 3)))
}

function repeat (str, times) {
  return (new Array(times + 1)).join(str)
}

function pad (num, maxLength) {
  return repeat('0', maxLength - num.toString().length) + num
}

var index_cjs = {
  Store: Store,
  install: install,
  version: '3.6.2',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers,
  createLogger: createLogger
};

module.exports = index_cjs;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 19)))

/***/ }),
/* 48 */
/*!***************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/store/modules/login.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ 13));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 15));\nvar _EaseIM = __webpack_require__(/*! @/EaseIM */ 16);\nvar _emApis = __webpack_require__(/*! @/EaseIM/emApis */ 29);\nvar _emUserInfos = (0, _emApis.emUserInfos)(),\n  fetchUserInfoWithLoginId = _emUserInfos.fetchUserInfoWithLoginId;\n_emApis.emUserInfos;\nvar loginStore = {\n  state: {\n    loginStatus: false,\n    loginUserBaseInfos: {\n      loginUserId: '',\n      phoneNumber: ''\n    },\n    loginUserProfiles: {}\n  },\n  mutations: {\n    SET_LOGIN_STATUS: function SET_LOGIN_STATUS(state, status) {\n      state.loginStatus = status;\n    },\n    SET_LOGIN_USER_BASE_INFOS: function SET_LOGIN_USER_BASE_INFOS(state, baseInfos) {\n      state.loginUserBaseInfos = Object.assign({}, baseInfos);\n    },\n    SET_LOGIN_USER_PROFILES: function SET_LOGIN_USER_PROFILES(state, profiles) {\n      state.loginUserProfiles = Object.assign({}, profiles);\n    }\n  },\n  actions: {\n    fetchLoginUserProfile: function fetchLoginUserProfile(_ref) {\n      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var commit, profiles;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.prev = 1;\n                _context.next = 4;\n                return fetchUserInfoWithLoginId();\n              case 4:\n                profiles = _context.sent;\n                commit('SET_LOGIN_USER_PROFILES', profiles[_EaseIM.EMClient.user]);\n                _context.next = 11;\n                break;\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                __f__(\"log\", '>>>>登录用户个人信息获取失败', _context.t0, \" at store/modules/login.js:32\");\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }))();\n    }\n  },\n  getters: {\n    loginStatus: function loginStatus(state) {\n      return state.loginStatus;\n    }\n  }\n};\nvar _default = loginStore;\nexports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9sb2dpbi5qcyJdLCJuYW1lcyI6WyJlbVVzZXJJbmZvcyIsImZldGNoVXNlckluZm9XaXRoTG9naW5JZCIsImxvZ2luU3RvcmUiLCJzdGF0ZSIsImxvZ2luU3RhdHVzIiwibG9naW5Vc2VyQmFzZUluZm9zIiwibG9naW5Vc2VySWQiLCJwaG9uZU51bWJlciIsImxvZ2luVXNlclByb2ZpbGVzIiwibXV0YXRpb25zIiwiU0VUX0xPR0lOX1NUQVRVUyIsInN0YXR1cyIsIlNFVF9MT0dJTl9VU0VSX0JBU0VfSU5GT1MiLCJiYXNlSW5mb3MiLCJPYmplY3QiLCJhc3NpZ24iLCJTRVRfTE9HSU5fVVNFUl9QUk9GSUxFUyIsInByb2ZpbGVzIiwiYWN0aW9ucyIsImZldGNoTG9naW5Vc2VyUHJvZmlsZSIsImNvbW1pdCIsIkVNQ2xpZW50IiwidXNlciIsImdldHRlcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQSxtQkFBcUMsSUFBQUEsbUJBQVcsR0FBRTtFQUExQ0Msd0JBQXdCLGdCQUF4QkEsd0JBQXdCO0FBRWhDRCxtQkFBVztBQUNYLElBQU1FLFVBQVUsR0FBRztFQUNqQkMsS0FBSyxFQUFFO0lBQ0xDLFdBQVcsRUFBRSxLQUFLO0lBQ2xCQyxrQkFBa0IsRUFBRTtNQUNsQkMsV0FBVyxFQUFFLEVBQUU7TUFDZkMsV0FBVyxFQUFFO0lBQ2YsQ0FBQztJQUNEQyxpQkFBaUIsRUFBRSxDQUFDO0VBQ3RCLENBQUM7RUFDREMsU0FBUyxFQUFFO0lBQ1RDLGdCQUFnQixFQUFFLDBCQUFDUCxLQUFLLEVBQUVRLE1BQU0sRUFBSztNQUNuQ1IsS0FBSyxDQUFDQyxXQUFXLEdBQUdPLE1BQU07SUFDNUIsQ0FBQztJQUNEQyx5QkFBeUIsRUFBRSxtQ0FBQ1QsS0FBSyxFQUFFVSxTQUFTLEVBQUs7TUFDL0NWLEtBQUssQ0FBQ0Usa0JBQWtCLEdBQUdTLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFRixTQUFTLENBQUM7SUFDekQsQ0FBQztJQUNERyx1QkFBdUIsRUFBRSxpQ0FBQ2IsS0FBSyxFQUFFYyxRQUFRLEVBQUs7TUFDNUNkLEtBQUssQ0FBQ0ssaUJBQWlCLEdBQUdNLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFRSxRQUFRLENBQUM7SUFDdkQ7RUFDRixDQUFDO0VBQ0RDLE9BQU8sRUFBRTtJQUNEQyxxQkFBcUIsdUNBQWE7TUFBQTtRQUFBO1FBQUE7VUFBQTtZQUFBO2NBQUE7Z0JBQVZDLE1BQU0sUUFBTkEsTUFBTTtnQkFBQTtnQkFBQTtnQkFBQSxPQUVUbkIsd0JBQXdCLEVBQUU7Y0FBQTtnQkFBM0NnQixRQUFRO2dCQUNkRyxNQUFNLENBQUMseUJBQXlCLEVBQUVILFFBQVEsQ0FBQ0ksZ0JBQVEsQ0FBQ0MsSUFBSSxDQUFDLENBQUM7Z0JBQUM7Z0JBQUE7Y0FBQTtnQkFBQTtnQkFBQTtnQkFFM0QsYUFBWSxrQkFBa0I7Y0FBUztjQUFBO2dCQUFBO1lBQUE7VUFBQTtRQUFBO01BQUE7SUFFM0M7RUFDRixDQUFDO0VBQ0RDLE9BQU8sRUFBRTtJQUNQbkIsV0FBVyxFQUFFLHFCQUFDRCxLQUFLO01BQUEsT0FBS0EsS0FBSyxDQUFDQyxXQUFXO0lBQUE7RUFDM0M7QUFDRixDQUFDO0FBQUMsZUFDYUYsVUFBVTtBQUFBLDJCIiwiZmlsZSI6IjQ4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRU1DbGllbnQgfSBmcm9tICdAL0Vhc2VJTSc7XG5pbXBvcnQgeyBlbVVzZXJJbmZvcyB9IGZyb20gJ0AvRWFzZUlNL2VtQXBpcyc7XG5jb25zdCB7IGZldGNoVXNlckluZm9XaXRoTG9naW5JZCB9ID0gZW1Vc2VySW5mb3MoKTtcblxuZW1Vc2VySW5mb3M7XG5jb25zdCBsb2dpblN0b3JlID0ge1xuICBzdGF0ZToge1xuICAgIGxvZ2luU3RhdHVzOiBmYWxzZSxcbiAgICBsb2dpblVzZXJCYXNlSW5mb3M6IHtcbiAgICAgIGxvZ2luVXNlcklkOiAnJyxcbiAgICAgIHBob25lTnVtYmVyOiAnJyxcbiAgICB9LFxuICAgIGxvZ2luVXNlclByb2ZpbGVzOiB7fSxcbiAgfSxcbiAgbXV0YXRpb25zOiB7XG4gICAgU0VUX0xPR0lOX1NUQVRVUzogKHN0YXRlLCBzdGF0dXMpID0+IHtcbiAgICAgIHN0YXRlLmxvZ2luU3RhdHVzID0gc3RhdHVzO1xuICAgIH0sXG4gICAgU0VUX0xPR0lOX1VTRVJfQkFTRV9JTkZPUzogKHN0YXRlLCBiYXNlSW5mb3MpID0+IHtcbiAgICAgIHN0YXRlLmxvZ2luVXNlckJhc2VJbmZvcyA9IE9iamVjdC5hc3NpZ24oe30sIGJhc2VJbmZvcyk7XG4gICAgfSxcbiAgICBTRVRfTE9HSU5fVVNFUl9QUk9GSUxFUzogKHN0YXRlLCBwcm9maWxlcykgPT4ge1xuICAgICAgc3RhdGUubG9naW5Vc2VyUHJvZmlsZXMgPSBPYmplY3QuYXNzaWduKHt9LCBwcm9maWxlcyk7XG4gICAgfSxcbiAgfSxcbiAgYWN0aW9uczoge1xuICAgIGFzeW5jIGZldGNoTG9naW5Vc2VyUHJvZmlsZSh7IGNvbW1pdCB9KSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBwcm9maWxlcyA9IGF3YWl0IGZldGNoVXNlckluZm9XaXRoTG9naW5JZCgpO1xuICAgICAgICBjb21taXQoJ1NFVF9MT0dJTl9VU0VSX1BST0ZJTEVTJywgcHJvZmlsZXNbRU1DbGllbnQudXNlcl0pO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coJz4+Pj7nmbvlvZXnlKjmiLfkuKrkurrkv6Hmga/ojrflj5blpLHotKUnLCBlcnJvcik7XG4gICAgICB9XG4gICAgfSxcbiAgfSxcbiAgZ2V0dGVyczoge1xuICAgIGxvZ2luU3RhdHVzOiAoc3RhdGUpID0+IHN0YXRlLmxvZ2luU3RhdHVzLFxuICB9LFxufTtcbmV4cG9ydCBkZWZhdWx0IGxvZ2luU3RvcmU7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///48\n");

/***/ }),
/* 49 */
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    if(typeof renderjs.beforeCreate === 'function'){
			renderjs.beforeCreate = [renderjs.beforeCreate]
		}
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 50 */
/*!************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/App.vue ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App.vue?vue&type=script&lang=js& */ 51);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if([\"default\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 49);\nvar render, staticRenderFns, recyclableRender, components\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"App.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUN1RDtBQUNMOzs7QUFHbEQ7QUFDME07QUFDMU0sZ0JBQWdCLGlOQUFVO0FBQzFCLEVBQUUseUVBQU07QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNlLGdGIiwiZmlsZSI6IjUwLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciwgc3RhdGljUmVuZGVyRm5zLCByZWN5Y2xhYmxlUmVuZGVyLCBjb21wb25lbnRzXG52YXIgcmVuZGVyanNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3Z1ZS1jbGktcGx1Z2luLXVuaS9wYWNrYWdlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJBcHAudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50\n");

/***/ }),
/* 51 */
/*!*************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/App.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib!../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--7-1!../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./App.vue?vue&type=script&lang=js& */ 52);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if([\"default\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_7_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTJyQixDQUFnQix5c0JBQUcsRUFBQyIsImZpbGUiOiI1MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNy0xIS4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///51\n");

/***/ }),
/* 52 */
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--7-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/App.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _EaseIM = __webpack_require__(/*! @/EaseIM */ 16);\nvar _emApis = __webpack_require__(/*! @/EaseIM/emApis */ 29);\nvar _emListener = __webpack_require__(/*! @/EaseIM/emListener */ 53);\nvar _constant = __webpack_require__(/*! @/EaseIM/constant */ 40);\nvar _emConnect = (0, _emApis.emConnect)(),\n  closeEaseIM = _emConnect.closeEaseIM,\n  loginWithAccessToken = _emConnect.loginWithAccessToken;\nvar _default = {\n  onLaunch: function onLaunch() {\n    var _this = this;\n    __f__(\"log\", 'App Launch', \" at App.vue:9\");\n    //传给监听callback回调\n    var connectedCallback = function connectedCallback(type) {\n      __f__(\"log\", '>>>>>连接相关回调', type, \" at App.vue:12\");\n      if (type === _constant.CONNECT_CALLBACK_TYPE.CONNECT_CALLBACK) {\n        _this.onConnectedSuccess();\n      }\n      if (type === _constant.CONNECT_CALLBACK_TYPE.DISCONNECT_CALLBACK) {\n        _this.onDisconnect();\n      }\n      if (type === _constant.CONNECT_CALLBACK_TYPE.RECONNECTING_CALLBACK) {\n        _this.onReconnecting();\n      }\n    };\n    /* 链接所需监听回调 */\n    (0, _emListener.emConnectListener)(connectedCallback);\n    /* 全局类型监听集合、消息、联系人、群组等... */\n    (0, _emListener.emMountGlobalListener)();\n  },\n  /* 最终优化点：onShow 全局断开 onHide 本地存储token直接进行IM建联 */\n  //   onShow: function () {\n  //     console.log('App Show');\n  //     const getStorageData = uni.getStorageSync('EM_TOKEN');\n  //     if (getStorageData?.token || getStorageData?.userId) {\n  //       const userId = getStorageData?.userId;\n  //       const token = getStorageData?.token;\n  //       console.log('>>>>>>执行IM 登录', userId, token);\n  //       loginWithAccessToken(userId, token);\n  //     }\n  //   },\n  //   onHide: function () {\n  //     console.log('App Hide');\n  //     /* onHide  主动断开IM连接 */\n  //     closeEaseIM();\n  //   },\n  methods: {\n    onConnectedSuccess: function onConnectedSuccess() {\n      var _ref = this.loginStoreUserBaseInfos || {},\n        loginUserId = _ref.loginUserId;\n      var finalLoginUserId = loginUserId || _EaseIM.EMClient.user;\n      if (!this.loginStoreStatus) {\n        // this.fetchLoginUserNeedData();\n      }\n      this.$store.commit('SET_LOGIN_USER_BASE_INFOS', {\n        loginUserId: finalLoginUserId\n      });\n      this.$store.commit('SET_LOGIN_STATUS', true);\n      uni.showToast({\n        title: '连接成功',\n        icon: 'none',\n        duration: 2000\n      });\n    },\n    onDisconnect: function onDisconnect() {\n      uni.showToast({\n        icon: 'none',\n        title: '断开IM连接'\n      });\n      //断开回调触发后，如果业务登录状态为true则说明异常断开需要重新登录\n      if (!this.loginStatus) {\n        uni.showToast({\n          title: '退出登录',\n          icon: 'none',\n          duration: 2000\n        });\n        closeEaseIM();\n      } else {\n        //执行通过token进行重新登录\n        // actionEMReconnect();\n      }\n    },\n    onReconnecting: function onReconnecting() {\n      uni.showToast({\n        title: '重连中，请勿执行发送消息',\n        icon: 'none'\n      });\n    }\n  }\n};\nexports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vQXBwLnZ1ZSJdLCJuYW1lcyI6WyJlbUNvbm5lY3QiLCJjbG9zZUVhc2VJTSIsImxvZ2luV2l0aEFjY2Vzc1Rva2VuIiwib25MYXVuY2giLCJjb25uZWN0ZWRDYWxsYmFjayIsInR5cGUiLCJDT05ORUNUX0NBTExCQUNLX1RZUEUiLCJDT05ORUNUX0NBTExCQUNLIiwib25Db25uZWN0ZWRTdWNjZXNzIiwiRElTQ09OTkVDVF9DQUxMQkFDSyIsIm9uRGlzY29ubmVjdCIsIlJFQ09OTkVDVElOR19DQUxMQkFDSyIsIm9uUmVjb25uZWN0aW5nIiwiZW1Db25uZWN0TGlzdGVuZXIiLCJlbU1vdW50R2xvYmFsTGlzdGVuZXIiLCJtZXRob2RzIiwibG9naW5TdG9yZVVzZXJCYXNlSW5mb3MiLCJsb2dpblVzZXJJZCIsImZpbmFsTG9naW5Vc2VySWQiLCJFTUNsaWVudCIsInVzZXIiLCJsb2dpblN0b3JlU3RhdHVzIiwiJHN0b3JlIiwiY29tbWl0IiwidW5pIiwic2hvd1RvYXN0IiwidGl0bGUiLCJpY29uIiwiZHVyYXRpb24iLCJsb2dpblN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBOEMsSUFBQUEsaUJBQVMsR0FBRTtFQUFqREMsV0FBVyxjQUFYQSxXQUFXO0VBQUVDLG9CQUFvQixjQUFwQkEsb0JBQW9CO0FBQWlCLGVBQzNDO0VBQ2JDLFFBQVEsRUFBRSxvQkFBWTtJQUFBO0lBQ3BCLGFBQVksWUFBWTtJQUN4QjtJQUNBLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBaUIsQ0FBSUMsSUFBSSxFQUFLO01BQ2xDLGFBQVksYUFBYSxFQUFFQSxJQUFJO01BQy9CLElBQUlBLElBQUksS0FBS0MsK0JBQXFCLENBQUNDLGdCQUFnQixFQUFFO1FBQ25ELEtBQUksQ0FBQ0Msa0JBQWtCLEVBQUU7TUFDM0I7TUFDQSxJQUFJSCxJQUFJLEtBQUtDLCtCQUFxQixDQUFDRyxtQkFBbUIsRUFBRTtRQUN0RCxLQUFJLENBQUNDLFlBQVksRUFBRTtNQUNyQjtNQUNBLElBQUlMLElBQUksS0FBS0MsK0JBQXFCLENBQUNLLHFCQUFxQixFQUFFO1FBQ3hELEtBQUksQ0FBQ0MsY0FBYyxFQUFFO01BQ3ZCO0lBQ0YsQ0FBQztJQUNEO0lBQ0EsSUFBQUMsNkJBQWlCLEVBQUNULGlCQUFpQixDQUFDO0lBQ3BDO0lBQ0EsSUFBQVUsaUNBQXFCLEdBQUU7RUFDekIsQ0FBQztFQUNEO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0FDLE9BQU8sRUFBRTtJQUNQUCxrQkFBa0IsZ0NBQUc7TUFDbkIsV0FBd0IsSUFBSSxDQUFDUSx1QkFBdUIsSUFBSSxDQUFDLENBQUM7UUFBbERDLFdBQVcsUUFBWEEsV0FBVztNQUNuQixJQUFNQyxnQkFBZ0IsR0FBR0QsV0FBVyxJQUFJRSxnQkFBUSxDQUFDQyxJQUFJO01BQ3JELElBQUksQ0FBQyxJQUFJLENBQUNDLGdCQUFnQixFQUFFO1FBQzFCO01BQUE7TUFFRixJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLDJCQUEyQixFQUFFO1FBQzlDTixXQUFXLEVBQUVDO01BQ2YsQ0FBQyxDQUFDO01BQ0YsSUFBSSxDQUFDSSxNQUFNLENBQUNDLE1BQU0sQ0FBQyxrQkFBa0IsRUFBRSxJQUFJLENBQUM7TUFDNUNDLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDO1FBQ1pDLEtBQUssRUFBRSxNQUFNO1FBQ2JDLElBQUksRUFBRSxNQUFNO1FBQ1pDLFFBQVEsRUFBRTtNQUNaLENBQUMsQ0FBQztJQUNKLENBQUM7SUFDRGxCLFlBQVksMEJBQUc7TUFDYmMsR0FBRyxDQUFDQyxTQUFTLENBQUM7UUFDWkUsSUFBSSxFQUFFLE1BQU07UUFDWkQsS0FBSyxFQUFFO01BQ1QsQ0FBQyxDQUFDO01BQ0Y7TUFDQSxJQUFJLENBQUMsSUFBSSxDQUFDRyxXQUFXLEVBQUU7UUFDckJMLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDO1VBQ1pDLEtBQUssRUFBRSxNQUFNO1VBQ2JDLElBQUksRUFBRSxNQUFNO1VBQ1pDLFFBQVEsRUFBRTtRQUNaLENBQUMsQ0FBQztRQUNGM0IsV0FBVyxFQUFFO01BQ2YsQ0FBQyxNQUFNO1FBQ0w7UUFDQTtNQUFBO0lBRUosQ0FBQztJQUNEVyxjQUFjLDRCQUFHO01BQ2ZZLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDO1FBQ1pDLEtBQUssRUFBRSxjQUFjO1FBQ3JCQyxJQUFJLEVBQUU7TUFDUixDQUFDLENBQUM7SUFDSjtFQUNGO0FBQ0YsQ0FBQztBQUFBLDJCIiwiZmlsZSI6IjUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBFTUNsaWVudCB9IGZyb20gJ0AvRWFzZUlNJztcbmltcG9ydCB7IGVtQ29ubmVjdCB9IGZyb20gJ0AvRWFzZUlNL2VtQXBpcyc7XG5pbXBvcnQgeyBlbUNvbm5lY3RMaXN0ZW5lciwgZW1Nb3VudEdsb2JhbExpc3RlbmVyIH0gZnJvbSAnQC9FYXNlSU0vZW1MaXN0ZW5lcic7XG5pbXBvcnQgeyBDT05ORUNUX0NBTExCQUNLX1RZUEUsIEhBTkRMRVJfRVZFTlRfTkFNRSB9IGZyb20gJ0AvRWFzZUlNL2NvbnN0YW50JztcbmNvbnN0IHsgY2xvc2VFYXNlSU0sIGxvZ2luV2l0aEFjY2Vzc1Rva2VuIH0gPSBlbUNvbm5lY3QoKTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgb25MYXVuY2g6IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zb2xlLmxvZygnQXBwIExhdW5jaCcpO1xuICAgIC8v5Lyg57uZ55uR5ZCsY2FsbGJhY2vlm57osINcbiAgICBjb25zdCBjb25uZWN0ZWRDYWxsYmFjayA9ICh0eXBlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnPj4+Pj7ov57mjqXnm7jlhbPlm57osIMnLCB0eXBlKTtcbiAgICAgIGlmICh0eXBlID09PSBDT05ORUNUX0NBTExCQUNLX1RZUEUuQ09OTkVDVF9DQUxMQkFDSykge1xuICAgICAgICB0aGlzLm9uQ29ubmVjdGVkU3VjY2VzcygpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGUgPT09IENPTk5FQ1RfQ0FMTEJBQ0tfVFlQRS5ESVNDT05ORUNUX0NBTExCQUNLKSB7XG4gICAgICAgIHRoaXMub25EaXNjb25uZWN0KCk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZSA9PT0gQ09OTkVDVF9DQUxMQkFDS19UWVBFLlJFQ09OTkVDVElOR19DQUxMQkFDSykge1xuICAgICAgICB0aGlzLm9uUmVjb25uZWN0aW5nKCk7XG4gICAgICB9XG4gICAgfTtcbiAgICAvKiDpk77mjqXmiYDpnIDnm5HlkKzlm57osIMgKi9cbiAgICBlbUNvbm5lY3RMaXN0ZW5lcihjb25uZWN0ZWRDYWxsYmFjayk7XG4gICAgLyog5YWo5bGA57G75Z6L55uR5ZCs6ZuG5ZCI44CB5raI5oGv44CB6IGU57O75Lq644CB576k57uE562JLi4uICovXG4gICAgZW1Nb3VudEdsb2JhbExpc3RlbmVyKCk7XG4gIH0sXG4gIC8qIOacgOe7iOS8mOWMlueCue+8mm9uU2hvdyDlhajlsYDmlq3lvIAgb25IaWRlIOacrOWcsOWtmOWCqHRva2Vu55u05o6l6L+b6KGMSU3lu7rogZQgKi9cbiAgLy8gICBvblNob3c6IGZ1bmN0aW9uICgpIHtcbiAgLy8gICAgIGNvbnNvbGUubG9nKCdBcHAgU2hvdycpO1xuICAvLyAgICAgY29uc3QgZ2V0U3RvcmFnZURhdGEgPSB1bmkuZ2V0U3RvcmFnZVN5bmMoJ0VNX1RPS0VOJyk7XG4gIC8vICAgICBpZiAoZ2V0U3RvcmFnZURhdGE/LnRva2VuIHx8IGdldFN0b3JhZ2VEYXRhPy51c2VySWQpIHtcbiAgLy8gICAgICAgY29uc3QgdXNlcklkID0gZ2V0U3RvcmFnZURhdGE/LnVzZXJJZDtcbiAgLy8gICAgICAgY29uc3QgdG9rZW4gPSBnZXRTdG9yYWdlRGF0YT8udG9rZW47XG4gIC8vICAgICAgIGNvbnNvbGUubG9nKCc+Pj4+Pj7miafooYxJTSDnmbvlvZUnLCB1c2VySWQsIHRva2VuKTtcbiAgLy8gICAgICAgbG9naW5XaXRoQWNjZXNzVG9rZW4odXNlcklkLCB0b2tlbik7XG4gIC8vICAgICB9XG4gIC8vICAgfSxcbiAgLy8gICBvbkhpZGU6IGZ1bmN0aW9uICgpIHtcbiAgLy8gICAgIGNvbnNvbGUubG9nKCdBcHAgSGlkZScpO1xuICAvLyAgICAgLyogb25IaWRlICDkuLvliqjmlq3lvIBJTei/nuaOpSAqL1xuICAvLyAgICAgY2xvc2VFYXNlSU0oKTtcbiAgLy8gICB9LFxuICBtZXRob2RzOiB7XG4gICAgb25Db25uZWN0ZWRTdWNjZXNzKCkge1xuICAgICAgY29uc3QgeyBsb2dpblVzZXJJZCB9ID0gdGhpcy5sb2dpblN0b3JlVXNlckJhc2VJbmZvcyB8fCB7fTtcbiAgICAgIGNvbnN0IGZpbmFsTG9naW5Vc2VySWQgPSBsb2dpblVzZXJJZCB8fCBFTUNsaWVudC51c2VyO1xuICAgICAgaWYgKCF0aGlzLmxvZ2luU3RvcmVTdGF0dXMpIHtcbiAgICAgICAgLy8gdGhpcy5mZXRjaExvZ2luVXNlck5lZWREYXRhKCk7XG4gICAgICB9XG4gICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9MT0dJTl9VU0VSX0JBU0VfSU5GT1MnLCB7XG4gICAgICAgIGxvZ2luVXNlcklkOiBmaW5hbExvZ2luVXNlcklkLFxuICAgICAgfSk7XG4gICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9MT0dJTl9TVEFUVVMnLCB0cnVlKTtcbiAgICAgIHVuaS5zaG93VG9hc3Qoe1xuICAgICAgICB0aXRsZTogJ+i/nuaOpeaIkOWKnycsXG4gICAgICAgIGljb246ICdub25lJyxcbiAgICAgICAgZHVyYXRpb246IDIwMDAsXG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uRGlzY29ubmVjdCgpIHtcbiAgICAgIHVuaS5zaG93VG9hc3Qoe1xuICAgICAgICBpY29uOiAnbm9uZScsXG4gICAgICAgIHRpdGxlOiAn5pat5byASU3ov57mjqUnLFxuICAgICAgfSk7XG4gICAgICAvL+aWreW8gOWbnuiwg+inpuWPkeWQju+8jOWmguaenOS4muWKoeeZu+W9leeKtuaAgeS4unRydWXliJnor7TmmI7lvILluLjmlq3lvIDpnIDopoHph43mlrDnmbvlvZVcbiAgICAgIGlmICghdGhpcy5sb2dpblN0YXR1cykge1xuICAgICAgICB1bmkuc2hvd1RvYXN0KHtcbiAgICAgICAgICB0aXRsZTogJ+mAgOWHuueZu+W9lScsXG4gICAgICAgICAgaWNvbjogJ25vbmUnLFxuICAgICAgICAgIGR1cmF0aW9uOiAyMDAwLFxuICAgICAgICB9KTtcbiAgICAgICAgY2xvc2VFYXNlSU0oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8v5omn6KGM6YCa6L+HdG9rZW7ov5vooYzph43mlrDnmbvlvZVcbiAgICAgICAgLy8gYWN0aW9uRU1SZWNvbm5lY3QoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uUmVjb25uZWN0aW5nKCkge1xuICAgICAgdW5pLnNob3dUb2FzdCh7XG4gICAgICAgIHRpdGxlOiAn6YeN6L+e5Lit77yM6K+35Yu/5omn6KGM5Y+R6YCB5raI5oGvJyxcbiAgICAgICAgaWNvbjogJ25vbmUnLFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSxcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///52\n");

/***/ }),
/* 53 */
/*!*******************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emListener/index.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"emConnectListener\", {\n  enumerable: true,\n  get: function get() {\n    return _emConnectListener.emConnectListener;\n  }\n});\nObject.defineProperty(exports, \"emContactsListener\", {\n  enumerable: true,\n  get: function get() {\n    return _emContactsListener.emContactsListener;\n  }\n});\nObject.defineProperty(exports, \"emMountGlobalListener\", {\n  enumerable: true,\n  get: function get() {\n    return _emMountGlobalListener.emMountGlobalListener;\n  }\n});\nvar _emConnectListener = __webpack_require__(/*! ./emConnectListener */ 54);\nvar _emContactsListener = __webpack_require__(/*! ./emContactsListener */ 55);\nvar _emMountGlobalListener = __webpack_require__(/*! ./emMountGlobalListener */ 56);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtTGlzdGVuZXIvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbUNvbm5lY3RMaXN0ZW5lciB9IGZyb20gJy4vZW1Db25uZWN0TGlzdGVuZXInO1xuaW1wb3J0IHsgZW1Db250YWN0c0xpc3RlbmVyIH0gZnJvbSAnLi9lbUNvbnRhY3RzTGlzdGVuZXInO1xuaW1wb3J0IHsgZW1Nb3VudEdsb2JhbExpc3RlbmVyIH0gZnJvbSAnLi9lbU1vdW50R2xvYmFsTGlzdGVuZXInO1xuZXhwb3J0IHsgZW1Nb3VudEdsb2JhbExpc3RlbmVyLCBlbUNvbm5lY3RMaXN0ZW5lciwgZW1Db250YWN0c0xpc3RlbmVyIH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///53\n");

/***/ }),
/* 54 */
/*!*******************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emListener/emConnectListener.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emConnectListener = void 0;\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar _constant = __webpack_require__(/*! ../constant */ 40);\nvar emConnectListener = function emConnectListener(callback, listenerEventName) {\n  __f__(\"log\", '>>>>连接监听已挂载', \" at EaseIM/emListener/emConnectListener.js:4\");\n  var connectListenFunc = {\n    onConnected: function onConnected() {\n      __f__(\"log\", 'connected...', \" at EaseIM/emListener/emConnectListener.js:7\");\n      callback && callback(_constant.CONNECT_CALLBACK_TYPE.CONNECT_CALLBACK);\n    },\n    onDisconnected: function onDisconnected() {\n      callback && callback(_constant.CONNECT_CALLBACK_TYPE.DISCONNECT_CALLBACK);\n      __f__(\"log\", 'disconnected...', \" at EaseIM/emListener/emConnectListener.js:12\");\n    },\n    onReconnecting: function onReconnecting() {\n      callback && callback(_constant.CONNECT_CALLBACK_TYPE.RECONNECTING_CALLBACK);\n    }\n  };\n  _index.EMClient.removeEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.CONNECT_EVENT);\n  _index.EMClient.addEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.CONNECT_EVENT, connectListenFunc);\n};\nexports.emConnectListener = emConnectListener;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtTGlzdGVuZXIvZW1Db25uZWN0TGlzdGVuZXIuanMiXSwibmFtZXMiOlsiZW1Db25uZWN0TGlzdGVuZXIiLCJjYWxsYmFjayIsImxpc3RlbmVyRXZlbnROYW1lIiwiY29ubmVjdExpc3RlbkZ1bmMiLCJvbkNvbm5lY3RlZCIsIkNPTk5FQ1RfQ0FMTEJBQ0tfVFlQRSIsIkNPTk5FQ1RfQ0FMTEJBQ0siLCJvbkRpc2Nvbm5lY3RlZCIsIkRJU0NPTk5FQ1RfQ0FMTEJBQ0siLCJvblJlY29ubmVjdGluZyIsIlJFQ09OTkVDVElOR19DQUxMQkFDSyIsIkVNQ2xpZW50IiwicmVtb3ZlRXZlbnRIYW5kbGVyIiwiSEFORExFUl9FVkVOVF9OQU1FIiwiQ09OTkVDVF9FVkVOVCIsImFkZEV2ZW50SGFuZGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNPLElBQU1BLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBaUIsQ0FBSUMsUUFBUSxFQUFFQyxpQkFBaUIsRUFBSztFQUNoRSxhQUFZLGFBQWE7RUFDekIsSUFBTUMsaUJBQWlCLEdBQUc7SUFDeEJDLFdBQVcsRUFBRSx1QkFBTTtNQUNqQixhQUFZLGNBQWM7TUFDMUJILFFBQVEsSUFBSUEsUUFBUSxDQUFDSSwrQkFBcUIsQ0FBQ0MsZ0JBQWdCLENBQUM7SUFDOUQsQ0FBQztJQUNEQyxjQUFjLEVBQUUsMEJBQU07TUFDcEJOLFFBQVEsSUFBSUEsUUFBUSxDQUFDSSwrQkFBcUIsQ0FBQ0csbUJBQW1CLENBQUM7TUFDL0QsYUFBWSxpQkFBaUI7SUFDL0IsQ0FBQztJQUNEQyxjQUFjLEVBQUUsMEJBQU07TUFDcEJSLFFBQVEsSUFBSUEsUUFBUSxDQUFDSSwrQkFBcUIsQ0FBQ0sscUJBQXFCLENBQUM7SUFDbkU7RUFDRixDQUFDO0VBQ0RDLGVBQVEsQ0FBQ0Msa0JBQWtCLENBQ3pCVixpQkFBaUIsSUFBSVcsNEJBQWtCLENBQUNDLGFBQWEsQ0FDdEQ7RUFDREgsZUFBUSxDQUFDSSxlQUFlLENBQ3RCYixpQkFBaUIsSUFBSVcsNEJBQWtCLENBQUNDLGFBQWEsRUFDckRYLGlCQUFpQixDQUNsQjtBQUNILENBQUM7QUFBQyw4QyIsImZpbGUiOiI1NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVNQ2xpZW50IH0gZnJvbSAnLi4vaW5kZXgnO1xuaW1wb3J0IHsgQ09OTkVDVF9DQUxMQkFDS19UWVBFLCBIQU5ETEVSX0VWRU5UX05BTUUgfSBmcm9tICcuLi9jb25zdGFudCc7XG5leHBvcnQgY29uc3QgZW1Db25uZWN0TGlzdGVuZXIgPSAoY2FsbGJhY2ssIGxpc3RlbmVyRXZlbnROYW1lKSA9PiB7XG4gIGNvbnNvbGUubG9nKCc+Pj4+6L+e5o6l55uR5ZCs5bey5oyC6L29Jyk7XG4gIGNvbnN0IGNvbm5lY3RMaXN0ZW5GdW5jID0ge1xuICAgIG9uQ29ubmVjdGVkOiAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnY29ubmVjdGVkLi4uJyk7XG4gICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhDT05ORUNUX0NBTExCQUNLX1RZUEUuQ09OTkVDVF9DQUxMQkFDSyk7XG4gICAgfSxcbiAgICBvbkRpc2Nvbm5lY3RlZDogKCkgPT4ge1xuICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soQ09OTkVDVF9DQUxMQkFDS19UWVBFLkRJU0NPTk5FQ1RfQ0FMTEJBQ0spO1xuICAgICAgY29uc29sZS5sb2coJ2Rpc2Nvbm5lY3RlZC4uLicpO1xuICAgIH0sXG4gICAgb25SZWNvbm5lY3Rpbmc6ICgpID0+IHtcbiAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKENPTk5FQ1RfQ0FMTEJBQ0tfVFlQRS5SRUNPTk5FQ1RJTkdfQ0FMTEJBQ0spO1xuICAgIH0sXG4gIH07XG4gIEVNQ2xpZW50LnJlbW92ZUV2ZW50SGFuZGxlcihcbiAgICBsaXN0ZW5lckV2ZW50TmFtZSB8fCBIQU5ETEVSX0VWRU5UX05BTUUuQ09OTkVDVF9FVkVOVFxuICApO1xuICBFTUNsaWVudC5hZGRFdmVudEhhbmRsZXIoXG4gICAgbGlzdGVuZXJFdmVudE5hbWUgfHwgSEFORExFUl9FVkVOVF9OQU1FLkNPTk5FQ1RfRVZFTlQsXG4gICAgY29ubmVjdExpc3RlbkZ1bmNcbiAgKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///54\n");

/***/ }),
/* 55 */
/*!********************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emListener/emContactsListener.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emContactsListener = void 0;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar _constant = __webpack_require__(/*! ../constant */ 40);\nvar _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 46));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n__f__(\"log\", '>>>>>>vuex store', _store.default, \" at EaseIM/emListener/emContactsListener.js:4\");\nvar emContactsListener = function emContactsListener(callback, listenerEventName) {\n  __f__(\"log\", '>>>>>好友关系监听挂载', \" at EaseIM/emListener/emContactsListener.js:6\");\n  var addNewInformFunc = function addNewInformFunc(params) {\n    _store.default.commit('ADD_NEW_INFORM', {\n      informType: _constant.INFORM_TYPE.CONTACTS,\n      inform: params\n    });\n  };\n  //处理新邀请更新至邀请信息缓存store\n  var reveiveFriendInvite = function reveiveFriendInvite(params) {\n    _store.default.commit('ADD_NEW_RECEIVE_INVITE_MSG', params);\n  };\n  var contactsListenFunc = {\n    // 当前用户收到好友请求。用户 B 向用户 A 发送好友请求，用户 A 收到该事件。\n    onContactInvited: function onContactInvited(msg) {\n      var contactsInform = Object.assign({}, msg);\n      callback && callback(contactsInform);\n      addNewInformFunc(_objectSpread({}, msg));\n      reveiveFriendInvite(_objectSpread({\n        chatType: _constant.CHAT_TYPE.SINGLE_CHAT\n      }, msg));\n    },\n    // 当前用户被其他用户从联系人列表上移除。用户 B 将用户 A 从联系人列表上删除，用户 A 收到该事件。\n    onContactDeleted: function onContactDeleted(msg) {\n      callback && callback(msg);\n      addNewInformFunc(msg);\n    },\n    // 当前用户新增了联系人。用户 B 向用户 A 发送好友请求，用户 A 同意该请求，用户 A 收到该事件，而用户 B 收到 `onContactAgreed` 事件。\n    onContactAdded: function onContactAdded(msg) {\n      callback && callback(msg);\n      addNewInformFunc(msg);\n    },\n    // 当前用户发送的好友请求被拒绝。用户 A 向用户 B 发送好友请求，用户 B 收到好友请求后，拒绝加好友，则用户 A 收到该事件。\n    onContactRefuse: function onContactRefuse(msg) {\n      callback && callback(msg);\n      addNewInformFunc(msg);\n    },\n    // 当前用户发送的好友请求经过了对方同意。用户 A 向用户 B 发送好友请求，用户 B 收到好友请求后，同意加好友，则用户 A 收到该事件。\n    onContactAgreed: function onContactAgreed(msg) {\n      callback && callback(msg);\n      addNewInformFunc(msg);\n    }\n  };\n  _index.EMClient.removeEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.CONTACTS_EVENT);\n  _index.EMClient.addEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.CONTACTS_EVENT, contactsListenFunc);\n};\nexports.emContactsListener = emContactsListener;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtTGlzdGVuZXIvZW1Db250YWN0c0xpc3RlbmVyLmpzIl0sIm5hbWVzIjpbInN0b3JlIiwiZW1Db250YWN0c0xpc3RlbmVyIiwiY2FsbGJhY2siLCJsaXN0ZW5lckV2ZW50TmFtZSIsImFkZE5ld0luZm9ybUZ1bmMiLCJwYXJhbXMiLCJjb21taXQiLCJpbmZvcm1UeXBlIiwiSU5GT1JNX1RZUEUiLCJDT05UQUNUUyIsImluZm9ybSIsInJldmVpdmVGcmllbmRJbnZpdGUiLCJjb250YWN0c0xpc3RlbkZ1bmMiLCJvbkNvbnRhY3RJbnZpdGVkIiwibXNnIiwiY29udGFjdHNJbmZvcm0iLCJPYmplY3QiLCJhc3NpZ24iLCJjaGF0VHlwZSIsIkNIQVRfVFlQRSIsIlNJTkdMRV9DSEFUIiwib25Db250YWN0RGVsZXRlZCIsIm9uQ29udGFjdEFkZGVkIiwib25Db250YWN0UmVmdXNlIiwib25Db250YWN0QWdyZWVkIiwiRU1DbGllbnQiLCJyZW1vdmVFdmVudEhhbmRsZXIiLCJIQU5ETEVSX0VWRU5UX05BTUUiLCJDT05UQUNUU19FVkVOVCIsImFkZEV2ZW50SGFuZGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFBNEI7QUFBQTtBQUM1QixhQUFZLGtCQUFrQixFQUFFQSxjQUFLO0FBQzlCLElBQU1DLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBa0IsQ0FBSUMsUUFBUSxFQUFFQyxpQkFBaUIsRUFBSztFQUNqRSxhQUFZLGVBQWU7RUFDM0IsSUFBTUMsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFnQixDQUFJQyxNQUFNLEVBQUs7SUFDbkNMLGNBQUssQ0FBQ00sTUFBTSxDQUFDLGdCQUFnQixFQUFFO01BQzdCQyxVQUFVLEVBQUVDLHFCQUFXLENBQUNDLFFBQVE7TUFDaENDLE1BQU0sRUFBRUw7SUFDVixDQUFDLENBQUM7RUFDSixDQUFDO0VBQ0Q7RUFDQSxJQUFNTSxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQW1CLENBQUlOLE1BQU0sRUFBSztJQUN0Q0wsY0FBSyxDQUFDTSxNQUFNLENBQUMsNEJBQTRCLEVBQUVELE1BQU0sQ0FBQztFQUNwRCxDQUFDO0VBQ0QsSUFBTU8sa0JBQWtCLEdBQUc7SUFDekI7SUFDQUMsZ0JBQWdCLEVBQUUsMEJBQVVDLEdBQUcsRUFBRTtNQUMvQixJQUFNQyxjQUFjLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFSCxHQUFHLENBQUM7TUFDN0NaLFFBQVEsSUFBSUEsUUFBUSxDQUFDYSxjQUFjLENBQUM7TUFDcENYLGdCQUFnQixtQkFBTVUsR0FBRyxFQUFHO01BQzVCSCxtQkFBbUI7UUFBR08sUUFBUSxFQUFFQyxtQkFBUyxDQUFDQztNQUFXLEdBQUtOLEdBQUcsRUFBRztJQUNsRSxDQUFDO0lBQ0Q7SUFDQU8sZ0JBQWdCLEVBQUUsMEJBQVVQLEdBQUcsRUFBRTtNQUMvQlosUUFBUSxJQUFJQSxRQUFRLENBQUNZLEdBQUcsQ0FBQztNQUN6QlYsZ0JBQWdCLENBQUNVLEdBQUcsQ0FBQztJQUN2QixDQUFDO0lBQ0Q7SUFDQVEsY0FBYyxFQUFFLHdCQUFVUixHQUFHLEVBQUU7TUFDN0JaLFFBQVEsSUFBSUEsUUFBUSxDQUFDWSxHQUFHLENBQUM7TUFDekJWLGdCQUFnQixDQUFDVSxHQUFHLENBQUM7SUFDdkIsQ0FBQztJQUNEO0lBQ0FTLGVBQWUsRUFBRSx5QkFBVVQsR0FBRyxFQUFFO01BQzlCWixRQUFRLElBQUlBLFFBQVEsQ0FBQ1ksR0FBRyxDQUFDO01BQ3pCVixnQkFBZ0IsQ0FBQ1UsR0FBRyxDQUFDO0lBQ3ZCLENBQUM7SUFDRDtJQUNBVSxlQUFlLEVBQUUseUJBQVVWLEdBQUcsRUFBRTtNQUM5QlosUUFBUSxJQUFJQSxRQUFRLENBQUNZLEdBQUcsQ0FBQztNQUN6QlYsZ0JBQWdCLENBQUNVLEdBQUcsQ0FBQztJQUN2QjtFQUNGLENBQUM7RUFDRFcsZUFBUSxDQUFDQyxrQkFBa0IsQ0FDekJ2QixpQkFBaUIsSUFBSXdCLDRCQUFrQixDQUFDQyxjQUFjLENBQ3ZEO0VBQ0RILGVBQVEsQ0FBQ0ksZUFBZSxDQUN0QjFCLGlCQUFpQixJQUFJd0IsNEJBQWtCLENBQUNDLGNBQWMsRUFDdERoQixrQkFBa0IsQ0FDbkI7QUFDSCxDQUFDO0FBQUMsZ0QiLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFTUNsaWVudCB9IGZyb20gJy4uL2luZGV4JztcbmltcG9ydCB7IEhBTkRMRVJfRVZFTlRfTkFNRSwgSU5GT1JNX1RZUEUsIENIQVRfVFlQRSB9IGZyb20gJy4uL2NvbnN0YW50JztcbmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJztcbmNvbnNvbGUubG9nKCc+Pj4+Pj52dWV4IHN0b3JlJywgc3RvcmUpO1xuZXhwb3J0IGNvbnN0IGVtQ29udGFjdHNMaXN0ZW5lciA9IChjYWxsYmFjaywgbGlzdGVuZXJFdmVudE5hbWUpID0+IHtcbiAgY29uc29sZS5sb2coJz4+Pj4+5aW95Y+L5YWz57O755uR5ZCs5oyC6L29Jyk7XG4gIGNvbnN0IGFkZE5ld0luZm9ybUZ1bmMgPSAocGFyYW1zKSA9PiB7XG4gICAgc3RvcmUuY29tbWl0KCdBRERfTkVXX0lORk9STScsIHtcbiAgICAgIGluZm9ybVR5cGU6IElORk9STV9UWVBFLkNPTlRBQ1RTLFxuICAgICAgaW5mb3JtOiBwYXJhbXMsXG4gICAgfSk7XG4gIH07XG4gIC8v5aSE55CG5paw6YKA6K+35pu05paw6Iez6YKA6K+35L+h5oGv57yT5a2Yc3RvcmVcbiAgY29uc3QgcmV2ZWl2ZUZyaWVuZEludml0ZSA9IChwYXJhbXMpID0+IHtcbiAgICBzdG9yZS5jb21taXQoJ0FERF9ORVdfUkVDRUlWRV9JTlZJVEVfTVNHJywgcGFyYW1zKTtcbiAgfTtcbiAgY29uc3QgY29udGFjdHNMaXN0ZW5GdW5jID0ge1xuICAgIC8vIOW9k+WJjeeUqOaIt+aUtuWIsOWlveWPi+ivt+axguOAgueUqOaItyBCIOWQkeeUqOaItyBBIOWPkemAgeWlveWPi+ivt+axgu+8jOeUqOaItyBBIOaUtuWIsOivpeS6i+S7tuOAglxuICAgIG9uQ29udGFjdEludml0ZWQ6IGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgIGNvbnN0IGNvbnRhY3RzSW5mb3JtID0gT2JqZWN0LmFzc2lnbih7fSwgbXNnKTtcbiAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKGNvbnRhY3RzSW5mb3JtKTtcbiAgICAgIGFkZE5ld0luZm9ybUZ1bmMoeyAuLi5tc2cgfSk7XG4gICAgICByZXZlaXZlRnJpZW5kSW52aXRlKHsgY2hhdFR5cGU6IENIQVRfVFlQRS5TSU5HTEVfQ0hBVCwgLi4ubXNnIH0pO1xuICAgIH0sXG4gICAgLy8g5b2T5YmN55So5oi36KKr5YW25LuW55So5oi35LuO6IGU57O75Lq65YiX6KGo5LiK56e76Zmk44CC55So5oi3IEIg5bCG55So5oi3IEEg5LuO6IGU57O75Lq65YiX6KGo5LiK5Yig6Zmk77yM55So5oi3IEEg5pS25Yiw6K+l5LqL5Lu244CCXG4gICAgb25Db250YWN0RGVsZXRlZDogZnVuY3Rpb24gKG1zZykge1xuICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2sobXNnKTtcbiAgICAgIGFkZE5ld0luZm9ybUZ1bmMobXNnKTtcbiAgICB9LFxuICAgIC8vIOW9k+WJjeeUqOaIt+aWsOWinuS6huiBlOezu+S6uuOAgueUqOaItyBCIOWQkeeUqOaItyBBIOWPkemAgeWlveWPi+ivt+axgu+8jOeUqOaItyBBIOWQjOaEj+ivpeivt+axgu+8jOeUqOaItyBBIOaUtuWIsOivpeS6i+S7tu+8jOiAjOeUqOaItyBCIOaUtuWIsCBgb25Db250YWN0QWdyZWVkYCDkuovku7bjgIJcbiAgICBvbkNvbnRhY3RBZGRlZDogZnVuY3Rpb24gKG1zZykge1xuICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2sobXNnKTtcbiAgICAgIGFkZE5ld0luZm9ybUZ1bmMobXNnKTtcbiAgICB9LFxuICAgIC8vIOW9k+WJjeeUqOaIt+WPkemAgeeahOWlveWPi+ivt+axguiiq+aLkue7neOAgueUqOaItyBBIOWQkeeUqOaItyBCIOWPkemAgeWlveWPi+ivt+axgu+8jOeUqOaItyBCIOaUtuWIsOWlveWPi+ivt+axguWQju+8jOaLkue7neWKoOWlveWPi++8jOWImeeUqOaItyBBIOaUtuWIsOivpeS6i+S7tuOAglxuICAgIG9uQ29udGFjdFJlZnVzZTogZnVuY3Rpb24gKG1zZykge1xuICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2sobXNnKTtcbiAgICAgIGFkZE5ld0luZm9ybUZ1bmMobXNnKTtcbiAgICB9LFxuICAgIC8vIOW9k+WJjeeUqOaIt+WPkemAgeeahOWlveWPi+ivt+axgue7j+i/h+S6huWvueaWueWQjOaEj+OAgueUqOaItyBBIOWQkeeUqOaItyBCIOWPkemAgeWlveWPi+ivt+axgu+8jOeUqOaItyBCIOaUtuWIsOWlveWPi+ivt+axguWQju+8jOWQjOaEj+WKoOWlveWPi++8jOWImeeUqOaItyBBIOaUtuWIsOivpeS6i+S7tuOAglxuICAgIG9uQ29udGFjdEFncmVlZDogZnVuY3Rpb24gKG1zZykge1xuICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2sobXNnKTtcbiAgICAgIGFkZE5ld0luZm9ybUZ1bmMobXNnKTtcbiAgICB9LFxuICB9O1xuICBFTUNsaWVudC5yZW1vdmVFdmVudEhhbmRsZXIoXG4gICAgbGlzdGVuZXJFdmVudE5hbWUgfHwgSEFORExFUl9FVkVOVF9OQU1FLkNPTlRBQ1RTX0VWRU5UXG4gICk7XG4gIEVNQ2xpZW50LmFkZEV2ZW50SGFuZGxlcihcbiAgICBsaXN0ZW5lckV2ZW50TmFtZSB8fCBIQU5ETEVSX0VWRU5UX05BTUUuQ09OVEFDVFNfRVZFTlQsXG4gICAgY29udGFjdHNMaXN0ZW5GdW5jXG4gICk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///55\n");

/***/ }),
/* 56 */
/*!***********************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emListener/emMountGlobalListener.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emMountGlobalListener = void 0;\nvar _emContactsListener = __webpack_require__(/*! ./emContactsListener */ 55);\nvar _emGroupListener = __webpack_require__(/*! ./emGroupListener */ 57);\nvar _emMessagesListener = __webpack_require__(/*! ./emMessagesListener */ 58);\nvar _emErrorListener = __webpack_require__(/*! ./emErrorListener */ 59);\nvar emMountGlobalListener = function emMountGlobalListener() {\n  var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n  if (typeof cb === 'function') {\n    // 参数是一个函数\n    (0, _emMessagesListener.emMessagesListener)(cb);\n    (0, _emContactsListener.emContactsListener)(cb);\n    (0, _emGroupListener.emGroupListener)(cb);\n    (0, _emErrorListener.emErrorListener)(cb);\n  } else {\n    // 参数不是一个函数\n    __f__(\"error\", '传入的参数不是一个函数', \" at EaseIM/emListener/emMountGlobalListener.js:14\");\n  }\n  __f__(\"log\", '>>>>全局监听', \" at EaseIM/emListener/emMountGlobalListener.js:16\");\n};\nexports.emMountGlobalListener = emMountGlobalListener;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtTGlzdGVuZXIvZW1Nb3VudEdsb2JhbExpc3RlbmVyLmpzIl0sIm5hbWVzIjpbImVtTW91bnRHbG9iYWxMaXN0ZW5lciIsImNiIiwiZW1NZXNzYWdlc0xpc3RlbmVyIiwiZW1Db250YWN0c0xpc3RlbmVyIiwiZW1Hcm91cExpc3RlbmVyIiwiZW1FcnJvckxpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLElBQU1BLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBcUIsR0FBc0I7RUFBQSxJQUFsQkMsRUFBRSx1RUFBRyxZQUFNLENBQUMsQ0FBQztFQUNqRCxJQUFJLE9BQU9BLEVBQUUsS0FBSyxVQUFVLEVBQUU7SUFDNUI7SUFDQSxJQUFBQyxzQ0FBa0IsRUFBQ0QsRUFBRSxDQUFDO0lBQ3RCLElBQUFFLHNDQUFrQixFQUFDRixFQUFFLENBQUM7SUFDdEIsSUFBQUcsZ0NBQWUsRUFBQ0gsRUFBRSxDQUFDO0lBQ25CLElBQUFJLGdDQUFlLEVBQUNKLEVBQUUsQ0FBQztFQUNyQixDQUFDLE1BQU07SUFDTDtJQUNBLGVBQWMsYUFBYTtFQUM3QjtFQUNBLGFBQVksVUFBVTtBQUN4QixDQUFDO0FBQUMsc0QiLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbUNvbnRhY3RzTGlzdGVuZXIgfSBmcm9tICcuL2VtQ29udGFjdHNMaXN0ZW5lcic7XG5pbXBvcnQgeyBlbUdyb3VwTGlzdGVuZXIgfSBmcm9tICcuL2VtR3JvdXBMaXN0ZW5lcic7XG5pbXBvcnQgeyBlbU1lc3NhZ2VzTGlzdGVuZXIgfSBmcm9tICcuL2VtTWVzc2FnZXNMaXN0ZW5lcic7XG5pbXBvcnQgeyBlbUVycm9yTGlzdGVuZXIgfSBmcm9tICcuL2VtRXJyb3JMaXN0ZW5lcic7XG5leHBvcnQgY29uc3QgZW1Nb3VudEdsb2JhbExpc3RlbmVyID0gKGNiID0gKCkgPT4ge30pID0+IHtcbiAgaWYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIOWPguaVsOaYr+S4gOS4quWHveaVsFxuICAgIGVtTWVzc2FnZXNMaXN0ZW5lcihjYik7XG4gICAgZW1Db250YWN0c0xpc3RlbmVyKGNiKTtcbiAgICBlbUdyb3VwTGlzdGVuZXIoY2IpO1xuICAgIGVtRXJyb3JMaXN0ZW5lcihjYik7XG4gIH0gZWxzZSB7XG4gICAgLy8g5Y+C5pWw5LiN5piv5LiA5Liq5Ye95pWwXG4gICAgY29uc29sZS5lcnJvcign5Lyg5YWl55qE5Y+C5pWw5LiN5piv5LiA5Liq5Ye95pWwJyk7XG4gIH1cbiAgY29uc29sZS5sb2coJz4+Pj7lhajlsYDnm5HlkKwnKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///56\n");

/***/ }),
/* 57 */
/*!*****************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emListener/emGroupListener.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emGroupListener = void 0;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar _constant = __webpack_require__(/*! ../constant */ 40);\nvar _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 46));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar emGroupListener = function emGroupListener(callback, listenerEventName) {\n  __f__(\"log\", '>>>>群组事件监听挂载', \" at EaseIM/emListener/emGroupListener.js:5\");\n  //处理新邀请更新至邀请信息缓存store\n  var reveiveFriendInvite = function reveiveFriendInvite(params) {\n    _store.default.commit('ADD_NEW_RECEIVE_INVITE_MSG', params);\n  };\n  var groupListenFunc = {\n    onGroupEvent: function onGroupEvent(event) {\n      __f__(\"log\", '>>>>群组事件监听触发', event, \" at EaseIM/emListener/emGroupListener.js:12\");\n      var operation = event.operation;\n      callback(_constant.HANDLER_EVENT_NAME.GROUP_EVENT, event);\n      switch (operation) {\n        // 有新群组创建。群主的其他设备会收到该回调。\n        case 'create':\n          break;\n        // 关闭群组一键禁言。群组所有成员（除操作者外）会收到该回调。\n        case 'unmuteAllMembers':\n          break;\n        // 开启群组一键禁言。群组所有成员（除操作者外）会收到该回调。\n        case 'muteAllMembers':\n          break;\n        // 有成员从群白名单中移出。被移出的成员及群主和群管理员（除操作者外）会收到该回调。\n        case 'removeAllowlistMember':\n          break;\n        // 有成员添加至群白名单。被添加的成员及群主和群管理员（除操作者外）会收到该回调。\n        case 'addUserToAllowlist':\n          break;\n        // 删除群共享文件。群组所有成员会收到该回调。\n        case 'deleteFile':\n          break;\n        // 上传群共享文件。群组所有成员会收到该回调。\n        case 'uploadFile':\n          break;\n        // 删除群公告。群组所有成员会收到该回调。\n        case 'deleteAnnouncement':\n          break;\n        // 更新群公告。群组所有成员会收到该回调。\n        case 'updateAnnouncement':\n          break;\n        // 更新群组信息，如群组名称和群组描述。群组所有成员会收到该回调。\n        case 'updateInfo':\n          break;\n        // 有成员被移出禁言列表。被解除禁言的成员及群主和群管理员（除操作者外）会收到该回调。\n        case 'unmuteMember':\n          break;\n        // 有群组成员被加入禁言列表。被禁言的成员及群主和群管理员（除操作者外）会收到该回调。\n        case 'muteMember':\n          break;\n        // 有管理员被移出管理员列表。群主、被移除的管理员和其他管理员会收到该回调。\n        case 'removeAdmin':\n          break;\n        // 设置管理员。群主、新管理员和其他管理员会收到该回调。\n        case 'setAdmin':\n          break;\n        // 转让群组。原群主和新群主会收到该回调。\n        case 'changeOwner':\n          break;\n        // 群组所有者和管理员拉用户进群时，无需用户确认时会触发该回调。被拉进群的用户会收到该回调。\n        case 'directJoined':\n          break;\n        // 群成员主动退出群组。除了退群的成员，其他群成员会收到该回调。\n        case 'memberAbsence':\n          break;\n        // 有用户加入群组。除了新成员，其他群成员会收到该回调。\n        case 'memberPresence':\n          break;\n        // 用户被移出群组。被踢出群组的成员会收到该回调。\n        case 'removeMember':\n          break;\n        // 当前用户的入群邀请被拒绝。邀请人会收到该回调。例如，用户 B 拒绝了用户 A 的入群邀请，用户 A 会收到该回调。\n        case 'rejectInvite':\n          break;\n        // 当前用户的入群邀请被接受。邀请人会收到该回调。例如，用户 B 接受了用户 A 的入群邀请，则用户 A 会收到该回调。\n        case 'acceptInvite':\n          break;\n        // 当前用户收到了入群邀请。受邀用户会收到该回调。例如，用户 B 邀请用户 A 入群，则用户 A 会收到该回调。\n        case 'inviteToJoin':\n          {\n            reveiveFriendInvite(_objectSpread({\n              chatType: _constant.CHAT_TYPE.GROUP_CHAT\n            }, event));\n          }\n          break;\n        // 当前用户的入群申请被拒绝。申请人会收到该回调。例如，用户 B 拒绝用户 A 的入群申请后，用户 A 会收到该回调。\n        case 'joinPublicGroupDeclined':\n          break;\n        // 当前用户的入群申请被接受。申请人会收到该回调。例如，用户 B 接受用户 A 的入群申请后，用户 A 会收到该回调。\n        case 'acceptRequest':\n          break;\n        // 当前用户发送入群申请。群主和群管理员会收到该回调。\n        case 'requestToJoin':\n          break;\n        // 群组被解散。群主解散群组时，所有群成员均会收到该回调。\n        case 'destroy':\n          break;\n        // 设置群成员的自定义属性。群组内其他成员均会收到该回调。\n        case 'memberAttributesUpdate':\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  _index.EMClient.removeEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.GROUP_EVENT);\n  _index.EMClient.addEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.GROUP_EVENT, groupListenFunc);\n};\nexports.emGroupListener = emGroupListener;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///57\n");

/***/ }),
/* 58 */
/*!********************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emListener/emMessagesListener.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 1);\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emMessagesListener = void 0;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 2));\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 46));\nvar _constant = __webpack_require__(/*! ../constant */ 40);\nvar _utils = __webpack_require__(/*! @/EaseIM/utils */ 42);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar emMessagesListener = function emMessagesListener(callback, listenerEventName) {\n  __f__(\"log\", '消息监听已挂载', \" at EaseIM/emListener/emMessagesListener.js:6\");\n  //处理展示类型消息（txt、image、file...）\n  var handleReciveDisPlayMessages = function handleReciveDisPlayMessages(message) {\n    __f__(\"log\", '>>>>开始处理收到的消息', message, \" at EaseIM/emListener/emMessagesListener.js:9\");\n    var key = (0, _utils.getEMKey)(_index.EMClient.user, message.from, message.to, message.chatType);\n    //向消息集合中添加新消息\n    _store.default.commit('UPDATE_MESSAGE_COLLECTION', {\n      key: key,\n      message: message\n    });\n    _store.default.commit('UPDATE_CONVERSATION_ITEM', {\n      conversationId: key,\n      lastMessage: message\n    });\n    // messageStore.updateMessageCollection(key, message);\n    // conversationStore.updateConversationLastMessage(key, message);\n    // }\n  };\n  //处理回执类型消息\n  var handleReciveAckMessages = function handleReciveAckMessages(message) {\n    __f__(\"log\", '>>>>开始处理回执类型消息', message, \" at EaseIM/emListener/emMessagesListener.js:31\");\n  };\n  //处理撤回类型消息\n  var handleReciveRecallMessage = function handleReciveRecallMessage(message) {\n    __f__(\"log\", '>>>>开始处理撤回类型消息', \" at EaseIM/emListener/emMessagesListener.js:35\");\n  };\n  var messagesListenFunc = {\n    // 当前用户收到文本消息。\n    onTextMessage: function onTextMessage(message) {\n      handleReciveDisPlayMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到图片消息。\n    onImageMessage: function onImageMessage(message) {\n      handleReciveDisPlayMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到透传消息。\n    onCmdMessage: function onCmdMessage(message) {\n      handleReciveDisPlayMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到语音消息。\n    onAudioMessage: function onAudioMessage(message) {\n      handleReciveDisPlayMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到位置消息。\n    onLocationMessage: function onLocationMessage(message) {\n      handleReciveDisPlayMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到文件消息。\n    onFileMessage: function onFileMessage(message) {\n      handleReciveDisPlayMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到自定义消息。\n    onCustomMessage: function onCustomMessage(message) {\n      handleReciveDisPlayMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到视频消息。\n    onVideoMessage: function onVideoMessage(message) {\n      handleReciveDisPlayMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到的消息被消息发送方撤回。\n    onRecallMessage: function onRecallMessage(message) {\n      handleReciveRecallMessage(_objectSpread({}, message));\n    },\n    // 当前用户发送的消息被接收方收到。\n    onReceivedMessage: function onReceivedMessage(message) {\n      handleReciveAckMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到消息送达回执。\n    onDeliveredMessage: function onDeliveredMessage(message) {\n      handleReciveAckMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到消息已读回执。\n    onReadMessage: function onReadMessage(message) {\n      handleReciveAckMessages(_objectSpread({}, message));\n    },\n    // 当前用户收到会话已读回执。\n    onChannelMessage: function onChannelMessage(message) {\n      handleReciveAckMessages(_objectSpread({}, message));\n    }\n  };\n  _index.EMClient.removeEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.MESSAGES_EVENT);\n  _index.EMClient.addEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.MESSAGES_EVENT, messagesListenFunc);\n};\nexports.emMessagesListener = emMessagesListener;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///58\n");

/***/ }),
/* 59 */
/*!*****************************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/EaseIM/emListener/emErrorListener.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emErrorListener = void 0;\nvar _index = __webpack_require__(/*! ../index */ 16);\nvar _constant = __webpack_require__(/*! ../constant */ 40);\nvar emErrorListener = function emErrorListener(callback, listenerEventName) {\n  __f__(\"log\", '>>>>error监听已挂载', \" at EaseIM/emListener/emErrorListener.js:4\");\n  var errorListenFunc = {\n    onError: function onError(e) {\n      __f__(\"log\", '>>>>>onError', e, \" at EaseIM/emListener/emErrorListener.js:7\");\n      callback && callback(_constant.HANDLER_EVENT_NAME.ERROR_EVENT, e);\n    }\n  };\n  _index.EMClient.removeEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.ERROR_EVENT);\n  _index.EMClient.addEventHandler(listenerEventName || _constant.HANDLER_EVENT_NAME.ERROR_EVENT, errorListenFunc);\n};\nexports.emErrorListener = emErrorListener;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vRWFzZUlNL2VtTGlzdGVuZXIvZW1FcnJvckxpc3RlbmVyLmpzIl0sIm5hbWVzIjpbImVtRXJyb3JMaXN0ZW5lciIsImNhbGxiYWNrIiwibGlzdGVuZXJFdmVudE5hbWUiLCJlcnJvckxpc3RlbkZ1bmMiLCJvbkVycm9yIiwiZSIsIkhBTkRMRVJfRVZFTlRfTkFNRSIsIkVSUk9SX0VWRU5UIiwiRU1DbGllbnQiLCJyZW1vdmVFdmVudEhhbmRsZXIiLCJhZGRFdmVudEhhbmRsZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDTyxJQUFNQSxlQUFlLEdBQUcsU0FBbEJBLGVBQWUsQ0FBSUMsUUFBUSxFQUFFQyxpQkFBaUIsRUFBSztFQUM5RCxhQUFZLGdCQUFnQjtFQUM1QixJQUFNQyxlQUFlLEdBQUc7SUFDdEJDLE9BQU8sRUFBRSxpQkFBQ0MsQ0FBQyxFQUFLO01BQ2QsYUFBWSxjQUFjLEVBQUVBLENBQUM7TUFDN0JKLFFBQVEsSUFBSUEsUUFBUSxDQUFDSyw0QkFBa0IsQ0FBQ0MsV0FBVyxFQUFFRixDQUFDLENBQUM7SUFDekQ7RUFDRixDQUFDO0VBQ0RHLGVBQVEsQ0FBQ0Msa0JBQWtCLENBQ3pCUCxpQkFBaUIsSUFBSUksNEJBQWtCLENBQUNDLFdBQVcsQ0FDcEQ7RUFDREMsZUFBUSxDQUFDRSxlQUFlLENBQ3RCUixpQkFBaUIsSUFBSUksNEJBQWtCLENBQUNDLFdBQVcsRUFDbkRKLGVBQWUsQ0FDaEI7QUFDSCxDQUFDO0FBQUMsMEMiLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFTUNsaWVudCB9IGZyb20gJy4uL2luZGV4JztcbmltcG9ydCB7IEhBTkRMRVJfRVZFTlRfTkFNRSB9IGZyb20gJy4uL2NvbnN0YW50JztcbmV4cG9ydCBjb25zdCBlbUVycm9yTGlzdGVuZXIgPSAoY2FsbGJhY2ssIGxpc3RlbmVyRXZlbnROYW1lKSA9PiB7XG4gIGNvbnNvbGUubG9nKCc+Pj4+ZXJyb3Lnm5HlkKzlt7LmjILovb0nKTtcbiAgY29uc3QgZXJyb3JMaXN0ZW5GdW5jID0ge1xuICAgIG9uRXJyb3I6IChlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnPj4+Pj5vbkVycm9yJywgZSk7XG4gICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhIQU5ETEVSX0VWRU5UX05BTUUuRVJST1JfRVZFTlQsIGUpO1xuICAgIH0sXG4gIH07XG4gIEVNQ2xpZW50LnJlbW92ZUV2ZW50SGFuZGxlcihcbiAgICBsaXN0ZW5lckV2ZW50TmFtZSB8fCBIQU5ETEVSX0VWRU5UX05BTUUuRVJST1JfRVZFTlRcbiAgKTtcbiAgRU1DbGllbnQuYWRkRXZlbnRIYW5kbGVyKFxuICAgIGxpc3RlbmVyRXZlbnROYW1lIHx8IEhBTkRMRVJfRVZFTlRfTkFNRS5FUlJPUl9FVkVOVCxcbiAgICBlcnJvckxpc3RlbkZ1bmNcbiAgKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///59\n");

/***/ }),
/* 60 */
/*!*****************************************************************************************!*\
  !*** /Users/hfp/Documents/HBuilderProjects/cunjin-socket-test/uni.promisify.adaptor.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 4);\nuni.addInterceptor({\n  returnValue: function returnValue(res) {\n    if (!(!!res && (_typeof(res) === \"object\" || typeof res === \"function\") && typeof res.then === \"function\")) {\n      return res;\n    }\n    return new Promise(function (resolve, reject) {\n      res.then(function (res) {\n        return res[0] ? reject(res[0]) : resolve(res[1]);\n      });\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vdW5pLnByb21pc2lmeS5hZGFwdG9yLmpzIl0sIm5hbWVzIjpbInVuaSIsImFkZEludGVyY2VwdG9yIiwicmV0dXJuVmFsdWUiLCJyZXMiLCJ0aGVuIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiXSwibWFwcGluZ3MiOiI7QUFBQUEsR0FBRyxDQUFDQyxjQUFjLENBQUM7RUFDakJDLFdBQVcsdUJBQUVDLEdBQUcsRUFBRTtJQUNoQixJQUFJLEVBQUUsQ0FBQyxDQUFDQSxHQUFHLEtBQUssUUFBT0EsR0FBRyxNQUFLLFFBQVEsSUFBSSxPQUFPQSxHQUFHLEtBQUssVUFBVSxDQUFDLElBQUksT0FBT0EsR0FBRyxDQUFDQyxJQUFJLEtBQUssVUFBVSxDQUFDLEVBQUU7TUFDeEcsT0FBT0QsR0FBRztJQUNaO0lBQ0EsT0FBTyxJQUFJRSxPQUFPLENBQUMsVUFBQ0MsT0FBTyxFQUFFQyxNQUFNLEVBQUs7TUFDdENKLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDLFVBQUNELEdBQUc7UUFBQSxPQUFLQSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUdJLE1BQU0sQ0FBQ0osR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUdHLE9BQU8sQ0FBQ0gsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO01BQUEsRUFBQztJQUM5RCxDQUFDLENBQUM7RUFDSjtBQUNGLENBQUMsQ0FBQyIsImZpbGUiOiI2MC5qcyIsInNvdXJjZXNDb250ZW50IjpbInVuaS5hZGRJbnRlcmNlcHRvcih7XG4gIHJldHVyblZhbHVlIChyZXMpIHtcbiAgICBpZiAoISghIXJlcyAmJiAodHlwZW9mIHJlcyA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgcmVzID09PSBcImZ1bmN0aW9uXCIpICYmIHR5cGVvZiByZXMudGhlbiA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHJlcy50aGVuKChyZXMpID0+IHJlc1swXSA/IHJlamVjdChyZXNbMF0pIDogcmVzb2x2ZShyZXNbMV0pKTtcbiAgICB9KTtcbiAgfSxcbn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///60\n");

/***/ })
],[[0,"app-config"]]]);